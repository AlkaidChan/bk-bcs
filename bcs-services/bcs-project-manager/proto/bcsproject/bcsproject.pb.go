// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bcsproject.proto

package bcsproject

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Project struct {
	CreateTime           string   `protobuf:"bytes,1,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string   `protobuf:"bytes,2,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Creator              string   `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator,omitempty"`
	Updater              string   `protobuf:"bytes,4,opt,name=updater,proto3" json:"updater,omitempty"`
	Managers             string   `protobuf:"bytes,5,opt,name=managers,proto3" json:"managers,omitempty"`
	ProjectID            string   `protobuf:"bytes,6,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Name                 string   `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	ProjectCode          string   `protobuf:"bytes,8,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	UseBKRes             bool     `protobuf:"varint,9,opt,name=useBKRes,proto3" json:"useBKRes,omitempty"`
	Description          string   `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	IsOffline            bool     `protobuf:"varint,11,opt,name=isOffline,proto3" json:"isOffline,omitempty"`
	Kind                 string   `protobuf:"bytes,12,opt,name=kind,proto3" json:"kind,omitempty"`
	BusinessID           string   `protobuf:"bytes,13,opt,name=businessID,proto3" json:"businessID,omitempty"`
	IsSecret             bool     `protobuf:"varint,14,opt,name=isSecret,proto3" json:"isSecret,omitempty"`
	ProjectType          uint32   `protobuf:"varint,15,opt,name=projectType,proto3" json:"projectType,omitempty"`
	DeployType           uint32   `protobuf:"varint,16,opt,name=deployType,proto3" json:"deployType,omitempty"`
	BGID                 string   `protobuf:"bytes,17,opt,name=BGID,proto3" json:"BGID,omitempty"`
	BGName               string   `protobuf:"bytes,18,opt,name=BGName,proto3" json:"BGName,omitempty"`
	DeptID               string   `protobuf:"bytes,19,opt,name=deptID,proto3" json:"deptID,omitempty"`
	DeptName             string   `protobuf:"bytes,20,opt,name=deptName,proto3" json:"deptName,omitempty"`
	CenterID             string   `protobuf:"bytes,21,opt,name=centerID,proto3" json:"centerID,omitempty"`
	CenterName           string   `protobuf:"bytes,22,opt,name=centerName,proto3" json:"centerName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}
func (*Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{0}
}

func (m *Project) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Project.Unmarshal(m, b)
}
func (m *Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Project.Marshal(b, m, deterministic)
}
func (m *Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Project.Merge(m, src)
}
func (m *Project) XXX_Size() int {
	return xxx_messageInfo_Project.Size(m)
}
func (m *Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Project proto.InternalMessageInfo

func (m *Project) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *Project) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *Project) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Project) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *Project) GetManagers() string {
	if m != nil {
		return m.Managers
	}
	return ""
}

func (m *Project) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *Project) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Project) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *Project) GetUseBKRes() bool {
	if m != nil {
		return m.UseBKRes
	}
	return false
}

func (m *Project) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Project) GetIsOffline() bool {
	if m != nil {
		return m.IsOffline
	}
	return false
}

func (m *Project) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Project) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *Project) GetIsSecret() bool {
	if m != nil {
		return m.IsSecret
	}
	return false
}

func (m *Project) GetProjectType() uint32 {
	if m != nil {
		return m.ProjectType
	}
	return 0
}

func (m *Project) GetDeployType() uint32 {
	if m != nil {
		return m.DeployType
	}
	return 0
}

func (m *Project) GetBGID() string {
	if m != nil {
		return m.BGID
	}
	return ""
}

func (m *Project) GetBGName() string {
	if m != nil {
		return m.BGName
	}
	return ""
}

func (m *Project) GetDeptID() string {
	if m != nil {
		return m.DeptID
	}
	return ""
}

func (m *Project) GetDeptName() string {
	if m != nil {
		return m.DeptName
	}
	return ""
}

func (m *Project) GetCenterID() string {
	if m != nil {
		return m.CenterID
	}
	return ""
}

func (m *Project) GetCenterName() string {
	if m != nil {
		return m.CenterName
	}
	return ""
}

type CreateProjectRequest struct {
	CreateTime           string   `protobuf:"bytes,1,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Creator              string   `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	ProjectID            string   `protobuf:"bytes,3,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	ProjectCode          string   `protobuf:"bytes,5,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	UseBKRes             bool     `protobuf:"varint,6,opt,name=useBKRes,proto3" json:"useBKRes,omitempty"`
	Description          string   `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	IsOffline            bool     `protobuf:"varint,8,opt,name=isOffline,proto3" json:"isOffline,omitempty"`
	Kind                 string   `protobuf:"bytes,9,opt,name=kind,proto3" json:"kind,omitempty"`
	BusinessID           string   `protobuf:"bytes,10,opt,name=businessID,proto3" json:"businessID,omitempty"`
	IsSecret             bool     `protobuf:"varint,11,opt,name=isSecret,proto3" json:"isSecret,omitempty"`
	ProjectType          uint32   `protobuf:"varint,12,opt,name=projectType,proto3" json:"projectType,omitempty"`
	DeployType           uint32   `protobuf:"varint,13,opt,name=deployType,proto3" json:"deployType,omitempty"`
	BGID                 string   `protobuf:"bytes,14,opt,name=BGID,proto3" json:"BGID,omitempty"`
	BGName               string   `protobuf:"bytes,15,opt,name=BGName,proto3" json:"BGName,omitempty"`
	DeptID               string   `protobuf:"bytes,16,opt,name=deptID,proto3" json:"deptID,omitempty"`
	DeptName             string   `protobuf:"bytes,17,opt,name=deptName,proto3" json:"deptName,omitempty"`
	CenterID             string   `protobuf:"bytes,18,opt,name=centerID,proto3" json:"centerID,omitempty"`
	CenterName           string   `protobuf:"bytes,19,opt,name=centerName,proto3" json:"centerName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateProjectRequest) Reset()         { *m = CreateProjectRequest{} }
func (m *CreateProjectRequest) String() string { return proto.CompactTextString(m) }
func (*CreateProjectRequest) ProtoMessage()    {}
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{1}
}

func (m *CreateProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProjectRequest.Unmarshal(m, b)
}
func (m *CreateProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProjectRequest.Marshal(b, m, deterministic)
}
func (m *CreateProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProjectRequest.Merge(m, src)
}
func (m *CreateProjectRequest) XXX_Size() int {
	return xxx_messageInfo_CreateProjectRequest.Size(m)
}
func (m *CreateProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProjectRequest proto.InternalMessageInfo

func (m *CreateProjectRequest) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *CreateProjectRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CreateProjectRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *CreateProjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateProjectRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *CreateProjectRequest) GetUseBKRes() bool {
	if m != nil {
		return m.UseBKRes
	}
	return false
}

func (m *CreateProjectRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateProjectRequest) GetIsOffline() bool {
	if m != nil {
		return m.IsOffline
	}
	return false
}

func (m *CreateProjectRequest) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *CreateProjectRequest) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *CreateProjectRequest) GetIsSecret() bool {
	if m != nil {
		return m.IsSecret
	}
	return false
}

func (m *CreateProjectRequest) GetProjectType() uint32 {
	if m != nil {
		return m.ProjectType
	}
	return 0
}

func (m *CreateProjectRequest) GetDeployType() uint32 {
	if m != nil {
		return m.DeployType
	}
	return 0
}

func (m *CreateProjectRequest) GetBGID() string {
	if m != nil {
		return m.BGID
	}
	return ""
}

func (m *CreateProjectRequest) GetBGName() string {
	if m != nil {
		return m.BGName
	}
	return ""
}

func (m *CreateProjectRequest) GetDeptID() string {
	if m != nil {
		return m.DeptID
	}
	return ""
}

func (m *CreateProjectRequest) GetDeptName() string {
	if m != nil {
		return m.DeptName
	}
	return ""
}

func (m *CreateProjectRequest) GetCenterID() string {
	if m != nil {
		return m.CenterID
	}
	return ""
}

func (m *CreateProjectRequest) GetCenterName() string {
	if m != nil {
		return m.CenterName
	}
	return ""
}

type GetProjectRequest struct {
	ProjectIDOrCode      string   `protobuf:"bytes,1,opt,name=projectIDOrCode,proto3" json:"projectIDOrCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProjectRequest) Reset()         { *m = GetProjectRequest{} }
func (m *GetProjectRequest) String() string { return proto.CompactTextString(m) }
func (*GetProjectRequest) ProtoMessage()    {}
func (*GetProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{2}
}

func (m *GetProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectRequest.Unmarshal(m, b)
}
func (m *GetProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectRequest.Marshal(b, m, deterministic)
}
func (m *GetProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectRequest.Merge(m, src)
}
func (m *GetProjectRequest) XXX_Size() int {
	return xxx_messageInfo_GetProjectRequest.Size(m)
}
func (m *GetProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectRequest proto.InternalMessageInfo

func (m *GetProjectRequest) GetProjectIDOrCode() string {
	if m != nil {
		return m.ProjectIDOrCode
	}
	return ""
}

type UpdateProjectRequest struct {
	ProjectID            string              `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Name                 string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Updater              string              `protobuf:"bytes,3,opt,name=updater,proto3" json:"updater,omitempty"`
	UseBKRes             *wrappers.BoolValue `protobuf:"bytes,4,opt,name=useBKRes,proto3" json:"useBKRes,omitempty"`
	Description          string              `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	IsOffline            *wrappers.BoolValue `protobuf:"bytes,6,opt,name=isOffline,proto3" json:"isOffline,omitempty"`
	Kind                 string              `protobuf:"bytes,7,opt,name=kind,proto3" json:"kind,omitempty"`
	BusinessID           string              `protobuf:"bytes,8,opt,name=businessID,proto3" json:"businessID,omitempty"`
	IsSecret             *wrappers.BoolValue `protobuf:"bytes,9,opt,name=isSecret,proto3" json:"isSecret,omitempty"`
	DeployType           uint32              `protobuf:"varint,10,opt,name=deployType,proto3" json:"deployType,omitempty"`
	ProjectType          uint32              `protobuf:"varint,11,opt,name=projectType,proto3" json:"projectType,omitempty"`
	BGID                 string              `protobuf:"bytes,12,opt,name=BGID,proto3" json:"BGID,omitempty"`
	BGName               string              `protobuf:"bytes,13,opt,name=BGName,proto3" json:"BGName,omitempty"`
	DeptID               string              `protobuf:"bytes,14,opt,name=deptID,proto3" json:"deptID,omitempty"`
	DeptName             string              `protobuf:"bytes,15,opt,name=deptName,proto3" json:"deptName,omitempty"`
	CenterID             string              `protobuf:"bytes,16,opt,name=centerID,proto3" json:"centerID,omitempty"`
	CenterName           string              `protobuf:"bytes,17,opt,name=centerName,proto3" json:"centerName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *UpdateProjectRequest) Reset()         { *m = UpdateProjectRequest{} }
func (m *UpdateProjectRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateProjectRequest) ProtoMessage()    {}
func (*UpdateProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{3}
}

func (m *UpdateProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProjectRequest.Unmarshal(m, b)
}
func (m *UpdateProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProjectRequest.Marshal(b, m, deterministic)
}
func (m *UpdateProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProjectRequest.Merge(m, src)
}
func (m *UpdateProjectRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateProjectRequest.Size(m)
}
func (m *UpdateProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProjectRequest proto.InternalMessageInfo

func (m *UpdateProjectRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *UpdateProjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateProjectRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

func (m *UpdateProjectRequest) GetUseBKRes() *wrappers.BoolValue {
	if m != nil {
		return m.UseBKRes
	}
	return nil
}

func (m *UpdateProjectRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdateProjectRequest) GetIsOffline() *wrappers.BoolValue {
	if m != nil {
		return m.IsOffline
	}
	return nil
}

func (m *UpdateProjectRequest) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *UpdateProjectRequest) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *UpdateProjectRequest) GetIsSecret() *wrappers.BoolValue {
	if m != nil {
		return m.IsSecret
	}
	return nil
}

func (m *UpdateProjectRequest) GetDeployType() uint32 {
	if m != nil {
		return m.DeployType
	}
	return 0
}

func (m *UpdateProjectRequest) GetProjectType() uint32 {
	if m != nil {
		return m.ProjectType
	}
	return 0
}

func (m *UpdateProjectRequest) GetBGID() string {
	if m != nil {
		return m.BGID
	}
	return ""
}

func (m *UpdateProjectRequest) GetBGName() string {
	if m != nil {
		return m.BGName
	}
	return ""
}

func (m *UpdateProjectRequest) GetDeptID() string {
	if m != nil {
		return m.DeptID
	}
	return ""
}

func (m *UpdateProjectRequest) GetDeptName() string {
	if m != nil {
		return m.DeptName
	}
	return ""
}

func (m *UpdateProjectRequest) GetCenterID() string {
	if m != nil {
		return m.CenterID
	}
	return ""
}

func (m *UpdateProjectRequest) GetCenterName() string {
	if m != nil {
		return m.CenterName
	}
	return ""
}

type DeleteProjectRequest struct {
	ProjectID            string   `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteProjectRequest) Reset()         { *m = DeleteProjectRequest{} }
func (m *DeleteProjectRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteProjectRequest) ProtoMessage()    {}
func (*DeleteProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{4}
}

func (m *DeleteProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteProjectRequest.Unmarshal(m, b)
}
func (m *DeleteProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteProjectRequest.Marshal(b, m, deterministic)
}
func (m *DeleteProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProjectRequest.Merge(m, src)
}
func (m *DeleteProjectRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteProjectRequest.Size(m)
}
func (m *DeleteProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProjectRequest proto.InternalMessageInfo

func (m *DeleteProjectRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

type ProjectResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *Project `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string   `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	WebAnnotations       *Perms   `protobuf:"bytes,5,opt,name=webAnnotations,proto3" json:"webAnnotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProjectResponse) Reset()         { *m = ProjectResponse{} }
func (m *ProjectResponse) String() string { return proto.CompactTextString(m) }
func (*ProjectResponse) ProtoMessage()    {}
func (*ProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{5}
}

func (m *ProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectResponse.Unmarshal(m, b)
}
func (m *ProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectResponse.Marshal(b, m, deterministic)
}
func (m *ProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectResponse.Merge(m, src)
}
func (m *ProjectResponse) XXX_Size() int {
	return xxx_messageInfo_ProjectResponse.Size(m)
}
func (m *ProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectResponse proto.InternalMessageInfo

func (m *ProjectResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ProjectResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ProjectResponse) GetData() *Project {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ProjectResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

func (m *ProjectResponse) GetWebAnnotations() *Perms {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type ListProjectsRequest struct {
	ProjectIDs           string   `protobuf:"bytes,1,opt,name=projectIDs,proto3" json:"projectIDs,omitempty"`
	Names                string   `protobuf:"bytes,2,opt,name=names,proto3" json:"names,omitempty"`
	ProjectCode          string   `protobuf:"bytes,3,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	SearchName           string   `protobuf:"bytes,4,opt,name=searchName,proto3" json:"searchName,omitempty"`
	Kind                 string   `protobuf:"bytes,5,opt,name=kind,proto3" json:"kind,omitempty"`
	Offset               int64    `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int64    `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	All                  bool     `protobuf:"varint,8,opt,name=all,proto3" json:"all,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListProjectsRequest) Reset()         { *m = ListProjectsRequest{} }
func (m *ListProjectsRequest) String() string { return proto.CompactTextString(m) }
func (*ListProjectsRequest) ProtoMessage()    {}
func (*ListProjectsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{6}
}

func (m *ListProjectsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectsRequest.Unmarshal(m, b)
}
func (m *ListProjectsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectsRequest.Marshal(b, m, deterministic)
}
func (m *ListProjectsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectsRequest.Merge(m, src)
}
func (m *ListProjectsRequest) XXX_Size() int {
	return xxx_messageInfo_ListProjectsRequest.Size(m)
}
func (m *ListProjectsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectsRequest proto.InternalMessageInfo

func (m *ListProjectsRequest) GetProjectIDs() string {
	if m != nil {
		return m.ProjectIDs
	}
	return ""
}

func (m *ListProjectsRequest) GetNames() string {
	if m != nil {
		return m.Names
	}
	return ""
}

func (m *ListProjectsRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *ListProjectsRequest) GetSearchName() string {
	if m != nil {
		return m.SearchName
	}
	return ""
}

func (m *ListProjectsRequest) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *ListProjectsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListProjectsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListProjectsRequest) GetAll() bool {
	if m != nil {
		return m.All
	}
	return false
}

type ListProjectData struct {
	Total                uint32     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Results              []*Project `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListProjectData) Reset()         { *m = ListProjectData{} }
func (m *ListProjectData) String() string { return proto.CompactTextString(m) }
func (*ListProjectData) ProtoMessage()    {}
func (*ListProjectData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{7}
}

func (m *ListProjectData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectData.Unmarshal(m, b)
}
func (m *ListProjectData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectData.Marshal(b, m, deterministic)
}
func (m *ListProjectData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectData.Merge(m, src)
}
func (m *ListProjectData) XXX_Size() int {
	return xxx_messageInfo_ListProjectData.Size(m)
}
func (m *ListProjectData) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectData.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectData proto.InternalMessageInfo

func (m *ListProjectData) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListProjectData) GetResults() []*Project {
	if m != nil {
		return m.Results
	}
	return nil
}

type ListProjectsResponse struct {
	Code                 uint32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *ListProjectData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string           `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	WebAnnotations       *Perms           `protobuf:"bytes,5,opt,name=webAnnotations,proto3" json:"webAnnotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListProjectsResponse) Reset()         { *m = ListProjectsResponse{} }
func (m *ListProjectsResponse) String() string { return proto.CompactTextString(m) }
func (*ListProjectsResponse) ProtoMessage()    {}
func (*ListProjectsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{8}
}

func (m *ListProjectsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectsResponse.Unmarshal(m, b)
}
func (m *ListProjectsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectsResponse.Marshal(b, m, deterministic)
}
func (m *ListProjectsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectsResponse.Merge(m, src)
}
func (m *ListProjectsResponse) XXX_Size() int {
	return xxx_messageInfo_ListProjectsResponse.Size(m)
}
func (m *ListProjectsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectsResponse proto.InternalMessageInfo

func (m *ListProjectsResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListProjectsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListProjectsResponse) GetData() *ListProjectData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListProjectsResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

func (m *ListProjectsResponse) GetWebAnnotations() *Perms {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type Perms struct {
	Perms                *_struct.Struct `protobuf:"bytes,1,opt,name=perms,proto3" json:"perms,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Perms) Reset()         { *m = Perms{} }
func (m *Perms) String() string { return proto.CompactTextString(m) }
func (*Perms) ProtoMessage()    {}
func (*Perms) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{9}
}

func (m *Perms) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Perms.Unmarshal(m, b)
}
func (m *Perms) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Perms.Marshal(b, m, deterministic)
}
func (m *Perms) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Perms.Merge(m, src)
}
func (m *Perms) XXX_Size() int {
	return xxx_messageInfo_Perms.Size(m)
}
func (m *Perms) XXX_DiscardUnknown() {
	xxx_messageInfo_Perms.DiscardUnknown(m)
}

var xxx_messageInfo_Perms proto.InternalMessageInfo

func (m *Perms) GetPerms() *_struct.Struct {
	if m != nil {
		return m.Perms
	}
	return nil
}

type ListAuthorizedProjReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAuthorizedProjReq) Reset()         { *m = ListAuthorizedProjReq{} }
func (m *ListAuthorizedProjReq) String() string { return proto.CompactTextString(m) }
func (*ListAuthorizedProjReq) ProtoMessage()    {}
func (*ListAuthorizedProjReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{10}
}

func (m *ListAuthorizedProjReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAuthorizedProjReq.Unmarshal(m, b)
}
func (m *ListAuthorizedProjReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAuthorizedProjReq.Marshal(b, m, deterministic)
}
func (m *ListAuthorizedProjReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAuthorizedProjReq.Merge(m, src)
}
func (m *ListAuthorizedProjReq) XXX_Size() int {
	return xxx_messageInfo_ListAuthorizedProjReq.Size(m)
}
func (m *ListAuthorizedProjReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAuthorizedProjReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListAuthorizedProjReq proto.InternalMessageInfo

type ListAuthorizedProjResp struct {
	Code                 uint32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *ListProjectData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string           `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListAuthorizedProjResp) Reset()         { *m = ListAuthorizedProjResp{} }
func (m *ListAuthorizedProjResp) String() string { return proto.CompactTextString(m) }
func (*ListAuthorizedProjResp) ProtoMessage()    {}
func (*ListAuthorizedProjResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{11}
}

func (m *ListAuthorizedProjResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAuthorizedProjResp.Unmarshal(m, b)
}
func (m *ListAuthorizedProjResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAuthorizedProjResp.Marshal(b, m, deterministic)
}
func (m *ListAuthorizedProjResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAuthorizedProjResp.Merge(m, src)
}
func (m *ListAuthorizedProjResp) XXX_Size() int {
	return xxx_messageInfo_ListAuthorizedProjResp.Size(m)
}
func (m *ListAuthorizedProjResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAuthorizedProjResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListAuthorizedProjResp proto.InternalMessageInfo

func (m *ListAuthorizedProjResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListAuthorizedProjResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListAuthorizedProjResp) GetData() *ListProjectData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListAuthorizedProjResp) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type CreateNamespaceRequest struct {
	ProjectCode          string           `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	ClusterID            string           `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Name                 string           `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Quota                *ResourceQuota   `protobuf:"bytes,4,opt,name=quota,proto3" json:"quota,omitempty"`
	Labels               []*Label         `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty"`
	Annotations          []*Annotation    `protobuf:"bytes,6,rep,name=annotations,proto3" json:"annotations,omitempty"`
	Variables            []*VariableValue `protobuf:"bytes,7,rep,name=variables,proto3" json:"variables,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CreateNamespaceRequest) Reset()         { *m = CreateNamespaceRequest{} }
func (m *CreateNamespaceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceRequest) ProtoMessage()    {}
func (*CreateNamespaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{12}
}

func (m *CreateNamespaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceRequest.Unmarshal(m, b)
}
func (m *CreateNamespaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceRequest.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceRequest.Merge(m, src)
}
func (m *CreateNamespaceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceRequest.Size(m)
}
func (m *CreateNamespaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceRequest proto.InternalMessageInfo

func (m *CreateNamespaceRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *CreateNamespaceRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *CreateNamespaceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateNamespaceRequest) GetQuota() *ResourceQuota {
	if m != nil {
		return m.Quota
	}
	return nil
}

func (m *CreateNamespaceRequest) GetLabels() []*Label {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateNamespaceRequest) GetAnnotations() []*Annotation {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *CreateNamespaceRequest) GetVariables() []*VariableValue {
	if m != nil {
		return m.Variables
	}
	return nil
}

type CreateNamespaceResponse struct {
	Code                 uint32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *NamespaceData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string         `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	WebAnnotations       *Perms         `protobuf:"bytes,5,opt,name=webAnnotations,proto3" json:"webAnnotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateNamespaceResponse) Reset()         { *m = CreateNamespaceResponse{} }
func (m *CreateNamespaceResponse) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceResponse) ProtoMessage()    {}
func (*CreateNamespaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{13}
}

func (m *CreateNamespaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceResponse.Unmarshal(m, b)
}
func (m *CreateNamespaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceResponse.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceResponse.Merge(m, src)
}
func (m *CreateNamespaceResponse) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceResponse.Size(m)
}
func (m *CreateNamespaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceResponse proto.InternalMessageInfo

func (m *CreateNamespaceResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateNamespaceResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateNamespaceResponse) GetData() *NamespaceData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateNamespaceResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

func (m *CreateNamespaceResponse) GetWebAnnotations() *Perms {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type NamespaceCallbackRequest struct {
	ProjectCode          string   `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Namespace            string   `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Title                string   `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	CurrentStatus        string   `protobuf:"bytes,5,opt,name=currentStatus,proto3" json:"currentStatus,omitempty"`
	Sn                   string   `protobuf:"bytes,6,opt,name=sn,proto3" json:"sn,omitempty"`
	TicketUrl            string   `protobuf:"bytes,7,opt,name=ticketUrl,proto3" json:"ticketUrl,omitempty"`
	ApproveResult        bool     `protobuf:"varint,8,opt,name=approveResult,proto3" json:"approveResult,omitempty"`
	ApplyInCluster       bool     `protobuf:"varint,9,opt,name=applyInCluster,proto3" json:"applyInCluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NamespaceCallbackRequest) Reset()         { *m = NamespaceCallbackRequest{} }
func (m *NamespaceCallbackRequest) String() string { return proto.CompactTextString(m) }
func (*NamespaceCallbackRequest) ProtoMessage()    {}
func (*NamespaceCallbackRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{14}
}

func (m *NamespaceCallbackRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamespaceCallbackRequest.Unmarshal(m, b)
}
func (m *NamespaceCallbackRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamespaceCallbackRequest.Marshal(b, m, deterministic)
}
func (m *NamespaceCallbackRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamespaceCallbackRequest.Merge(m, src)
}
func (m *NamespaceCallbackRequest) XXX_Size() int {
	return xxx_messageInfo_NamespaceCallbackRequest.Size(m)
}
func (m *NamespaceCallbackRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NamespaceCallbackRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NamespaceCallbackRequest proto.InternalMessageInfo

func (m *NamespaceCallbackRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *NamespaceCallbackRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *NamespaceCallbackRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *NamespaceCallbackRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *NamespaceCallbackRequest) GetCurrentStatus() string {
	if m != nil {
		return m.CurrentStatus
	}
	return ""
}

func (m *NamespaceCallbackRequest) GetSn() string {
	if m != nil {
		return m.Sn
	}
	return ""
}

func (m *NamespaceCallbackRequest) GetTicketUrl() string {
	if m != nil {
		return m.TicketUrl
	}
	return ""
}

func (m *NamespaceCallbackRequest) GetApproveResult() bool {
	if m != nil {
		return m.ApproveResult
	}
	return false
}

func (m *NamespaceCallbackRequest) GetApplyInCluster() bool {
	if m != nil {
		return m.ApplyInCluster
	}
	return false
}

type NamespaceCallbackResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string   `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Result               bool     `protobuf:"varint,5,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NamespaceCallbackResponse) Reset()         { *m = NamespaceCallbackResponse{} }
func (m *NamespaceCallbackResponse) String() string { return proto.CompactTextString(m) }
func (*NamespaceCallbackResponse) ProtoMessage()    {}
func (*NamespaceCallbackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{15}
}

func (m *NamespaceCallbackResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamespaceCallbackResponse.Unmarshal(m, b)
}
func (m *NamespaceCallbackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamespaceCallbackResponse.Marshal(b, m, deterministic)
}
func (m *NamespaceCallbackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamespaceCallbackResponse.Merge(m, src)
}
func (m *NamespaceCallbackResponse) XXX_Size() int {
	return xxx_messageInfo_NamespaceCallbackResponse.Size(m)
}
func (m *NamespaceCallbackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NamespaceCallbackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NamespaceCallbackResponse proto.InternalMessageInfo

func (m *NamespaceCallbackResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *NamespaceCallbackResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *NamespaceCallbackResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *NamespaceCallbackResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

func (m *NamespaceCallbackResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type UpdateNamespaceRequest struct {
	ProjectCode          string         `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	ClusterID            string         `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Namespace            string         `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Labels               []*Label       `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty"`
	Annotations          []*Annotation  `protobuf:"bytes,5,rep,name=annotations,proto3" json:"annotations,omitempty"`
	Quota                *ResourceQuota `protobuf:"bytes,6,opt,name=quota,proto3" json:"quota,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdateNamespaceRequest) Reset()         { *m = UpdateNamespaceRequest{} }
func (m *UpdateNamespaceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateNamespaceRequest) ProtoMessage()    {}
func (*UpdateNamespaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{16}
}

func (m *UpdateNamespaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNamespaceRequest.Unmarshal(m, b)
}
func (m *UpdateNamespaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNamespaceRequest.Marshal(b, m, deterministic)
}
func (m *UpdateNamespaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNamespaceRequest.Merge(m, src)
}
func (m *UpdateNamespaceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateNamespaceRequest.Size(m)
}
func (m *UpdateNamespaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNamespaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNamespaceRequest proto.InternalMessageInfo

func (m *UpdateNamespaceRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *UpdateNamespaceRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *UpdateNamespaceRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *UpdateNamespaceRequest) GetLabels() []*Label {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *UpdateNamespaceRequest) GetAnnotations() []*Annotation {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *UpdateNamespaceRequest) GetQuota() *ResourceQuota {
	if m != nil {
		return m.Quota
	}
	return nil
}

type UpdateNamespaceResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestID            string   `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateNamespaceResponse) Reset()         { *m = UpdateNamespaceResponse{} }
func (m *UpdateNamespaceResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateNamespaceResponse) ProtoMessage()    {}
func (*UpdateNamespaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{17}
}

func (m *UpdateNamespaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNamespaceResponse.Unmarshal(m, b)
}
func (m *UpdateNamespaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNamespaceResponse.Marshal(b, m, deterministic)
}
func (m *UpdateNamespaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNamespaceResponse.Merge(m, src)
}
func (m *UpdateNamespaceResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateNamespaceResponse.Size(m)
}
func (m *UpdateNamespaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNamespaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNamespaceResponse proto.InternalMessageInfo

func (m *UpdateNamespaceResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateNamespaceResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateNamespaceResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type GetNamespaceRequest struct {
	ProjectCode          string   `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Namespace            string   `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNamespaceRequest) Reset()         { *m = GetNamespaceRequest{} }
func (m *GetNamespaceRequest) String() string { return proto.CompactTextString(m) }
func (*GetNamespaceRequest) ProtoMessage()    {}
func (*GetNamespaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{18}
}

func (m *GetNamespaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNamespaceRequest.Unmarshal(m, b)
}
func (m *GetNamespaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNamespaceRequest.Marshal(b, m, deterministic)
}
func (m *GetNamespaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNamespaceRequest.Merge(m, src)
}
func (m *GetNamespaceRequest) XXX_Size() int {
	return xxx_messageInfo_GetNamespaceRequest.Size(m)
}
func (m *GetNamespaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNamespaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNamespaceRequest proto.InternalMessageInfo

func (m *GetNamespaceRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *GetNamespaceRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *GetNamespaceRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type GetNamespaceResponse struct {
	Code                 uint32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *NamespaceData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string         `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetNamespaceResponse) Reset()         { *m = GetNamespaceResponse{} }
func (m *GetNamespaceResponse) String() string { return proto.CompactTextString(m) }
func (*GetNamespaceResponse) ProtoMessage()    {}
func (*GetNamespaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{19}
}

func (m *GetNamespaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNamespaceResponse.Unmarshal(m, b)
}
func (m *GetNamespaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNamespaceResponse.Marshal(b, m, deterministic)
}
func (m *GetNamespaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNamespaceResponse.Merge(m, src)
}
func (m *GetNamespaceResponse) XXX_Size() int {
	return xxx_messageInfo_GetNamespaceResponse.Size(m)
}
func (m *GetNamespaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNamespaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNamespaceResponse proto.InternalMessageInfo

func (m *GetNamespaceResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetNamespaceResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetNamespaceResponse) GetData() *NamespaceData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetNamespaceResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type ListNamespacesRequest struct {
	ProjectCode          string   `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNamespacesRequest) Reset()         { *m = ListNamespacesRequest{} }
func (m *ListNamespacesRequest) String() string { return proto.CompactTextString(m) }
func (*ListNamespacesRequest) ProtoMessage()    {}
func (*ListNamespacesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{20}
}

func (m *ListNamespacesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNamespacesRequest.Unmarshal(m, b)
}
func (m *ListNamespacesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNamespacesRequest.Marshal(b, m, deterministic)
}
func (m *ListNamespacesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNamespacesRequest.Merge(m, src)
}
func (m *ListNamespacesRequest) XXX_Size() int {
	return xxx_messageInfo_ListNamespacesRequest.Size(m)
}
func (m *ListNamespacesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNamespacesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNamespacesRequest proto.InternalMessageInfo

func (m *ListNamespacesRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *ListNamespacesRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

type ListNamespacesResponse struct {
	Code                 uint32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 []*NamespaceData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	RequestID            string           `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	WebAnnotations       *Perms           `protobuf:"bytes,5,opt,name=webAnnotations,proto3" json:"webAnnotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListNamespacesResponse) Reset()         { *m = ListNamespacesResponse{} }
func (m *ListNamespacesResponse) String() string { return proto.CompactTextString(m) }
func (*ListNamespacesResponse) ProtoMessage()    {}
func (*ListNamespacesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{21}
}

func (m *ListNamespacesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNamespacesResponse.Unmarshal(m, b)
}
func (m *ListNamespacesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNamespacesResponse.Marshal(b, m, deterministic)
}
func (m *ListNamespacesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNamespacesResponse.Merge(m, src)
}
func (m *ListNamespacesResponse) XXX_Size() int {
	return xxx_messageInfo_ListNamespacesResponse.Size(m)
}
func (m *ListNamespacesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNamespacesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNamespacesResponse proto.InternalMessageInfo

func (m *ListNamespacesResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListNamespacesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListNamespacesResponse) GetData() []*NamespaceData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListNamespacesResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

func (m *ListNamespacesResponse) GetWebAnnotations() *Perms {
	if m != nil {
		return m.WebAnnotations
	}
	return nil
}

type DeleteNamespaceRequest struct {
	ProjectCode          string   `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Namespace            string   `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNamespaceRequest) Reset()         { *m = DeleteNamespaceRequest{} }
func (m *DeleteNamespaceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNamespaceRequest) ProtoMessage()    {}
func (*DeleteNamespaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{22}
}

func (m *DeleteNamespaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNamespaceRequest.Unmarshal(m, b)
}
func (m *DeleteNamespaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNamespaceRequest.Marshal(b, m, deterministic)
}
func (m *DeleteNamespaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNamespaceRequest.Merge(m, src)
}
func (m *DeleteNamespaceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNamespaceRequest.Size(m)
}
func (m *DeleteNamespaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNamespaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNamespaceRequest proto.InternalMessageInfo

func (m *DeleteNamespaceRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *DeleteNamespaceRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *DeleteNamespaceRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type DeleteNamespaceResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string   `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNamespaceResponse) Reset()         { *m = DeleteNamespaceResponse{} }
func (m *DeleteNamespaceResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteNamespaceResponse) ProtoMessage()    {}
func (*DeleteNamespaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{23}
}

func (m *DeleteNamespaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNamespaceResponse.Unmarshal(m, b)
}
func (m *DeleteNamespaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNamespaceResponse.Marshal(b, m, deterministic)
}
func (m *DeleteNamespaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNamespaceResponse.Merge(m, src)
}
func (m *DeleteNamespaceResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteNamespaceResponse.Size(m)
}
func (m *DeleteNamespaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNamespaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNamespaceResponse proto.InternalMessageInfo

func (m *DeleteNamespaceResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteNamespaceResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteNamespaceResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *DeleteNamespaceResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type NamespaceData struct {
	Uid                  string           `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name                 string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status               string           `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	CreateTime           string           `protobuf:"bytes,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Quota                *ResourceQuota   `protobuf:"bytes,5,opt,name=quota,proto3" json:"quota,omitempty"`
	Used                 *ResourceQuota   `protobuf:"bytes,6,opt,name=used,proto3" json:"used,omitempty"`
	CpuUseRate           float32          `protobuf:"fixed32,7,opt,name=cpuUseRate,proto3" json:"cpuUseRate,omitempty"`
	MemoryUseRate        float32          `protobuf:"fixed32,8,opt,name=memoryUseRate,proto3" json:"memoryUseRate,omitempty"`
	Labels               []*Label         `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty"`
	Annotations          []*Annotation    `protobuf:"bytes,10,rep,name=annotations,proto3" json:"annotations,omitempty"`
	Variables            []*VariableValue `protobuf:"bytes,11,rep,name=variables,proto3" json:"variables,omitempty"`
	ItsmTicketSN         string           `protobuf:"bytes,12,opt,name=itsmTicketSN,proto3" json:"itsmTicketSN,omitempty"`
	ItsmTicketStatus     string           `protobuf:"bytes,13,opt,name=itsmTicketStatus,proto3" json:"itsmTicketStatus,omitempty"`
	ItsmTicketURL        string           `protobuf:"bytes,14,opt,name=itsmTicketURL,proto3" json:"itsmTicketURL,omitempty"`
	ItsmTicketType       string           `protobuf:"bytes,15,opt,name=itsmTicketType,proto3" json:"itsmTicketType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *NamespaceData) Reset()         { *m = NamespaceData{} }
func (m *NamespaceData) String() string { return proto.CompactTextString(m) }
func (*NamespaceData) ProtoMessage()    {}
func (*NamespaceData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{24}
}

func (m *NamespaceData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamespaceData.Unmarshal(m, b)
}
func (m *NamespaceData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamespaceData.Marshal(b, m, deterministic)
}
func (m *NamespaceData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamespaceData.Merge(m, src)
}
func (m *NamespaceData) XXX_Size() int {
	return xxx_messageInfo_NamespaceData.Size(m)
}
func (m *NamespaceData) XXX_DiscardUnknown() {
	xxx_messageInfo_NamespaceData.DiscardUnknown(m)
}

var xxx_messageInfo_NamespaceData proto.InternalMessageInfo

func (m *NamespaceData) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *NamespaceData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NamespaceData) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *NamespaceData) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *NamespaceData) GetQuota() *ResourceQuota {
	if m != nil {
		return m.Quota
	}
	return nil
}

func (m *NamespaceData) GetUsed() *ResourceQuota {
	if m != nil {
		return m.Used
	}
	return nil
}

func (m *NamespaceData) GetCpuUseRate() float32 {
	if m != nil {
		return m.CpuUseRate
	}
	return 0
}

func (m *NamespaceData) GetMemoryUseRate() float32 {
	if m != nil {
		return m.MemoryUseRate
	}
	return 0
}

func (m *NamespaceData) GetLabels() []*Label {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *NamespaceData) GetAnnotations() []*Annotation {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *NamespaceData) GetVariables() []*VariableValue {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *NamespaceData) GetItsmTicketSN() string {
	if m != nil {
		return m.ItsmTicketSN
	}
	return ""
}

func (m *NamespaceData) GetItsmTicketStatus() string {
	if m != nil {
		return m.ItsmTicketStatus
	}
	return ""
}

func (m *NamespaceData) GetItsmTicketURL() string {
	if m != nil {
		return m.ItsmTicketURL
	}
	return ""
}

func (m *NamespaceData) GetItsmTicketType() string {
	if m != nil {
		return m.ItsmTicketType
	}
	return ""
}

type Label struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Label) Reset()         { *m = Label{} }
func (m *Label) String() string { return proto.CompactTextString(m) }
func (*Label) ProtoMessage()    {}
func (*Label) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{25}
}

func (m *Label) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Label.Unmarshal(m, b)
}
func (m *Label) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Label.Marshal(b, m, deterministic)
}
func (m *Label) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Label.Merge(m, src)
}
func (m *Label) XXX_Size() int {
	return xxx_messageInfo_Label.Size(m)
}
func (m *Label) XXX_DiscardUnknown() {
	xxx_messageInfo_Label.DiscardUnknown(m)
}

var xxx_messageInfo_Label proto.InternalMessageInfo

func (m *Label) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Label) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Annotation struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Annotation) Reset()         { *m = Annotation{} }
func (m *Annotation) String() string { return proto.CompactTextString(m) }
func (*Annotation) ProtoMessage()    {}
func (*Annotation) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{26}
}

func (m *Annotation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Annotation.Unmarshal(m, b)
}
func (m *Annotation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Annotation.Marshal(b, m, deterministic)
}
func (m *Annotation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Annotation.Merge(m, src)
}
func (m *Annotation) XXX_Size() int {
	return xxx_messageInfo_Annotation.Size(m)
}
func (m *Annotation) XXX_DiscardUnknown() {
	xxx_messageInfo_Annotation.DiscardUnknown(m)
}

var xxx_messageInfo_Annotation proto.InternalMessageInfo

func (m *Annotation) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Annotation) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ResourceQuota struct {
	CpuRequests          string   `protobuf:"bytes,1,opt,name=cpuRequests,proto3" json:"cpuRequests,omitempty"`
	MemoryRequests       string   `protobuf:"bytes,2,opt,name=memoryRequests,proto3" json:"memoryRequests,omitempty"`
	CpuLimits            string   `protobuf:"bytes,3,opt,name=cpuLimits,proto3" json:"cpuLimits,omitempty"`
	MemoryLimits         string   `protobuf:"bytes,4,opt,name=memoryLimits,proto3" json:"memoryLimits,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceQuota) Reset()         { *m = ResourceQuota{} }
func (m *ResourceQuota) String() string { return proto.CompactTextString(m) }
func (*ResourceQuota) ProtoMessage()    {}
func (*ResourceQuota) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{27}
}

func (m *ResourceQuota) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceQuota.Unmarshal(m, b)
}
func (m *ResourceQuota) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceQuota.Marshal(b, m, deterministic)
}
func (m *ResourceQuota) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceQuota.Merge(m, src)
}
func (m *ResourceQuota) XXX_Size() int {
	return xxx_messageInfo_ResourceQuota.Size(m)
}
func (m *ResourceQuota) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceQuota.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceQuota proto.InternalMessageInfo

func (m *ResourceQuota) GetCpuRequests() string {
	if m != nil {
		return m.CpuRequests
	}
	return ""
}

func (m *ResourceQuota) GetMemoryRequests() string {
	if m != nil {
		return m.MemoryRequests
	}
	return ""
}

func (m *ResourceQuota) GetCpuLimits() string {
	if m != nil {
		return m.CpuLimits
	}
	return ""
}

func (m *ResourceQuota) GetMemoryLimits() string {
	if m != nil {
		return m.MemoryLimits
	}
	return ""
}

type CreateVariableRequest struct {
	ProjectCode          string   `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Key                  string   `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Scope                string   `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	Default              string   `protobuf:"bytes,5,opt,name=default,proto3" json:"default,omitempty"`
	Desc                 string   `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVariableRequest) Reset()         { *m = CreateVariableRequest{} }
func (m *CreateVariableRequest) String() string { return proto.CompactTextString(m) }
func (*CreateVariableRequest) ProtoMessage()    {}
func (*CreateVariableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{28}
}

func (m *CreateVariableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVariableRequest.Unmarshal(m, b)
}
func (m *CreateVariableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVariableRequest.Marshal(b, m, deterministic)
}
func (m *CreateVariableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVariableRequest.Merge(m, src)
}
func (m *CreateVariableRequest) XXX_Size() int {
	return xxx_messageInfo_CreateVariableRequest.Size(m)
}
func (m *CreateVariableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVariableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVariableRequest proto.InternalMessageInfo

func (m *CreateVariableRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *CreateVariableRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateVariableRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *CreateVariableRequest) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *CreateVariableRequest) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *CreateVariableRequest) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type CreateVariableResponse struct {
	Code                 uint32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *CreateVariableData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string              `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CreateVariableResponse) Reset()         { *m = CreateVariableResponse{} }
func (m *CreateVariableResponse) String() string { return proto.CompactTextString(m) }
func (*CreateVariableResponse) ProtoMessage()    {}
func (*CreateVariableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{29}
}

func (m *CreateVariableResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVariableResponse.Unmarshal(m, b)
}
func (m *CreateVariableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVariableResponse.Marshal(b, m, deterministic)
}
func (m *CreateVariableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVariableResponse.Merge(m, src)
}
func (m *CreateVariableResponse) XXX_Size() int {
	return xxx_messageInfo_CreateVariableResponse.Size(m)
}
func (m *CreateVariableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVariableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVariableResponse proto.InternalMessageInfo

func (m *CreateVariableResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateVariableResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateVariableResponse) GetData() *CreateVariableData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateVariableResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type UpdateVariableRequest struct {
	ProjectCode          string   `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	VariableID           string   `protobuf:"bytes,2,opt,name=variableID,proto3" json:"variableID,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Key                  string   `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Scope                string   `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
	Default              string   `protobuf:"bytes,6,opt,name=default,proto3" json:"default,omitempty"`
	Desc                 string   `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateVariableRequest) Reset()         { *m = UpdateVariableRequest{} }
func (m *UpdateVariableRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateVariableRequest) ProtoMessage()    {}
func (*UpdateVariableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{30}
}

func (m *UpdateVariableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateVariableRequest.Unmarshal(m, b)
}
func (m *UpdateVariableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateVariableRequest.Marshal(b, m, deterministic)
}
func (m *UpdateVariableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateVariableRequest.Merge(m, src)
}
func (m *UpdateVariableRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateVariableRequest.Size(m)
}
func (m *UpdateVariableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateVariableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateVariableRequest proto.InternalMessageInfo

func (m *UpdateVariableRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *UpdateVariableRequest) GetVariableID() string {
	if m != nil {
		return m.VariableID
	}
	return ""
}

func (m *UpdateVariableRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateVariableRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *UpdateVariableRequest) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *UpdateVariableRequest) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *UpdateVariableRequest) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type UpdateVariableResponse struct {
	Code                 uint32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *UpdateVariableData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string              `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *UpdateVariableResponse) Reset()         { *m = UpdateVariableResponse{} }
func (m *UpdateVariableResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateVariableResponse) ProtoMessage()    {}
func (*UpdateVariableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{31}
}

func (m *UpdateVariableResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateVariableResponse.Unmarshal(m, b)
}
func (m *UpdateVariableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateVariableResponse.Marshal(b, m, deterministic)
}
func (m *UpdateVariableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateVariableResponse.Merge(m, src)
}
func (m *UpdateVariableResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateVariableResponse.Size(m)
}
func (m *UpdateVariableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateVariableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateVariableResponse proto.InternalMessageInfo

func (m *UpdateVariableResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateVariableResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateVariableResponse) GetData() *UpdateVariableData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateVariableResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type ListVariableDefinitionsRequest struct {
	ProjectCode          string   `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	Scope                string   `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	SearchKey            string   `protobuf:"bytes,3,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
	Offset               int64    `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int64    `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	All                  bool     `protobuf:"varint,6,opt,name=all,proto3" json:"all,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListVariableDefinitionsRequest) Reset()         { *m = ListVariableDefinitionsRequest{} }
func (m *ListVariableDefinitionsRequest) String() string { return proto.CompactTextString(m) }
func (*ListVariableDefinitionsRequest) ProtoMessage()    {}
func (*ListVariableDefinitionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{32}
}

func (m *ListVariableDefinitionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVariableDefinitionsRequest.Unmarshal(m, b)
}
func (m *ListVariableDefinitionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVariableDefinitionsRequest.Marshal(b, m, deterministic)
}
func (m *ListVariableDefinitionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVariableDefinitionsRequest.Merge(m, src)
}
func (m *ListVariableDefinitionsRequest) XXX_Size() int {
	return xxx_messageInfo_ListVariableDefinitionsRequest.Size(m)
}
func (m *ListVariableDefinitionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVariableDefinitionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListVariableDefinitionsRequest proto.InternalMessageInfo

func (m *ListVariableDefinitionsRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *ListVariableDefinitionsRequest) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *ListVariableDefinitionsRequest) GetSearchKey() string {
	if m != nil {
		return m.SearchKey
	}
	return ""
}

func (m *ListVariableDefinitionsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListVariableDefinitionsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListVariableDefinitionsRequest) GetAll() bool {
	if m != nil {
		return m.All
	}
	return false
}

type ListVariableDefinitionsResponse struct {
	Code                 uint32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *ListVariableDefinitionData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string                      `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ListVariableDefinitionsResponse) Reset()         { *m = ListVariableDefinitionsResponse{} }
func (m *ListVariableDefinitionsResponse) String() string { return proto.CompactTextString(m) }
func (*ListVariableDefinitionsResponse) ProtoMessage()    {}
func (*ListVariableDefinitionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{33}
}

func (m *ListVariableDefinitionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVariableDefinitionsResponse.Unmarshal(m, b)
}
func (m *ListVariableDefinitionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVariableDefinitionsResponse.Marshal(b, m, deterministic)
}
func (m *ListVariableDefinitionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVariableDefinitionsResponse.Merge(m, src)
}
func (m *ListVariableDefinitionsResponse) XXX_Size() int {
	return xxx_messageInfo_ListVariableDefinitionsResponse.Size(m)
}
func (m *ListVariableDefinitionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVariableDefinitionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListVariableDefinitionsResponse proto.InternalMessageInfo

func (m *ListVariableDefinitionsResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListVariableDefinitionsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListVariableDefinitionsResponse) GetData() *ListVariableDefinitionData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListVariableDefinitionsResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type DeleteVariableDefinitionsRequest struct {
	ProjectCode          string   `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	IdList               string   `protobuf:"bytes,2,opt,name=idList,proto3" json:"idList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVariableDefinitionsRequest) Reset()         { *m = DeleteVariableDefinitionsRequest{} }
func (m *DeleteVariableDefinitionsRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteVariableDefinitionsRequest) ProtoMessage()    {}
func (*DeleteVariableDefinitionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{34}
}

func (m *DeleteVariableDefinitionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVariableDefinitionsRequest.Unmarshal(m, b)
}
func (m *DeleteVariableDefinitionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVariableDefinitionsRequest.Marshal(b, m, deterministic)
}
func (m *DeleteVariableDefinitionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVariableDefinitionsRequest.Merge(m, src)
}
func (m *DeleteVariableDefinitionsRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteVariableDefinitionsRequest.Size(m)
}
func (m *DeleteVariableDefinitionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVariableDefinitionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVariableDefinitionsRequest proto.InternalMessageInfo

func (m *DeleteVariableDefinitionsRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *DeleteVariableDefinitionsRequest) GetIdList() string {
	if m != nil {
		return m.IdList
	}
	return ""
}

type DeleteVariableDefinitionsResponse struct {
	Code                 uint32                         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *DeleteVariableDefinitionsData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string                         `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *DeleteVariableDefinitionsResponse) Reset()         { *m = DeleteVariableDefinitionsResponse{} }
func (m *DeleteVariableDefinitionsResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteVariableDefinitionsResponse) ProtoMessage()    {}
func (*DeleteVariableDefinitionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{35}
}

func (m *DeleteVariableDefinitionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVariableDefinitionsResponse.Unmarshal(m, b)
}
func (m *DeleteVariableDefinitionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVariableDefinitionsResponse.Marshal(b, m, deterministic)
}
func (m *DeleteVariableDefinitionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVariableDefinitionsResponse.Merge(m, src)
}
func (m *DeleteVariableDefinitionsResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteVariableDefinitionsResponse.Size(m)
}
func (m *DeleteVariableDefinitionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVariableDefinitionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVariableDefinitionsResponse proto.InternalMessageInfo

func (m *DeleteVariableDefinitionsResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteVariableDefinitionsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteVariableDefinitionsResponse) GetData() *DeleteVariableDefinitionsData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *DeleteVariableDefinitionsResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type ListClustersVariablesRequest struct {
	ProjectCode          string   `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	VariableID           string   `protobuf:"bytes,2,opt,name=variableID,proto3" json:"variableID,omitempty"`
	IsShared             bool     `protobuf:"varint,3,opt,name=isShared,proto3" json:"isShared,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListClustersVariablesRequest) Reset()         { *m = ListClustersVariablesRequest{} }
func (m *ListClustersVariablesRequest) String() string { return proto.CompactTextString(m) }
func (*ListClustersVariablesRequest) ProtoMessage()    {}
func (*ListClustersVariablesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{36}
}

func (m *ListClustersVariablesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClustersVariablesRequest.Unmarshal(m, b)
}
func (m *ListClustersVariablesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClustersVariablesRequest.Marshal(b, m, deterministic)
}
func (m *ListClustersVariablesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClustersVariablesRequest.Merge(m, src)
}
func (m *ListClustersVariablesRequest) XXX_Size() int {
	return xxx_messageInfo_ListClustersVariablesRequest.Size(m)
}
func (m *ListClustersVariablesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClustersVariablesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListClustersVariablesRequest proto.InternalMessageInfo

func (m *ListClustersVariablesRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *ListClustersVariablesRequest) GetVariableID() string {
	if m != nil {
		return m.VariableID
	}
	return ""
}

func (m *ListClustersVariablesRequest) GetIsShared() bool {
	if m != nil {
		return m.IsShared
	}
	return false
}

type ListClustersVariablesResponse struct {
	Code                 uint32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *ListVariableValuesData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string                  `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ListClustersVariablesResponse) Reset()         { *m = ListClustersVariablesResponse{} }
func (m *ListClustersVariablesResponse) String() string { return proto.CompactTextString(m) }
func (*ListClustersVariablesResponse) ProtoMessage()    {}
func (*ListClustersVariablesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{37}
}

func (m *ListClustersVariablesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClustersVariablesResponse.Unmarshal(m, b)
}
func (m *ListClustersVariablesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClustersVariablesResponse.Marshal(b, m, deterministic)
}
func (m *ListClustersVariablesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClustersVariablesResponse.Merge(m, src)
}
func (m *ListClustersVariablesResponse) XXX_Size() int {
	return xxx_messageInfo_ListClustersVariablesResponse.Size(m)
}
func (m *ListClustersVariablesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClustersVariablesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListClustersVariablesResponse proto.InternalMessageInfo

func (m *ListClustersVariablesResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListClustersVariablesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListClustersVariablesResponse) GetData() *ListVariableValuesData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListClustersVariablesResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type ListNamespacesVariablesRequest struct {
	ProjectCode          string   `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	VariableID           string   `protobuf:"bytes,2,opt,name=variableID,proto3" json:"variableID,omitempty"`
	IsShared             bool     `protobuf:"varint,3,opt,name=isShared,proto3" json:"isShared,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNamespacesVariablesRequest) Reset()         { *m = ListNamespacesVariablesRequest{} }
func (m *ListNamespacesVariablesRequest) String() string { return proto.CompactTextString(m) }
func (*ListNamespacesVariablesRequest) ProtoMessage()    {}
func (*ListNamespacesVariablesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{38}
}

func (m *ListNamespacesVariablesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNamespacesVariablesRequest.Unmarshal(m, b)
}
func (m *ListNamespacesVariablesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNamespacesVariablesRequest.Marshal(b, m, deterministic)
}
func (m *ListNamespacesVariablesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNamespacesVariablesRequest.Merge(m, src)
}
func (m *ListNamespacesVariablesRequest) XXX_Size() int {
	return xxx_messageInfo_ListNamespacesVariablesRequest.Size(m)
}
func (m *ListNamespacesVariablesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNamespacesVariablesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNamespacesVariablesRequest proto.InternalMessageInfo

func (m *ListNamespacesVariablesRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *ListNamespacesVariablesRequest) GetVariableID() string {
	if m != nil {
		return m.VariableID
	}
	return ""
}

func (m *ListNamespacesVariablesRequest) GetIsShared() bool {
	if m != nil {
		return m.IsShared
	}
	return false
}

type ListNamespacesVariablesResponse struct {
	Code                 uint32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *ListVariableValuesData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string                  `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ListNamespacesVariablesResponse) Reset()         { *m = ListNamespacesVariablesResponse{} }
func (m *ListNamespacesVariablesResponse) String() string { return proto.CompactTextString(m) }
func (*ListNamespacesVariablesResponse) ProtoMessage()    {}
func (*ListNamespacesVariablesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{39}
}

func (m *ListNamespacesVariablesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNamespacesVariablesResponse.Unmarshal(m, b)
}
func (m *ListNamespacesVariablesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNamespacesVariablesResponse.Marshal(b, m, deterministic)
}
func (m *ListNamespacesVariablesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNamespacesVariablesResponse.Merge(m, src)
}
func (m *ListNamespacesVariablesResponse) XXX_Size() int {
	return xxx_messageInfo_ListNamespacesVariablesResponse.Size(m)
}
func (m *ListNamespacesVariablesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNamespacesVariablesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNamespacesVariablesResponse proto.InternalMessageInfo

func (m *ListNamespacesVariablesResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListNamespacesVariablesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListNamespacesVariablesResponse) GetData() *ListVariableValuesData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListNamespacesVariablesResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type UpdateClustersVariablesRequest struct {
	ProjectCode          string           `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	VariableID           string           `protobuf:"bytes,2,opt,name=variableID,proto3" json:"variableID,omitempty"`
	Data                 []*VariableValue `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UpdateClustersVariablesRequest) Reset()         { *m = UpdateClustersVariablesRequest{} }
func (m *UpdateClustersVariablesRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateClustersVariablesRequest) ProtoMessage()    {}
func (*UpdateClustersVariablesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{40}
}

func (m *UpdateClustersVariablesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateClustersVariablesRequest.Unmarshal(m, b)
}
func (m *UpdateClustersVariablesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateClustersVariablesRequest.Marshal(b, m, deterministic)
}
func (m *UpdateClustersVariablesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateClustersVariablesRequest.Merge(m, src)
}
func (m *UpdateClustersVariablesRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateClustersVariablesRequest.Size(m)
}
func (m *UpdateClustersVariablesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateClustersVariablesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateClustersVariablesRequest proto.InternalMessageInfo

func (m *UpdateClustersVariablesRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *UpdateClustersVariablesRequest) GetVariableID() string {
	if m != nil {
		return m.VariableID
	}
	return ""
}

func (m *UpdateClustersVariablesRequest) GetData() []*VariableValue {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateClustersVariablesResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestID            string   `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateClustersVariablesResponse) Reset()         { *m = UpdateClustersVariablesResponse{} }
func (m *UpdateClustersVariablesResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateClustersVariablesResponse) ProtoMessage()    {}
func (*UpdateClustersVariablesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{41}
}

func (m *UpdateClustersVariablesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateClustersVariablesResponse.Unmarshal(m, b)
}
func (m *UpdateClustersVariablesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateClustersVariablesResponse.Marshal(b, m, deterministic)
}
func (m *UpdateClustersVariablesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateClustersVariablesResponse.Merge(m, src)
}
func (m *UpdateClustersVariablesResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateClustersVariablesResponse.Size(m)
}
func (m *UpdateClustersVariablesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateClustersVariablesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateClustersVariablesResponse proto.InternalMessageInfo

func (m *UpdateClustersVariablesResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateClustersVariablesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateClustersVariablesResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type UpdateNamespacesVariablesRequest struct {
	ProjectCode          string           `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	VariableID           string           `protobuf:"bytes,2,opt,name=variableID,proto3" json:"variableID,omitempty"`
	Data                 []*VariableValue `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UpdateNamespacesVariablesRequest) Reset()         { *m = UpdateNamespacesVariablesRequest{} }
func (m *UpdateNamespacesVariablesRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateNamespacesVariablesRequest) ProtoMessage()    {}
func (*UpdateNamespacesVariablesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{42}
}

func (m *UpdateNamespacesVariablesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNamespacesVariablesRequest.Unmarshal(m, b)
}
func (m *UpdateNamespacesVariablesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNamespacesVariablesRequest.Marshal(b, m, deterministic)
}
func (m *UpdateNamespacesVariablesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNamespacesVariablesRequest.Merge(m, src)
}
func (m *UpdateNamespacesVariablesRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateNamespacesVariablesRequest.Size(m)
}
func (m *UpdateNamespacesVariablesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNamespacesVariablesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNamespacesVariablesRequest proto.InternalMessageInfo

func (m *UpdateNamespacesVariablesRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *UpdateNamespacesVariablesRequest) GetVariableID() string {
	if m != nil {
		return m.VariableID
	}
	return ""
}

func (m *UpdateNamespacesVariablesRequest) GetData() []*VariableValue {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateNamespacesVariablesResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestID            string   `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateNamespacesVariablesResponse) Reset()         { *m = UpdateNamespacesVariablesResponse{} }
func (m *UpdateNamespacesVariablesResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateNamespacesVariablesResponse) ProtoMessage()    {}
func (*UpdateNamespacesVariablesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{43}
}

func (m *UpdateNamespacesVariablesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNamespacesVariablesResponse.Unmarshal(m, b)
}
func (m *UpdateNamespacesVariablesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNamespacesVariablesResponse.Marshal(b, m, deterministic)
}
func (m *UpdateNamespacesVariablesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNamespacesVariablesResponse.Merge(m, src)
}
func (m *UpdateNamespacesVariablesResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateNamespacesVariablesResponse.Size(m)
}
func (m *UpdateNamespacesVariablesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNamespacesVariablesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNamespacesVariablesResponse proto.InternalMessageInfo

func (m *UpdateNamespacesVariablesResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateNamespacesVariablesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateNamespacesVariablesResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type ListClusterVariablesRequest struct {
	ProjectCode          string   `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListClusterVariablesRequest) Reset()         { *m = ListClusterVariablesRequest{} }
func (m *ListClusterVariablesRequest) String() string { return proto.CompactTextString(m) }
func (*ListClusterVariablesRequest) ProtoMessage()    {}
func (*ListClusterVariablesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{44}
}

func (m *ListClusterVariablesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClusterVariablesRequest.Unmarshal(m, b)
}
func (m *ListClusterVariablesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClusterVariablesRequest.Marshal(b, m, deterministic)
}
func (m *ListClusterVariablesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClusterVariablesRequest.Merge(m, src)
}
func (m *ListClusterVariablesRequest) XXX_Size() int {
	return xxx_messageInfo_ListClusterVariablesRequest.Size(m)
}
func (m *ListClusterVariablesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClusterVariablesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListClusterVariablesRequest proto.InternalMessageInfo

func (m *ListClusterVariablesRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *ListClusterVariablesRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

type ListClusterVariablesResponse struct {
	Code                 uint32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *ListVariableValuesData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string                  `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ListClusterVariablesResponse) Reset()         { *m = ListClusterVariablesResponse{} }
func (m *ListClusterVariablesResponse) String() string { return proto.CompactTextString(m) }
func (*ListClusterVariablesResponse) ProtoMessage()    {}
func (*ListClusterVariablesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{45}
}

func (m *ListClusterVariablesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClusterVariablesResponse.Unmarshal(m, b)
}
func (m *ListClusterVariablesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClusterVariablesResponse.Marshal(b, m, deterministic)
}
func (m *ListClusterVariablesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClusterVariablesResponse.Merge(m, src)
}
func (m *ListClusterVariablesResponse) XXX_Size() int {
	return xxx_messageInfo_ListClusterVariablesResponse.Size(m)
}
func (m *ListClusterVariablesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClusterVariablesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListClusterVariablesResponse proto.InternalMessageInfo

func (m *ListClusterVariablesResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListClusterVariablesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListClusterVariablesResponse) GetData() *ListVariableValuesData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListClusterVariablesResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type ListNamespaceVariablesRequest struct {
	ProjectCode          string   `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Namespace            string   `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNamespaceVariablesRequest) Reset()         { *m = ListNamespaceVariablesRequest{} }
func (m *ListNamespaceVariablesRequest) String() string { return proto.CompactTextString(m) }
func (*ListNamespaceVariablesRequest) ProtoMessage()    {}
func (*ListNamespaceVariablesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{46}
}

func (m *ListNamespaceVariablesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNamespaceVariablesRequest.Unmarshal(m, b)
}
func (m *ListNamespaceVariablesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNamespaceVariablesRequest.Marshal(b, m, deterministic)
}
func (m *ListNamespaceVariablesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNamespaceVariablesRequest.Merge(m, src)
}
func (m *ListNamespaceVariablesRequest) XXX_Size() int {
	return xxx_messageInfo_ListNamespaceVariablesRequest.Size(m)
}
func (m *ListNamespaceVariablesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNamespaceVariablesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNamespaceVariablesRequest proto.InternalMessageInfo

func (m *ListNamespaceVariablesRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *ListNamespaceVariablesRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ListNamespaceVariablesRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type ListNamespaceVariablesResponse struct {
	Code                 uint32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *ListVariableValuesData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string                  `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ListNamespaceVariablesResponse) Reset()         { *m = ListNamespaceVariablesResponse{} }
func (m *ListNamespaceVariablesResponse) String() string { return proto.CompactTextString(m) }
func (*ListNamespaceVariablesResponse) ProtoMessage()    {}
func (*ListNamespaceVariablesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{47}
}

func (m *ListNamespaceVariablesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNamespaceVariablesResponse.Unmarshal(m, b)
}
func (m *ListNamespaceVariablesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNamespaceVariablesResponse.Marshal(b, m, deterministic)
}
func (m *ListNamespaceVariablesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNamespaceVariablesResponse.Merge(m, src)
}
func (m *ListNamespaceVariablesResponse) XXX_Size() int {
	return xxx_messageInfo_ListNamespaceVariablesResponse.Size(m)
}
func (m *ListNamespaceVariablesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNamespaceVariablesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNamespaceVariablesResponse proto.InternalMessageInfo

func (m *ListNamespaceVariablesResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListNamespaceVariablesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListNamespaceVariablesResponse) GetData() *ListVariableValuesData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListNamespaceVariablesResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type UpdateClusterVariablesRequest struct {
	ProjectCode          string           `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	ClusterID            string           `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Data                 []*VariableValue `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UpdateClusterVariablesRequest) Reset()         { *m = UpdateClusterVariablesRequest{} }
func (m *UpdateClusterVariablesRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateClusterVariablesRequest) ProtoMessage()    {}
func (*UpdateClusterVariablesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{48}
}

func (m *UpdateClusterVariablesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateClusterVariablesRequest.Unmarshal(m, b)
}
func (m *UpdateClusterVariablesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateClusterVariablesRequest.Marshal(b, m, deterministic)
}
func (m *UpdateClusterVariablesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateClusterVariablesRequest.Merge(m, src)
}
func (m *UpdateClusterVariablesRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateClusterVariablesRequest.Size(m)
}
func (m *UpdateClusterVariablesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateClusterVariablesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateClusterVariablesRequest proto.InternalMessageInfo

func (m *UpdateClusterVariablesRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *UpdateClusterVariablesRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *UpdateClusterVariablesRequest) GetData() []*VariableValue {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateClusterVariablesResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestID            string   `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateClusterVariablesResponse) Reset()         { *m = UpdateClusterVariablesResponse{} }
func (m *UpdateClusterVariablesResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateClusterVariablesResponse) ProtoMessage()    {}
func (*UpdateClusterVariablesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{49}
}

func (m *UpdateClusterVariablesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateClusterVariablesResponse.Unmarshal(m, b)
}
func (m *UpdateClusterVariablesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateClusterVariablesResponse.Marshal(b, m, deterministic)
}
func (m *UpdateClusterVariablesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateClusterVariablesResponse.Merge(m, src)
}
func (m *UpdateClusterVariablesResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateClusterVariablesResponse.Size(m)
}
func (m *UpdateClusterVariablesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateClusterVariablesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateClusterVariablesResponse proto.InternalMessageInfo

func (m *UpdateClusterVariablesResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateClusterVariablesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateClusterVariablesResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type UpdateNamespaceVariablesRequest struct {
	ProjectCode          string           `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	ClusterID            string           `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Namespace            string           `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Data                 []*VariableValue `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UpdateNamespaceVariablesRequest) Reset()         { *m = UpdateNamespaceVariablesRequest{} }
func (m *UpdateNamespaceVariablesRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateNamespaceVariablesRequest) ProtoMessage()    {}
func (*UpdateNamespaceVariablesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{50}
}

func (m *UpdateNamespaceVariablesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNamespaceVariablesRequest.Unmarshal(m, b)
}
func (m *UpdateNamespaceVariablesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNamespaceVariablesRequest.Marshal(b, m, deterministic)
}
func (m *UpdateNamespaceVariablesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNamespaceVariablesRequest.Merge(m, src)
}
func (m *UpdateNamespaceVariablesRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateNamespaceVariablesRequest.Size(m)
}
func (m *UpdateNamespaceVariablesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNamespaceVariablesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNamespaceVariablesRequest proto.InternalMessageInfo

func (m *UpdateNamespaceVariablesRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *UpdateNamespaceVariablesRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *UpdateNamespaceVariablesRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *UpdateNamespaceVariablesRequest) GetData() []*VariableValue {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateNamespaceVariablesResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestID            string   `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateNamespaceVariablesResponse) Reset()         { *m = UpdateNamespaceVariablesResponse{} }
func (m *UpdateNamespaceVariablesResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateNamespaceVariablesResponse) ProtoMessage()    {}
func (*UpdateNamespaceVariablesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{51}
}

func (m *UpdateNamespaceVariablesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNamespaceVariablesResponse.Unmarshal(m, b)
}
func (m *UpdateNamespaceVariablesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNamespaceVariablesResponse.Marshal(b, m, deterministic)
}
func (m *UpdateNamespaceVariablesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNamespaceVariablesResponse.Merge(m, src)
}
func (m *UpdateNamespaceVariablesResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateNamespaceVariablesResponse.Size(m)
}
func (m *UpdateNamespaceVariablesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNamespaceVariablesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNamespaceVariablesResponse proto.InternalMessageInfo

func (m *UpdateNamespaceVariablesResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateNamespaceVariablesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateNamespaceVariablesResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type ImportVariablesRequest struct {
	ProjectCode          string                `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	Data                 []*ImportVariableData `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ImportVariablesRequest) Reset()         { *m = ImportVariablesRequest{} }
func (m *ImportVariablesRequest) String() string { return proto.CompactTextString(m) }
func (*ImportVariablesRequest) ProtoMessage()    {}
func (*ImportVariablesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{52}
}

func (m *ImportVariablesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportVariablesRequest.Unmarshal(m, b)
}
func (m *ImportVariablesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportVariablesRequest.Marshal(b, m, deterministic)
}
func (m *ImportVariablesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportVariablesRequest.Merge(m, src)
}
func (m *ImportVariablesRequest) XXX_Size() int {
	return xxx_messageInfo_ImportVariablesRequest.Size(m)
}
func (m *ImportVariablesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportVariablesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImportVariablesRequest proto.InternalMessageInfo

func (m *ImportVariablesRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *ImportVariablesRequest) GetData() []*ImportVariableData {
	if m != nil {
		return m.Data
	}
	return nil
}

type ImportVariablesResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestID            string   `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportVariablesResponse) Reset()         { *m = ImportVariablesResponse{} }
func (m *ImportVariablesResponse) String() string { return proto.CompactTextString(m) }
func (*ImportVariablesResponse) ProtoMessage()    {}
func (*ImportVariablesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{53}
}

func (m *ImportVariablesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportVariablesResponse.Unmarshal(m, b)
}
func (m *ImportVariablesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportVariablesResponse.Marshal(b, m, deterministic)
}
func (m *ImportVariablesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportVariablesResponse.Merge(m, src)
}
func (m *ImportVariablesResponse) XXX_Size() int {
	return xxx_messageInfo_ImportVariablesResponse.Size(m)
}
func (m *ImportVariablesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportVariablesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImportVariablesResponse proto.InternalMessageInfo

func (m *ImportVariablesResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ImportVariablesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ImportVariablesResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type RenderVariablesRequest struct {
	ProjectCode          string   `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Namespace            string   `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	KeyList              string   `protobuf:"bytes,4,opt,name=keyList,proto3" json:"keyList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenderVariablesRequest) Reset()         { *m = RenderVariablesRequest{} }
func (m *RenderVariablesRequest) String() string { return proto.CompactTextString(m) }
func (*RenderVariablesRequest) ProtoMessage()    {}
func (*RenderVariablesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{54}
}

func (m *RenderVariablesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenderVariablesRequest.Unmarshal(m, b)
}
func (m *RenderVariablesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenderVariablesRequest.Marshal(b, m, deterministic)
}
func (m *RenderVariablesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenderVariablesRequest.Merge(m, src)
}
func (m *RenderVariablesRequest) XXX_Size() int {
	return xxx_messageInfo_RenderVariablesRequest.Size(m)
}
func (m *RenderVariablesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RenderVariablesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RenderVariablesRequest proto.InternalMessageInfo

func (m *RenderVariablesRequest) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *RenderVariablesRequest) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *RenderVariablesRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *RenderVariablesRequest) GetKeyList() string {
	if m != nil {
		return m.KeyList
	}
	return ""
}

type RenderVariablesResponse struct {
	Code                 uint32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 []*VariableValue `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	RequestID            string           `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RenderVariablesResponse) Reset()         { *m = RenderVariablesResponse{} }
func (m *RenderVariablesResponse) String() string { return proto.CompactTextString(m) }
func (*RenderVariablesResponse) ProtoMessage()    {}
func (*RenderVariablesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{55}
}

func (m *RenderVariablesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenderVariablesResponse.Unmarshal(m, b)
}
func (m *RenderVariablesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenderVariablesResponse.Marshal(b, m, deterministic)
}
func (m *RenderVariablesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenderVariablesResponse.Merge(m, src)
}
func (m *RenderVariablesResponse) XXX_Size() int {
	return xxx_messageInfo_RenderVariablesResponse.Size(m)
}
func (m *RenderVariablesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RenderVariablesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RenderVariablesResponse proto.InternalMessageInfo

func (m *RenderVariablesResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RenderVariablesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RenderVariablesResponse) GetData() []*VariableValue {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RenderVariablesResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type VariableDefinition struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Default              string   `protobuf:"bytes,4,opt,name=default,proto3" json:"default,omitempty"`
	DefaultValue         string   `protobuf:"bytes,5,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	Scope                string   `protobuf:"bytes,6,opt,name=scope,proto3" json:"scope,omitempty"`
	ScopeName            string   `protobuf:"bytes,7,opt,name=scopeName,proto3" json:"scopeName,omitempty"`
	Category             string   `protobuf:"bytes,8,opt,name=category,proto3" json:"category,omitempty"`
	CategoryName         string   `protobuf:"bytes,9,opt,name=categoryName,proto3" json:"categoryName,omitempty"`
	Desc                 string   `protobuf:"bytes,10,opt,name=desc,proto3" json:"desc,omitempty"`
	Created              string   `protobuf:"bytes,11,opt,name=created,proto3" json:"created,omitempty"`
	Updated              string   `protobuf:"bytes,12,opt,name=updated,proto3" json:"updated,omitempty"`
	Creator              string   `protobuf:"bytes,13,opt,name=creator,proto3" json:"creator,omitempty"`
	Updater              string   `protobuf:"bytes,14,opt,name=updater,proto3" json:"updater,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VariableDefinition) Reset()         { *m = VariableDefinition{} }
func (m *VariableDefinition) String() string { return proto.CompactTextString(m) }
func (*VariableDefinition) ProtoMessage()    {}
func (*VariableDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{56}
}

func (m *VariableDefinition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VariableDefinition.Unmarshal(m, b)
}
func (m *VariableDefinition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VariableDefinition.Marshal(b, m, deterministic)
}
func (m *VariableDefinition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VariableDefinition.Merge(m, src)
}
func (m *VariableDefinition) XXX_Size() int {
	return xxx_messageInfo_VariableDefinition.Size(m)
}
func (m *VariableDefinition) XXX_DiscardUnknown() {
	xxx_messageInfo_VariableDefinition.DiscardUnknown(m)
}

var xxx_messageInfo_VariableDefinition proto.InternalMessageInfo

func (m *VariableDefinition) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *VariableDefinition) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *VariableDefinition) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VariableDefinition) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *VariableDefinition) GetDefaultValue() string {
	if m != nil {
		return m.DefaultValue
	}
	return ""
}

func (m *VariableDefinition) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *VariableDefinition) GetScopeName() string {
	if m != nil {
		return m.ScopeName
	}
	return ""
}

func (m *VariableDefinition) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *VariableDefinition) GetCategoryName() string {
	if m != nil {
		return m.CategoryName
	}
	return ""
}

func (m *VariableDefinition) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *VariableDefinition) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *VariableDefinition) GetUpdated() string {
	if m != nil {
		return m.Updated
	}
	return ""
}

func (m *VariableDefinition) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *VariableDefinition) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

type VariableValue struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ClusterID            string   `protobuf:"bytes,4,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ClusterName          string   `protobuf:"bytes,5,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Namespace            string   `protobuf:"bytes,6,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Value                string   `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
	Scope                string   `protobuf:"bytes,8,opt,name=scope,proto3" json:"scope,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VariableValue) Reset()         { *m = VariableValue{} }
func (m *VariableValue) String() string { return proto.CompactTextString(m) }
func (*VariableValue) ProtoMessage()    {}
func (*VariableValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{57}
}

func (m *VariableValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VariableValue.Unmarshal(m, b)
}
func (m *VariableValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VariableValue.Marshal(b, m, deterministic)
}
func (m *VariableValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VariableValue.Merge(m, src)
}
func (m *VariableValue) XXX_Size() int {
	return xxx_messageInfo_VariableValue.Size(m)
}
func (m *VariableValue) XXX_DiscardUnknown() {
	xxx_messageInfo_VariableValue.DiscardUnknown(m)
}

var xxx_messageInfo_VariableValue proto.InternalMessageInfo

func (m *VariableValue) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *VariableValue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *VariableValue) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VariableValue) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *VariableValue) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *VariableValue) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *VariableValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *VariableValue) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

type CreateVariableData struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectCode          string   `protobuf:"bytes,2,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Key                  string   `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Scope                string   `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
	Default              string   `protobuf:"bytes,6,opt,name=default,proto3" json:"default,omitempty"`
	Desc                 string   `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`
	Category             string   `protobuf:"bytes,8,opt,name=category,proto3" json:"category,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVariableData) Reset()         { *m = CreateVariableData{} }
func (m *CreateVariableData) String() string { return proto.CompactTextString(m) }
func (*CreateVariableData) ProtoMessage()    {}
func (*CreateVariableData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{58}
}

func (m *CreateVariableData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVariableData.Unmarshal(m, b)
}
func (m *CreateVariableData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVariableData.Marshal(b, m, deterministic)
}
func (m *CreateVariableData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVariableData.Merge(m, src)
}
func (m *CreateVariableData) XXX_Size() int {
	return xxx_messageInfo_CreateVariableData.Size(m)
}
func (m *CreateVariableData) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVariableData.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVariableData proto.InternalMessageInfo

func (m *CreateVariableData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateVariableData) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *CreateVariableData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateVariableData) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *CreateVariableData) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *CreateVariableData) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *CreateVariableData) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *CreateVariableData) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

type UpdateVariableData struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectCode          string   `protobuf:"bytes,2,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Key                  string   `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Scope                string   `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
	Default              string   `protobuf:"bytes,6,opt,name=default,proto3" json:"default,omitempty"`
	Desc                 string   `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`
	Category             string   `protobuf:"bytes,8,opt,name=category,proto3" json:"category,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateVariableData) Reset()         { *m = UpdateVariableData{} }
func (m *UpdateVariableData) String() string { return proto.CompactTextString(m) }
func (*UpdateVariableData) ProtoMessage()    {}
func (*UpdateVariableData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{59}
}

func (m *UpdateVariableData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateVariableData.Unmarshal(m, b)
}
func (m *UpdateVariableData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateVariableData.Marshal(b, m, deterministic)
}
func (m *UpdateVariableData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateVariableData.Merge(m, src)
}
func (m *UpdateVariableData) XXX_Size() int {
	return xxx_messageInfo_UpdateVariableData.Size(m)
}
func (m *UpdateVariableData) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateVariableData.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateVariableData proto.InternalMessageInfo

func (m *UpdateVariableData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateVariableData) GetProjectCode() string {
	if m != nil {
		return m.ProjectCode
	}
	return ""
}

func (m *UpdateVariableData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateVariableData) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *UpdateVariableData) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *UpdateVariableData) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *UpdateVariableData) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *UpdateVariableData) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

type ListVariableDefinitionData struct {
	Total                uint32                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Results              []*VariableDefinition `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ListVariableDefinitionData) Reset()         { *m = ListVariableDefinitionData{} }
func (m *ListVariableDefinitionData) String() string { return proto.CompactTextString(m) }
func (*ListVariableDefinitionData) ProtoMessage()    {}
func (*ListVariableDefinitionData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{60}
}

func (m *ListVariableDefinitionData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVariableDefinitionData.Unmarshal(m, b)
}
func (m *ListVariableDefinitionData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVariableDefinitionData.Marshal(b, m, deterministic)
}
func (m *ListVariableDefinitionData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVariableDefinitionData.Merge(m, src)
}
func (m *ListVariableDefinitionData) XXX_Size() int {
	return xxx_messageInfo_ListVariableDefinitionData.Size(m)
}
func (m *ListVariableDefinitionData) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVariableDefinitionData.DiscardUnknown(m)
}

var xxx_messageInfo_ListVariableDefinitionData proto.InternalMessageInfo

func (m *ListVariableDefinitionData) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListVariableDefinitionData) GetResults() []*VariableDefinition {
	if m != nil {
		return m.Results
	}
	return nil
}

type DeleteVariableDefinitionsData struct {
	Total                uint32   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVariableDefinitionsData) Reset()         { *m = DeleteVariableDefinitionsData{} }
func (m *DeleteVariableDefinitionsData) String() string { return proto.CompactTextString(m) }
func (*DeleteVariableDefinitionsData) ProtoMessage()    {}
func (*DeleteVariableDefinitionsData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{61}
}

func (m *DeleteVariableDefinitionsData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVariableDefinitionsData.Unmarshal(m, b)
}
func (m *DeleteVariableDefinitionsData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVariableDefinitionsData.Marshal(b, m, deterministic)
}
func (m *DeleteVariableDefinitionsData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVariableDefinitionsData.Merge(m, src)
}
func (m *DeleteVariableDefinitionsData) XXX_Size() int {
	return xxx_messageInfo_DeleteVariableDefinitionsData.Size(m)
}
func (m *DeleteVariableDefinitionsData) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVariableDefinitionsData.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVariableDefinitionsData proto.InternalMessageInfo

func (m *DeleteVariableDefinitionsData) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type ListVariableValuesData struct {
	Total                uint32           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Results              []*VariableValue `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListVariableValuesData) Reset()         { *m = ListVariableValuesData{} }
func (m *ListVariableValuesData) String() string { return proto.CompactTextString(m) }
func (*ListVariableValuesData) ProtoMessage()    {}
func (*ListVariableValuesData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{62}
}

func (m *ListVariableValuesData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVariableValuesData.Unmarshal(m, b)
}
func (m *ListVariableValuesData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVariableValuesData.Marshal(b, m, deterministic)
}
func (m *ListVariableValuesData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVariableValuesData.Merge(m, src)
}
func (m *ListVariableValuesData) XXX_Size() int {
	return xxx_messageInfo_ListVariableValuesData.Size(m)
}
func (m *ListVariableValuesData) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVariableValuesData.DiscardUnknown(m)
}

var xxx_messageInfo_ListVariableValuesData proto.InternalMessageInfo

func (m *ListVariableValuesData) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListVariableValuesData) GetResults() []*VariableValue {
	if m != nil {
		return m.Results
	}
	return nil
}

type ImportVariableData struct {
	Name                 string                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Key                  string                   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Scope                string                   `protobuf:"bytes,3,opt,name=scope,proto3" json:"scope,omitempty"`
	Value                string                   `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Desc                 string                   `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`
	Vars                 []*ImportVariableVarData `protobuf:"bytes,6,rep,name=vars,proto3" json:"vars,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ImportVariableData) Reset()         { *m = ImportVariableData{} }
func (m *ImportVariableData) String() string { return proto.CompactTextString(m) }
func (*ImportVariableData) ProtoMessage()    {}
func (*ImportVariableData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{63}
}

func (m *ImportVariableData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportVariableData.Unmarshal(m, b)
}
func (m *ImportVariableData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportVariableData.Marshal(b, m, deterministic)
}
func (m *ImportVariableData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportVariableData.Merge(m, src)
}
func (m *ImportVariableData) XXX_Size() int {
	return xxx_messageInfo_ImportVariableData.Size(m)
}
func (m *ImportVariableData) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportVariableData.DiscardUnknown(m)
}

var xxx_messageInfo_ImportVariableData proto.InternalMessageInfo

func (m *ImportVariableData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ImportVariableData) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ImportVariableData) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *ImportVariableData) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *ImportVariableData) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *ImportVariableData) GetVars() []*ImportVariableVarData {
	if m != nil {
		return m.Vars
	}
	return nil
}

type ImportVariableVarData struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Value                string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportVariableVarData) Reset()         { *m = ImportVariableVarData{} }
func (m *ImportVariableVarData) String() string { return proto.CompactTextString(m) }
func (*ImportVariableVarData) ProtoMessage()    {}
func (*ImportVariableVarData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{64}
}

func (m *ImportVariableVarData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportVariableVarData.Unmarshal(m, b)
}
func (m *ImportVariableVarData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportVariableVarData.Marshal(b, m, deterministic)
}
func (m *ImportVariableVarData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportVariableVarData.Merge(m, src)
}
func (m *ImportVariableVarData) XXX_Size() int {
	return xxx_messageInfo_ImportVariableVarData.Size(m)
}
func (m *ImportVariableVarData) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportVariableVarData.DiscardUnknown(m)
}

var xxx_messageInfo_ImportVariableVarData proto.InternalMessageInfo

func (m *ImportVariableVarData) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ImportVariableVarData) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ImportVariableVarData) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type HealthzRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthzRequest) Reset()         { *m = HealthzRequest{} }
func (m *HealthzRequest) String() string { return proto.CompactTextString(m) }
func (*HealthzRequest) ProtoMessage()    {}
func (*HealthzRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{65}
}

func (m *HealthzRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthzRequest.Unmarshal(m, b)
}
func (m *HealthzRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthzRequest.Marshal(b, m, deterministic)
}
func (m *HealthzRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthzRequest.Merge(m, src)
}
func (m *HealthzRequest) XXX_Size() int {
	return xxx_messageInfo_HealthzRequest.Size(m)
}
func (m *HealthzRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthzRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HealthzRequest proto.InternalMessageInfo

type HealthzResponse struct {
	Code                 uint32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *HealthzData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string       `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *HealthzResponse) Reset()         { *m = HealthzResponse{} }
func (m *HealthzResponse) String() string { return proto.CompactTextString(m) }
func (*HealthzResponse) ProtoMessage()    {}
func (*HealthzResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{66}
}

func (m *HealthzResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthzResponse.Unmarshal(m, b)
}
func (m *HealthzResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthzResponse.Marshal(b, m, deterministic)
}
func (m *HealthzResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthzResponse.Merge(m, src)
}
func (m *HealthzResponse) XXX_Size() int {
	return xxx_messageInfo_HealthzResponse.Size(m)
}
func (m *HealthzResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthzResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HealthzResponse proto.InternalMessageInfo

func (m *HealthzResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *HealthzResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *HealthzResponse) GetData() *HealthzData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *HealthzResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type HealthzData struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	MongoStatus          string   `protobuf:"bytes,2,opt,name=mongoStatus,proto3" json:"mongoStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthzData) Reset()         { *m = HealthzData{} }
func (m *HealthzData) String() string { return proto.CompactTextString(m) }
func (*HealthzData) ProtoMessage()    {}
func (*HealthzData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{67}
}

func (m *HealthzData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthzData.Unmarshal(m, b)
}
func (m *HealthzData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthzData.Marshal(b, m, deterministic)
}
func (m *HealthzData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthzData.Merge(m, src)
}
func (m *HealthzData) XXX_Size() int {
	return xxx_messageInfo_HealthzData.Size(m)
}
func (m *HealthzData) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthzData.DiscardUnknown(m)
}

var xxx_messageInfo_HealthzData proto.InternalMessageInfo

func (m *HealthzData) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *HealthzData) GetMongoStatus() string {
	if m != nil {
		return m.MongoStatus
	}
	return ""
}

type PingRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingRequest) Reset()         { *m = PingRequest{} }
func (m *PingRequest) String() string { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()    {}
func (*PingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{68}
}

func (m *PingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRequest.Unmarshal(m, b)
}
func (m *PingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRequest.Marshal(b, m, deterministic)
}
func (m *PingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRequest.Merge(m, src)
}
func (m *PingRequest) XXX_Size() int {
	return xxx_messageInfo_PingRequest.Size(m)
}
func (m *PingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingRequest proto.InternalMessageInfo

type PingResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestID            string   `protobuf:"bytes,4,opt,name=requestID,proto3" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingResponse) Reset()         { *m = PingResponse{} }
func (m *PingResponse) String() string { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()    {}
func (*PingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e6fb1d9dcd095e1, []int{69}
}

func (m *PingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingResponse.Unmarshal(m, b)
}
func (m *PingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingResponse.Marshal(b, m, deterministic)
}
func (m *PingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingResponse.Merge(m, src)
}
func (m *PingResponse) XXX_Size() int {
	return xxx_messageInfo_PingResponse.Size(m)
}
func (m *PingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PingResponse proto.InternalMessageInfo

func (m *PingResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *PingResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *PingResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *PingResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

func init() {
	proto.RegisterType((*Project)(nil), "bcsproject.Project")
	proto.RegisterType((*CreateProjectRequest)(nil), "bcsproject.CreateProjectRequest")
	proto.RegisterType((*GetProjectRequest)(nil), "bcsproject.GetProjectRequest")
	proto.RegisterType((*UpdateProjectRequest)(nil), "bcsproject.UpdateProjectRequest")
	proto.RegisterType((*DeleteProjectRequest)(nil), "bcsproject.DeleteProjectRequest")
	proto.RegisterType((*ProjectResponse)(nil), "bcsproject.ProjectResponse")
	proto.RegisterType((*ListProjectsRequest)(nil), "bcsproject.ListProjectsRequest")
	proto.RegisterType((*ListProjectData)(nil), "bcsproject.ListProjectData")
	proto.RegisterType((*ListProjectsResponse)(nil), "bcsproject.ListProjectsResponse")
	proto.RegisterType((*Perms)(nil), "bcsproject.Perms")
	proto.RegisterType((*ListAuthorizedProjReq)(nil), "bcsproject.ListAuthorizedProjReq")
	proto.RegisterType((*ListAuthorizedProjResp)(nil), "bcsproject.ListAuthorizedProjResp")
	proto.RegisterType((*CreateNamespaceRequest)(nil), "bcsproject.CreateNamespaceRequest")
	proto.RegisterType((*CreateNamespaceResponse)(nil), "bcsproject.CreateNamespaceResponse")
	proto.RegisterType((*NamespaceCallbackRequest)(nil), "bcsproject.NamespaceCallbackRequest")
	proto.RegisterType((*NamespaceCallbackResponse)(nil), "bcsproject.NamespaceCallbackResponse")
	proto.RegisterType((*UpdateNamespaceRequest)(nil), "bcsproject.UpdateNamespaceRequest")
	proto.RegisterType((*UpdateNamespaceResponse)(nil), "bcsproject.UpdateNamespaceResponse")
	proto.RegisterType((*GetNamespaceRequest)(nil), "bcsproject.GetNamespaceRequest")
	proto.RegisterType((*GetNamespaceResponse)(nil), "bcsproject.GetNamespaceResponse")
	proto.RegisterType((*ListNamespacesRequest)(nil), "bcsproject.ListNamespacesRequest")
	proto.RegisterType((*ListNamespacesResponse)(nil), "bcsproject.ListNamespacesResponse")
	proto.RegisterType((*DeleteNamespaceRequest)(nil), "bcsproject.DeleteNamespaceRequest")
	proto.RegisterType((*DeleteNamespaceResponse)(nil), "bcsproject.DeleteNamespaceResponse")
	proto.RegisterType((*NamespaceData)(nil), "bcsproject.NamespaceData")
	proto.RegisterType((*Label)(nil), "bcsproject.Label")
	proto.RegisterType((*Annotation)(nil), "bcsproject.Annotation")
	proto.RegisterType((*ResourceQuota)(nil), "bcsproject.ResourceQuota")
	proto.RegisterType((*CreateVariableRequest)(nil), "bcsproject.CreateVariableRequest")
	proto.RegisterType((*CreateVariableResponse)(nil), "bcsproject.CreateVariableResponse")
	proto.RegisterType((*UpdateVariableRequest)(nil), "bcsproject.UpdateVariableRequest")
	proto.RegisterType((*UpdateVariableResponse)(nil), "bcsproject.UpdateVariableResponse")
	proto.RegisterType((*ListVariableDefinitionsRequest)(nil), "bcsproject.ListVariableDefinitionsRequest")
	proto.RegisterType((*ListVariableDefinitionsResponse)(nil), "bcsproject.ListVariableDefinitionsResponse")
	proto.RegisterType((*DeleteVariableDefinitionsRequest)(nil), "bcsproject.DeleteVariableDefinitionsRequest")
	proto.RegisterType((*DeleteVariableDefinitionsResponse)(nil), "bcsproject.DeleteVariableDefinitionsResponse")
	proto.RegisterType((*ListClustersVariablesRequest)(nil), "bcsproject.ListClustersVariablesRequest")
	proto.RegisterType((*ListClustersVariablesResponse)(nil), "bcsproject.ListClustersVariablesResponse")
	proto.RegisterType((*ListNamespacesVariablesRequest)(nil), "bcsproject.ListNamespacesVariablesRequest")
	proto.RegisterType((*ListNamespacesVariablesResponse)(nil), "bcsproject.ListNamespacesVariablesResponse")
	proto.RegisterType((*UpdateClustersVariablesRequest)(nil), "bcsproject.UpdateClustersVariablesRequest")
	proto.RegisterType((*UpdateClustersVariablesResponse)(nil), "bcsproject.UpdateClustersVariablesResponse")
	proto.RegisterType((*UpdateNamespacesVariablesRequest)(nil), "bcsproject.UpdateNamespacesVariablesRequest")
	proto.RegisterType((*UpdateNamespacesVariablesResponse)(nil), "bcsproject.UpdateNamespacesVariablesResponse")
	proto.RegisterType((*ListClusterVariablesRequest)(nil), "bcsproject.ListClusterVariablesRequest")
	proto.RegisterType((*ListClusterVariablesResponse)(nil), "bcsproject.ListClusterVariablesResponse")
	proto.RegisterType((*ListNamespaceVariablesRequest)(nil), "bcsproject.ListNamespaceVariablesRequest")
	proto.RegisterType((*ListNamespaceVariablesResponse)(nil), "bcsproject.ListNamespaceVariablesResponse")
	proto.RegisterType((*UpdateClusterVariablesRequest)(nil), "bcsproject.UpdateClusterVariablesRequest")
	proto.RegisterType((*UpdateClusterVariablesResponse)(nil), "bcsproject.UpdateClusterVariablesResponse")
	proto.RegisterType((*UpdateNamespaceVariablesRequest)(nil), "bcsproject.UpdateNamespaceVariablesRequest")
	proto.RegisterType((*UpdateNamespaceVariablesResponse)(nil), "bcsproject.UpdateNamespaceVariablesResponse")
	proto.RegisterType((*ImportVariablesRequest)(nil), "bcsproject.ImportVariablesRequest")
	proto.RegisterType((*ImportVariablesResponse)(nil), "bcsproject.ImportVariablesResponse")
	proto.RegisterType((*RenderVariablesRequest)(nil), "bcsproject.RenderVariablesRequest")
	proto.RegisterType((*RenderVariablesResponse)(nil), "bcsproject.RenderVariablesResponse")
	proto.RegisterType((*VariableDefinition)(nil), "bcsproject.VariableDefinition")
	proto.RegisterType((*VariableValue)(nil), "bcsproject.VariableValue")
	proto.RegisterType((*CreateVariableData)(nil), "bcsproject.CreateVariableData")
	proto.RegisterType((*UpdateVariableData)(nil), "bcsproject.UpdateVariableData")
	proto.RegisterType((*ListVariableDefinitionData)(nil), "bcsproject.ListVariableDefinitionData")
	proto.RegisterType((*DeleteVariableDefinitionsData)(nil), "bcsproject.DeleteVariableDefinitionsData")
	proto.RegisterType((*ListVariableValuesData)(nil), "bcsproject.ListVariableValuesData")
	proto.RegisterType((*ImportVariableData)(nil), "bcsproject.ImportVariableData")
	proto.RegisterType((*ImportVariableVarData)(nil), "bcsproject.ImportVariableVarData")
	proto.RegisterType((*HealthzRequest)(nil), "bcsproject.HealthzRequest")
	proto.RegisterType((*HealthzResponse)(nil), "bcsproject.HealthzResponse")
	proto.RegisterType((*HealthzData)(nil), "bcsproject.HealthzData")
	proto.RegisterType((*PingRequest)(nil), "bcsproject.PingRequest")
	proto.RegisterType((*PingResponse)(nil), "bcsproject.PingResponse")
}

func init() { proto.RegisterFile("bcsproject.proto", fileDescriptor_0e6fb1d9dcd095e1) }

var fileDescriptor_0e6fb1d9dcd095e1 = []byte{
	// 7764 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x7d, 0x5b, 0x70, 0x14, 0x47,
	0xb6, 0xe0, 0x54, 0xeb, 0x81, 0x94, 0x7a, 0x41, 0x9a, 0x47, 0xbb, 0x79, 0x15, 0x6d, 0x30, 0x50,
	0x48, 0x08, 0x15, 0x8c, 0x6d, 0xda, 0x9e, 0x31, 0xd5, 0xc8, 0x66, 0x64, 0xc0, 0xc6, 0x85, 0xc1,
	0xbe, 0x30, 0x36, 0x6e, 0xa4, 0x42, 0xb4, 0x69, 0xa9, 0x35, 0x5d, 0x2d, 0xe6, 0xca, 0x5e, 0xc7,
	0x8a, 0xe1, 0x21, 0xde, 0xc2, 0x85, 0x78, 0x58, 0x60, 0x83, 0x7c, 0xc1, 0x16, 0xb6, 0x91, 0x30,
	0x06, 0x23, 0x24, 0x61, 0xed, 0x46, 0xdc, 0x7d, 0x45, 0xec, 0xcf, 0xf5, 0xbd, 0x1b, 0x13, 0xfb,
	0xb1, 0xb1, 0xb1, 0x31, 0x5d, 0xdd, 0xad, 0xd8, 0x88, 0xf5, 0xfe, 0xec, 0x8f, 0x37, 0x62, 0x63,
	0xa3, 0x32, 0xb3, 0xaa, 0xb2, 0xaa, 0xfa, 0x21, 0x41, 0x83, 0xc4, 0x0c, 0x3f, 0x52, 0x77, 0x3e,
	0x4e, 0x9e, 0x73, 0xf2, 0xe4, 0x39, 0x27, 0x4f, 0x9e, 0xcc, 0x06, 0x53, 0x77, 0xd6, 0xcb, 0x2d,
	0x91, 0xf0, 0x07, 0x52, 0x7d, 0x74, 0x79, 0x4b, 0x24, 0x1c, 0x0d, 0x43, 0x60, 0x96, 0x78, 0xe6,
	0x34, 0x86, 0xc3, 0x8d, 0x21, 0xa9, 0x3a, 0xd0, 0x12, 0xac, 0x0e, 0x34, 0x37, 0x87, 0xa3, 0x81,
	0x68, 0x30, 0xdc, 0x2c, 0xe3, 0x96, 0x9e, 0x79, 0xa4, 0x16, 0x7d, 0xdb, 0xd9, 0xba, 0xab, 0xfa,
	0x8f, 0x91, 0x40, 0x4b, 0x8b, 0x14, 0xd1, 0xeb, 0x2b, 0xd1, 0xbf, 0xfa, 0xaa, 0x46, 0xa9, 0xb9,
	0x4a, 0xfe, 0x63, 0xa0, 0xb1, 0x51, 0x8a, 0x54, 0x87, 0x5b, 0x10, 0x84, 0x14, 0xd0, 0x66, 0xed,
	0x0d, 0x84, 0x82, 0x0d, 0x81, 0xa8, 0x54, 0xad, 0x7f, 0x20, 0x15, 0x73, 0xec, 0xc3, 0xc8, 0xd1,
	0x48, 0xab, 0x8e, 0xae, 0xf7, 0x1f, 0x2b, 0xc0, 0x94, 0x4d, 0x18, 0x5d, 0xf8, 0x1b, 0x00, 0xea,
	0x23, 0x52, 0x20, 0x2a, 0xbd, 0x15, 0x6c, 0x92, 0xdc, 0x0c, 0xcb, 0x2c, 0x29, 0xf6, 0xcf, 0x55,
	0x04, 0x0f, 0x47, 0x15, 0xf3, 0xa5, 0xea, 0xe1, 0x0b, 0xea, 0xd0, 0x60, 0xfc, 0xdc, 0x0f, 0xa3,
	0xe7, 0x6e, 0x89, 0x54, 0x8d, 0xd6, 0xbd, 0xb5, 0xa5, 0x41, 0xef, 0xee, 0xa2, 0xba, 0x9b, 0xc5,
	0x7c, 0x69, 0xfc, 0xc2, 0xad, 0xf8, 0xd9, 0x1b, 0x7a, 0x77, 0xb3, 0x06, 0x3e, 0x0f, 0xa6, 0x20,
	0x60, 0xe1, 0x88, 0x3b, 0xcf, 0xec, 0xab, 0x97, 0xf1, 0x15, 0xa3, 0x3d, 0x77, 0x13, 0x17, 0xfa,
	0xf0, 0xe8, 0xc9, 0xf6, 0x83, 0xa2, 0x5e, 0xa3, 0x75, 0xc4, 0x60, 0x22, 0xee, 0x7c, 0xaa, 0x23,
	0x29, 0xd3, 0x3b, 0xe2, 0x71, 0x51, 0x47, 0x52, 0x03, 0x7f, 0x0f, 0x8a, 0x9a, 0x02, 0xcd, 0x81,
	0x46, 0x29, 0x22, 0xbb, 0x0b, 0x50, 0xcf, 0x35, 0x8a, 0xf0, 0x1b, 0xce, 0x28, 0xe4, 0x6b, 0x70,
	0xd7, 0x44, 0x5f, 0x4f, 0xe2, 0xd4, 0xa1, 0xd8, 0xe0, 0xa0, 0xfa, 0xc9, 0xf9, 0x9f, 0x87, 0x8f,
	0x8f, 0x0e, 0x9d, 0x4f, 0xf6, 0x5d, 0x89, 0x0d, 0x0c, 0x1a, 0xb8, 0x2c, 0x33, 0x81, 0x1b, 0x9d,
	0xe1, 0x1e, 0x50, 0x4c, 0xe4, 0xa0, 0xae, 0xd6, 0x5d, 0x88, 0xc0, 0x6f, 0x54, 0x84, 0xd7, 0x38,
	0xb3, 0x94, 0xff, 0x0d, 0x86, 0x5f, 0x57, 0x5b, 0xc9, 0xaa, 0x07, 0x7b, 0xd5, 0xef, 0xda, 0xd5,
	0xae, 0xfe, 0xd8, 0x40, 0x7b, 0x25, 0x3b, 0x7a, 0x66, 0x44, 0x1d, 0xfc, 0x32, 0x36, 0x30, 0xb8,
	0x92, 0x8f, 0xdd, 0x3b, 0xa1, 0x5e, 0x3f, 0x97, 0xf8, 0xf6, 0xcb, 0xd8, 0xc0, 0xcd, 0x4a, 0x36,
	0xd9, 0xf1, 0xb5, 0x7a, 0xb4, 0x37, 0xd1, 0x75, 0x29, 0x7e, 0xf8, 0x94, 0x68, 0x42, 0x82, 0x1b,
	0x41, 0x7e, 0x73, 0xa0, 0x49, 0x72, 0x4f, 0x41, 0xe3, 0xac, 0x56, 0x84, 0xe7, 0x38, 0x54, 0xc0,
	0x2f, 0xc7, 0x43, 0xc4, 0x06, 0xae, 0xc7, 0xcf, 0x76, 0xa8, 0xa7, 0x4e, 0x24, 0xbe, 0xba, 0x61,
	0x82, 0x3f, 0x91, 0xdc, 0x7f, 0x2f, 0xf9, 0xc3, 0xc1, 0xe4, 0x48, 0xc7, 0x73, 0xab, 0xf0, 0x20,
	0x22, 0xea, 0x05, 0xff, 0x1e, 0x94, 0x10, 0xd8, 0x6b, 0xc3, 0x0d, 0x92, 0xbb, 0x08, 0x41, 0xdd,
	0xaa, 0x08, 0x9b, 0x39, 0xba, 0x9c, 0xaf, 0x25, 0xfc, 0x19, 0x3e, 0x9b, 0xb8, 0xbc, 0x6f, 0x49,
	0xf2, 0xd8, 0x77, 0xf1, 0xb3, 0x1d, 0x89, 0xe1, 0x6b, 0xea, 0xa1, 0x4f, 0x97, 0xa6, 0xa3, 0xc8,
	0x1c, 0x72, 0x25, 0x4f, 0x86, 0xa4, 0x41, 0xc2, 0xbd, 0xa0, 0xa8, 0x55, 0x96, 0xfc, 0xeb, 0x45,
	0x49, 0x76, 0x17, 0xb3, 0xcc, 0x92, 0x22, 0xff, 0x36, 0x45, 0x78, 0x9b, 0x33, 0x0a, 0xf9, 0xf5,
	0xf1, 0xf3, 0xfd, 0xea, 0xa9, 0x2f, 0x63, 0xf7, 0x46, 0x12, 0x5d, 0xbd, 0xc9, 0xd3, 0x9f, 0x8d,
	0xde, 0x1c, 0x88, 0x77, 0x9e, 0x8a, 0xfd, 0x78, 0x21, 0xd1, 0x7d, 0x20, 0x79, 0xfb, 0x40, 0x7c,
	0xf0, 0x54, 0xfc, 0xbb, 0xcb, 0x95, 0x6c, 0x6c, 0x60, 0x28, 0xf9, 0xe5, 0xbe, 0x44, 0x57, 0x6f,
	0x6c, 0xf0, 0x24, 0x2e, 0x4e, 0xf6, 0xf5, 0x24, 0x6f, 0xdd, 0xad, 0x64, 0xf1, 0xf4, 0xed, 0x0a,
	0x84, 0x64, 0x49, 0x34, 0xc0, 0xc2, 0x6d, 0xa0, 0xa4, 0x41, 0x92, 0xeb, 0x23, 0x41, 0xb4, 0xc0,
	0xdc, 0x00, 0x51, 0xfc, 0x82, 0x22, 0xfc, 0x9a, 0xa3, 0xcb, 0xf9, 0x67, 0x89, 0x30, 0x75, 0x76,
	0x26, 0x47, 0x6e, 0x54, 0xb2, 0xea, 0x8d, 0x7b, 0xa3, 0x1d, 0x9d, 0xa3, 0x9f, 0x9e, 0x52, 0x0f,
	0xff, 0xa0, 0x5e, 0xec, 0xad, 0x59, 0xb1, 0x42, 0xa7, 0x89, 0xea, 0x04, 0x37, 0x83, 0xe2, 0xa0,
	0xfc, 0xc6, 0xae, 0x5d, 0xa1, 0x60, 0xb3, 0xe4, 0x2e, 0x41, 0x44, 0xfd, 0x5a, 0x11, 0x78, 0xce,
	0x2c, 0xe5, 0x17, 0x11, 0xb8, 0x88, 0x36, 0xf5, 0xce, 0xcd, 0xc4, 0x50, 0x67, 0x6c, 0xe0, 0x58,
	0x62, 0x70, 0xc4, 0x8a, 0xaf, 0xd9, 0x03, 0xbe, 0x02, 0xf2, 0xf7, 0x04, 0x9b, 0x1b, 0xdc, 0xa5,
	0x08, 0xd3, 0x1a, 0x45, 0x58, 0xce, 0xa1, 0x02, 0x1d, 0xc5, 0xd8, 0xc0, 0xf5, 0xd1, 0x0b, 0x87,
	0x12, 0x3f, 0x5e, 0x49, 0x7c, 0x37, 0xa4, 0x7e, 0x7e, 0xac, 0x92, 0x55, 0x3b, 0xfb, 0x47, 0xdb,
	0x8f, 0xec, 0x79, 0x41, 0xae, 0x6e, 0x92, 0xe4, 0xb0, 0x2c, 0xa2, 0xd6, 0x70, 0x3b, 0x00, 0x3b,
	0x5b, 0xe5, 0x60, 0xb3, 0x24, 0xcb, 0x75, 0xb5, 0xee, 0x32, 0x04, 0xec, 0x45, 0x45, 0x78, 0x81,
	0xa3, 0x8a, 0x79, 0x8e, 0xcc, 0xf3, 0xd0, 0x27, 0x6a, 0x5f, 0xb7, 0xc6, 0x67, 0xc4, 0xf6, 0xb5,
	0x1b, 0x6b, 0xfd, 0xb1, 0x81, 0xeb, 0xb1, 0x81, 0x6e, 0xf5, 0x68, 0x4f, 0x5d, 0x6d, 0x6c, 0xa4,
	0x27, 0xbe, 0xaf, 0x5f, 0xa4, 0xfa, 0xc1, 0x4d, 0xa0, 0x28, 0x28, 0x6f, 0x96, 0xea, 0x23, 0x52,
	0xd4, 0x5d, 0x8e, 0xe8, 0x5e, 0xa5, 0x08, 0x35, 0x9c, 0x51, 0xc8, 0x2f, 0x22, 0x93, 0x39, 0x30,
	0x18, 0x1b, 0xf9, 0x4c, 0xed, 0x3f, 0x84, 0xc7, 0xd1, 0x69, 0x8e, 0x0d, 0x0c, 0x92, 0x69, 0xd2,
	0x3b, 0xc0, 0xf3, 0x8c, 0x21, 0x99, 0x6f, 0xb5, 0xb5, 0x48, 0xee, 0x0a, 0x96, 0x59, 0x52, 0xe6,
	0xdf, 0xab, 0x08, 0x32, 0x97, 0x1f, 0x6d, 0x6b, 0x91, 0xf8, 0x3d, 0x04, 0x55, 0x42, 0x74, 0x6c,
	0xe4, 0xb3, 0xc4, 0x99, 0x4f, 0xd5, 0xeb, 0xe7, 0xe2, 0x7d, 0xb7, 0x29, 0xb0, 0x2b, 0x74, 0x76,
	0xb0, 0x35, 0xbe, 0xf8, 0x91, 0x63, 0xf1, 0x81, 0x81, 0x4a, 0x96, 0xf7, 0x25, 0xbe, 0xe9, 0x47,
	0x9f, 0x56, 0xfa, 0x46, 0x7b, 0x6e, 0xa3, 0x4f, 0xab, 0x7c, 0xea, 0xdd, 0xef, 0xd5, 0xce, 0x1b,
	0xb1, 0xc1, 0xaf, 0xd4, 0xd3, 0xfb, 0x2a, 0xd9, 0x5f, 0xfb, 0xe2, 0x5d, 0xfd, 0x71, 0xe5, 0x13,
	0xfc, 0x5d, 0xa4, 0x51, 0x81, 0x51, 0x00, 0x1a, 0xa4, 0x96, 0x50, 0xb8, 0x0d, 0x21, 0x36, 0x15,
	0x21, 0xf6, 0x96, 0x22, 0xbc, 0xc9, 0x51, 0xc5, 0xfc, 0x5a, 0xcc, 0xad, 0xd1, 0xfd, 0xbd, 0x89,
	0x7b, 0x37, 0x53, 0x23, 0x59, 0xe3, 0x4b, 0x1c, 0xb9, 0x96, 0x38, 0x75, 0x28, 0x7e, 0x71, 0x10,
	0x37, 0xd3, 0x50, 0x53, 0xfb, 0xee, 0xaa, 0x9f, 0xf6, 0xe2, 0xef, 0x22, 0x05, 0x10, 0xd6, 0x82,
	0x7c, 0xff, 0xba, 0xba, 0x5a, 0xf7, 0x34, 0x34, 0x73, 0x2b, 0x14, 0xa1, 0x8a, 0xcb, 0xdf, 0xd9,
	0x58, 0x57, 0xcb, 0x2f, 0x8a, 0x0d, 0x1e, 0x8b, 0x0d, 0x74, 0x27, 0x7e, 0xbc, 0xa2, 0xa9, 0x97,
	0x74, 0x7c, 0x10, 0x51, 0x6f, 0xb8, 0x09, 0x14, 0xfa, 0xd7, 0xbd, 0xae, 0x29, 0x10, 0x68, 0x0a,
	0x7e, 0xe1, 0xce, 0x46, 0xad, 0x88, 0x5f, 0x66, 0x40, 0xd2, 0xf5, 0x47, 0x1a, 0x68, 0x89, 0x6b,
	0x83, 0x22, 0x81, 0x03, 0xd7, 0x81, 0xc2, 0x06, 0xa9, 0x45, 0x53, 0x7d, 0x4f, 0x21, 0x88, 0xd5,
	0x8a, 0x50, 0xc9, 0x91, 0x22, 0xde, 0x3b, 0xba, 0xbf, 0x77, 0xf4, 0x5c, 0x6f, 0x46, 0xc4, 0x48,
	0x5b, 0xb8, 0x19, 0x14, 0x69, 0x9f, 0x10, 0x72, 0xd3, 0x11, 0xa8, 0xe7, 0x15, 0x61, 0x15, 0x67,
	0x14, 0xf2, 0x4b, 0x30, 0xb0, 0x31, 0xe0, 0x66, 0xf4, 0x81, 0x1b, 0x41, 0x51, 0xbd, 0xd4, 0x1c,
	0x95, 0x22, 0x75, 0xb5, 0xee, 0x19, 0xe6, 0x02, 0x32, 0x0a, 0x79, 0x6f, 0x6c, 0xe0, 0xba, 0x3a,
	0xb2, 0x3f, 0x23, 0x86, 0x46, 0x6b, 0xf8, 0x77, 0x00, 0xe0, 0xcf, 0x08, 0xcb, 0x99, 0xa6, 0x0e,
	0xa6, 0x8a, 0xf9, 0x25, 0x18, 0xe4, 0x18, 0xf0, 0xa4, 0x7a, 0xf9, 0x16, 0x29, 0x82, 0x17, 0xb0,
	0x9c, 0x6e, 0xa3, 0xf9, 0x19, 0x44, 0xbe, 0xbb, 0x0f, 0xa8, 0x97, 0x06, 0xe3, 0x17, 0xbf, 0xc5,
	0xab, 0xce, 0xfb, 0xef, 0xca, 0xc1, 0xf4, 0xb5, 0xc8, 0x14, 0x93, 0x86, 0xa2, 0xf4, 0x87, 0x56,
	0x49, 0x7e, 0x60, 0x9b, 0x4e, 0x19, 0x65, 0xd7, 0xb8, 0x8c, 0xb2, 0xc5, 0xfa, 0xe5, 0x3d, 0x64,
	0xeb, 0xb7, 0x95, 0x58, 0x3f, 0x6c, 0xfe, 0xfd, 0xf7, 0x6d, 0xfd, 0x7e, 0xf1, 0x17, 0x46, 0xf2,
	0xa7, 0xba, 0xdc, 0x6b, 0x88, 0x19, 0xdc, 0xc7, 0x58, 0xed, 0x20, 0x76, 0x12, 0x76, 0xe4, 0xd6,
	0x0e, 0x3a, 0x07, 0x4f, 0x6b, 0x10, 0x0b, 0x27, 0xce, 0x20, 0x4e, 0x79, 0x68, 0x06, 0xb1, 0x28,
	0x47, 0x06, 0xf1, 0x1d, 0x62, 0x10, 0x8b, 0x11, 0xa6, 0xb5, 0xe3, 0x36, 0x88, 0xbf, 0xf8, 0xa7,
	0x46, 0xca, 0xc5, 0x5f, 0x89, 0x79, 0x7b, 0x5e, 0x90, 0xc5, 0x82, 0xf4, 0x36, 0x12, 0x3c, 0x3c,
	0x1b, 0x59, 0xf2, 0x50, 0x6c, 0x64, 0xe9, 0xe4, 0xb1, 0x91, 0xff, 0xda, 0x62, 0x23, 0xcb, 0x10,
	0x62, 0x3b, 0x1e, 0x86, 0x8d, 0xfc, 0xc5, 0x5f, 0xc4, 0x15, 0xae, 0xf8, 0xd5, 0x0a, 0x66, 0x85,
	0x2b, 0xa5, 0xb9, 0x2c, 0xcf, 0x91, 0xb9, 0xac, 0xc8, 0xb9, 0xb9, 0x9c, 0x9a, 0x3b, 0x73, 0x39,
	0xed, 0x61, 0x98, 0x4b, 0x98, 0x6b, 0x73, 0xf9, 0x54, 0x2e, 0xcd, 0xe5, 0x6f, 0x15, 0xe1, 0x45,
	0xb0, 0x9a, 0x4b, 0x69, 0x0b, 0x75, 0x33, 0x87, 0xa5, 0xff, 0x27, 0x06, 0xe9, 0xf8, 0x9f, 0x18,
	0x5a, 0xdb, 0x7a, 0x6f, 0x32, 0x60, 0xda, 0x3a, 0x29, 0x6a, 0x33, 0xa2, 0x6f, 0x83, 0x0a, 0xc3,
	0xd8, 0xbc, 0x11, 0x41, 0xa6, 0x00, 0x5b, 0xd2, 0x2a, 0x45, 0xe0, 0x38, 0x7b, 0x1d, 0x3f, 0x4b,
	0x37, 0x6c, 0xf1, 0xc3, 0x67, 0x69, 0x63, 0x20, 0xda, 0x5b, 0xfa, 0x6a, 0x15, 0x41, 0x00, 0x2f,
	0x73, 0xce, 0x21, 0x79, 0x77, 0xfc, 0xd2, 0xd5, 0x64, 0xff, 0x17, 0xf1, 0xe3, 0x1d, 0x6a, 0x5f,
	0x37, 0x51, 0x60, 0x48, 0x79, 0xfc, 0xc4, 0xd8, 0xa1, 0x78, 0x3b, 0xcb, 0xc0, 0xf4, 0x2d, 0x68,
	0x4f, 0x6b, 0xc3, 0xfb, 0x0d, 0xda, 0x08, 0x33, 0xfa, 0xc4, 0xcd, 0xa0, 0x8d, 0x70, 0x91, 0x8e,
	0xeb, 0x2f, 0xfe, 0x99, 0x91, 0xe9, 0x7c, 0xc5, 0x7b, 0xdb, 0x57, 0x54, 0xad, 0x0e, 0x54, 0x7d,
	0x28, 0x54, 0x6d, 0xab, 0x7a, 0x77, 0xd9, 0xc2, 0xf3, 0x0c, 0x4b, 0x1b, 0xda, 0xb7, 0x88, 0xa1,
	0x75, 0xe9, 0xbb, 0xe5, 0xfb, 0x36, 0xb4, 0xf9, 0x11, 0xd3, 0xcc, 0xd6, 0x98, 0x1b, 0x78, 0xec,
	0x29, 0xcc, 0x52, 0x84, 0xe9, 0xe6, 0x06, 0xbe, 0x38, 0xc5, 0xd6, 0x5d, 0x61, 0x28, 0xb3, 0xa8,
	0x99, 0xfd, 0x12, 0xde, 0xb3, 0x1c, 0x07, 0x3a, 0x96, 0xeb, 0x81, 0x8e, 0xe5, 0xfe, 0x70, 0x38,
	0xb4, 0x35, 0x10, 0x6a, 0x95, 0x1e, 0x91, 0xc9, 0x7c, 0xd5, 0x6a, 0x32, 0xb1, 0xb7, 0xb0, 0x50,
	0x11, 0x16, 0x58, 0x4d, 0x26, 0xd4, 0xa3, 0x0a, 0xed, 0xc9, 0x2f, 0xf7, 0x61, 0xc3, 0x69, 0x35,
	0x8f, 0x61, 0xda, 0x3c, 0x16, 0x66, 0x25, 0xee, 0xc1, 0x4d, 0xe7, 0x4e, 0x62, 0x3a, 0xb1, 0x91,
	0x7f, 0x5d, 0x11, 0xd6, 0x13, 0xd3, 0xb9, 0x76, 0x6c, 0xa6, 0xb3, 0x92, 0x8d, 0x5f, 0xfc, 0x3a,
	0xfe, 0xd9, 0xd5, 0x64, 0xff, 0x55, 0xbc, 0x42, 0xd5, 0xce, 0xfe, 0xe4, 0xfe, 0x7b, 0xea, 0xe0,
	0x25, 0x75, 0x78, 0x7f, 0x4a, 0x23, 0x5a, 0x94, 0x5b, 0x23, 0x1a, 0xa2, 0x8c, 0x68, 0x71, 0x56,
	0x86, 0x3d, 0xa8, 0x81, 0xb5, 0xee, 0xf4, 0xc0, 0x23, 0xda, 0xe9, 0xd9, 0xcd, 0x7a, 0xc9, 0xe4,
	0x31, 0xeb, 0xba, 0x55, 0x2d, 0xcd, 0x91, 0x55, 0x2d, 0xcb, 0xb9, 0x55, 0x2d, 0xcf, 0x9d, 0x55,
	0xad, 0x78, 0x18, 0x56, 0x75, 0x6a, 0xae, 0xad, 0xea, 0xb4, 0x5c, 0x5a, 0x55, 0x8d, 0x6f, 0x80,
	0xe3, 0x52, 0x1a, 0x19, 0x1e, 0x62, 0xf5, 0x8c, 0x85, 0x2f, 0xd9, 0x7f, 0x27, 0xfe, 0xdd, 0x9f,
	0xbc, 0x9f, 0x33, 0x60, 0x7a, 0xad, 0x14, 0x92, 0x1e, 0xba, 0x45, 0xf2, 0x69, 0xca, 0x0f, 0xac,
	0xe0, 0x52, 0x8e, 0xa6, 0x19, 0xfc, 0xcb, 0xa3, 0x9f, 0x5e, 0xd1, 0x0d, 0xbe, 0xd9, 0xcd, 0x7b,
	0x24, 0x0f, 0x54, 0x18, 0x8d, 0xe5, 0x96, 0x70, 0xb3, 0x2c, 0xc1, 0xe5, 0x20, 0xbf, 0x5e, 0x37,
	0xed, 0x65, 0x7e, 0x8f, 0x22, 0xcc, 0xe2, 0x50, 0x01, 0x5f, 0x91, 0x1c, 0xe9, 0x52, 0x2f, 0x7c,
	0x3e, 0xda, 0xf5, 0x69, 0xb2, 0xbf, 0x3f, 0x71, 0x79, 0x9f, 0x88, 0x8a, 0xa1, 0x0f, 0x4c, 0x69,
	0x92, 0x64, 0x39, 0xd0, 0xa8, 0xdb, 0x43, 0x56, 0x11, 0xe6, 0x72, 0x7a, 0x19, 0x0f, 0xe9, 0x5e,
	0x44, 0x67, 0xe9, 0x95, 0x9a, 0x21, 0x6d, 0x08, 0x44, 0x03, 0xc8, 0xde, 0x95, 0xf0, 0x4f, 0x2d,
	0xa7, 0x8e, 0x11, 0x08, 0x5a, 0xfe, 0x65, 0x8a, 0xb0, 0x84, 0x43, 0xad, 0x78, 0x16, 0x83, 0x4a,
	0xf6, 0x7f, 0x99, 0x18, 0x3a, 0x84, 0x41, 0xa1, 0x55, 0x1c, 0x1b, 0xba, 0x4a, 0x66, 0x0b, 0xb5,
	0x83, 0x2f, 0x80, 0xe2, 0x08, 0x26, 0xbd, 0xae, 0x96, 0x6c, 0x86, 0x11, 0x19, 0x80, 0x94, 0xb2,
	0xc1, 0x06, 0xbe, 0x18, 0x4f, 0x11, 0x5b, 0x57, 0x2b, 0x9a, 0x8d, 0xe1, 0x87, 0xa0, 0xfc, 0x8f,
	0xd2, 0x4e, 0xc1, 0x3c, 0x55, 0x40, 0xd6, 0xab, 0x84, 0x9f, 0x66, 0xc1, 0x4c, 0x8a, 0x34, 0xc9,
	0xfe, 0x97, 0x15, 0xe1, 0x25, 0xce, 0xd6, 0x5a, 0x57, 0xdc, 0xf1, 0x0b, 0xb7, 0xd4, 0x2b, 0xdd,
	0x18, 0xc3, 0x9f, 0x87, 0x8f, 0x63, 0x03, 0x1a, 0x3f, 0xdf, 0x1f, 0xff, 0x6c, 0xff, 0xe8, 0xa7,
	0xa7, 0x12, 0x17, 0x06, 0xd4, 0x83, 0xdf, 0x8b, 0xb6, 0xbe, 0xde, 0x6f, 0x0a, 0xc1, 0x53, 0x1b,
	0x82, 0xb2, 0xee, 0x01, 0xc9, 0xba, 0xac, 0x6c, 0x05, 0xc0, 0x98, 0x30, 0x99, 0x08, 0xcb, 0x73,
	0x8a, 0xb0, 0x92, 0xa3, 0x8a, 0x75, 0x63, 0x87, 0x82, 0x08, 0x57, 0xba, 0x63, 0x03, 0x5f, 0xc7,
	0x86, 0xae, 0xaa, 0x27, 0x8e, 0x26, 0xbf, 0x52, 0x46, 0xdb, 0xcf, 0xa9, 0x9d, 0x77, 0xd4, 0xc3,
	0x87, 0x46, 0xbb, 0xbb, 0x44, 0xaa, 0x0b, 0x6c, 0x02, 0x05, 0x9a, 0xdb, 0x21, 0x93, 0x59, 0x7b,
	0x5b, 0x11, 0xde, 0xe2, 0x70, 0x09, 0xbf, 0x7e, 0x7c, 0x6e, 0x4c, 0xe6, 0x31, 0x31, 0x4c, 0x7b,
	0x2c, 0x3d, 0xef, 0x61, 0xc4, 0xd2, 0x8d, 0xf0, 0xbd, 0x25, 0x74, 0x10, 0x02, 0x40, 0x96, 0x02,
	0x91, 0xfa, 0xdd, 0xaf, 0x9b, 0xc1, 0x91, 0x0d, 0x8a, 0x50, 0xc7, 0x51, 0xc5, 0xfc, 0x8b, 0x29,
	0x49, 0x6e, 0xef, 0x4e, 0x8e, 0x74, 0xc4, 0xaf, 0x5f, 0xc1, 0xaa, 0x21, 0xde, 0xdb, 0x93, 0xf8,
	0xfe, 0x28, 0xf6, 0x48, 0x69, 0x5f, 0x54, 0xa4, 0x00, 0x19, 0x01, 0xe9, 0x82, 0x31, 0x07, 0xa4,
	0x0f, 0xee, 0x4b, 0xf6, 0x0d, 0xd8, 0x03, 0xd2, 0x7e, 0x50, 0x18, 0xde, 0xb5, 0x4b, 0x96, 0xa2,
	0xc8, 0xf3, 0xc9, 0xf3, 0x73, 0x8a, 0xb0, 0x98, 0x23, 0x45, 0xfc, 0x5c, 0x8d, 0xb5, 0x3d, 0xb7,
	0xe3, 0x67, 0x6e, 0xc4, 0x4f, 0xf4, 0x55, 0xb2, 0xc9, 0x9e, 0xde, 0xc4, 0x95, 0xc1, 0xc4, 0xb7,
	0xdf, 0xaa, 0x1d, 0x97, 0x47, 0x7b, 0x6e, 0x8b, 0xa4, 0x19, 0x7c, 0x09, 0x14, 0x84, 0x82, 0x4d,
	0xc1, 0x28, 0x72, 0x68, 0xf2, 0xfc, 0xcf, 0x2a, 0xc2, 0x33, 0x1c, 0x2e, 0xe1, 0x3d, 0x56, 0x08,
	0xf1, 0xfe, 0x4e, 0xfc, 0x6d, 0xb4, 0xa3, 0x53, 0xc4, 0x4d, 0xe0, 0x2a, 0x90, 0x17, 0x08, 0x85,
	0x48, 0x5c, 0xc2, 0xab, 0x08, 0xf3, 0x39, 0xed, 0x3b, 0xef, 0xc6, 0xa3, 0x61, 0x2e, 0xa8, 0x07,
	0x7b, 0x47, 0x3b, 0x3a, 0x31, 0x14, 0x51, 0xab, 0xf6, 0xed, 0x52, 0x84, 0x7a, 0x10, 0xe0, 0x52,
	0x49, 0x32, 0xff, 0x1a, 0xe1, 0x27, 0x76, 0xe9, 0x3f, 0xeb, 0x89, 0x0d, 0xfd, 0x40, 0x33, 0x53,
	0x3d, 0x7c, 0x2e, 0xd9, 0xd3, 0x5b, 0xc9, 0x6a, 0x06, 0xf6, 0xf8, 0x3e, 0x1a, 0x41, 0x6d, 0x03,
	0xd1, 0x7e, 0x90, 0x1e, 0x4c, 0xdb, 0xa1, 0x54, 0x50, 0x63, 0xd4, 0x6a, 0xeb, 0x7e, 0x09, 0x28,
	0x88, 0x86, 0xa3, 0x81, 0x10, 0x51, 0x5d, 0x50, 0x11, 0x2a, 0x38, 0x5c, 0xc2, 0x17, 0xc6, 0xdb,
	0x87, 0x10, 0x6d, 0xe8, 0x2b, 0xac, 0x03, 0x53, 0x22, 0x92, 0xdc, 0x1a, 0x8a, 0x6a, 0xd2, 0x9f,
	0x97, 0x4e, 0xf5, 0x20, 0xa5, 0xa1, 0x37, 0xe4, 0x4b, 0xc9, 0xda, 0xc6, 0xc4, 0xea, 0xc5, 0x3e,
	0x6d, 0x62, 0xc0, 0x22, 0xce, 0x8e, 0x8c, 0xee, 0xde, 0x62, 0xa2, 0x08, 0xd2, 0x57, 0xf3, 0xc0,
	0x74, 0x2b, 0x63, 0x26, 0x40, 0xe7, 0xee, 0xb1, 0xe8, 0xdc, 0xd9, 0x34, 0xe1, 0x36, 0x1a, 0xfc,
	0x3e, 0x45, 0x78, 0x9e, 0xe8, 0xde, 0x6a, 0x02, 0x92, 0x12, 0xfb, 0x4a, 0x56, 0x3d, 0x7e, 0x50,
	0x3d, 0xf5, 0x0d, 0x66, 0xad, 0xda, 0x79, 0x94, 0xa6, 0xf8, 0xb1, 0x56, 0xc5, 0x3b, 0x40, 0x01,
	0x82, 0x0c, 0xb7, 0x82, 0x82, 0x16, 0xed, 0x03, 0x9a, 0x98, 0x12, 0x7e, 0x96, 0xc3, 0x9b, 0xde,
	0x8c, 0x0e, 0x91, 0xfd, 0x8b, 0x15, 0x61, 0x21, 0x87, 0x9b, 0xf2, 0xb3, 0x13, 0x5d, 0xbd, 0xf1,
	0xc3, 0x77, 0x46, 0x95, 0xc3, 0x6a, 0xff, 0x5d, 0x23, 0x4c, 0x8d, 0xc7, 0x13, 0x71, 0x1b, 0xef,
	0x16, 0x30, 0x43, 0xe3, 0xb5, 0xd0, 0x1a, 0xdd, 0x1d, 0x8e, 0x04, 0x3f, 0x94, 0x1a, 0x34, 0xae,
	0x8b, 0xd2, 0x1f, 0x7c, 0x2f, 0x29, 0xc2, 0x6a, 0xf0, 0x3c, 0x97, 0xba, 0x96, 0x9f, 0x87, 0x97,
	0x0b, 0x1e, 0x20, 0x7e, 0xf1, 0x08, 0x21, 0xa2, 0xfb, 0x00, 0x1e, 0xc6, 0xfb, 0x8d, 0x0b, 0xcc,
	0x4c, 0xd5, 0x53, 0x6e, 0x79, 0x22, 0x61, 0x0e, 0x09, 0xf3, 0xfe, 0xb7, 0x42, 0x30, 0x13, 0x07,
	0x48, 0x34, 0xc5, 0x2d, 0xb7, 0x04, 0xea, 0x25, 0xdd, 0xe6, 0xda, 0x8c, 0x15, 0xf3, 0xe8, 0x8c,
	0xd5, 0x0b, 0xa0, 0xb8, 0x3e, 0xd4, 0x2a, 0x63, 0x77, 0xd8, 0x65, 0x92, 0x63, 0x19, 0xb7, 0x08,
	0x5b, 0x10, 0x8d, 0x1c, 0xa3, 0x31, 0xfc, 0x17, 0x86, 0x44, 0x25, 0xb0, 0x69, 0x1d, 0x61, 0x14,
	0xe1, 0x34, 0x43, 0xe2, 0x12, 0x47, 0x19, 0xf5, 0x93, 0x7b, 0x9a, 0x55, 0xbb, 0x36, 0x38, 0x7a,
	0xee, 0x56, 0x06, 0x8b, 0xbe, 0x92, 0x58, 0x74, 0xb5, 0xf3, 0x6b, 0x6d, 0xe7, 0x8a, 0xb8, 0xaf,
	0xde, 0xe8, 0x54, 0x0f, 0x21, 0xef, 0xb8, 0xff, 0xc4, 0x5f, 0xda, 0xf7, 0xc5, 0xcf, 0xdc, 0x50,
	0xaf, 0x9f, 0xd3, 0xd6, 0xd2, 0xd0, 0x55, 0xb5, 0xf3, 0x28, 0xbb, 0xb8, 0x6a, 0x71, 0xa5, 0x3a,
	0x72, 0x70, 0xb4, 0x67, 0x48, 0x2b, 0x40, 0xad, 0xd4, 0xe1, 0x76, 0xf5, 0xca, 0x2d, 0xb4, 0xdc,
	0x34, 0xd8, 0xb1, 0xa1, 0xab, 0x5a, 0x2b, 0x36, 0x31, 0x74, 0x5a, 0xbd, 0xf1, 0xe3, 0x2f, 0xfe,
	0x45, 0x91, 0x67, 0xdc, 0x2f, 0xf3, 0xf3, 0xdf, 0xdb, 0x1e, 0xa8, 0xfa, 0x70, 0x45, 0xd5, 0xea,
	0x77, 0x97, 0x6c, 0xaf, 0x22, 0x9f, 0x38, 0xbd, 0x68, 0xe9, 0xcb, 0x0b, 0x49, 0x54, 0xe4, 0x0d,
	0x50, 0xf0, 0x87, 0xd6, 0x70, 0x34, 0x40, 0xc2, 0x1b, 0x4f, 0xd3, 0xd2, 0x24, 0x4a, 0x72, 0xb8,
	0x35, 0x52, 0x2f, 0xbd, 0xa9, 0x35, 0xf0, 0xcf, 0x53, 0x84, 0xd9, 0x1c, 0x6e, 0xcc, 0x43, 0x9a,
	0xde, 0xd1, 0x83, 0x27, 0x46, 0xbf, 0xf8, 0x4c, 0xc4, 0x55, 0xf0, 0x35, 0x50, 0x18, 0x0a, 0xec,
	0x94, 0x42, 0x9a, 0x42, 0xc9, 0xb3, 0x2b, 0x94, 0x0d, 0x5a, 0x8d, 0x7f, 0xbe, 0x22, 0xcc, 0xe1,
	0x48, 0x2b, 0x2b, 0xa8, 0xf8, 0xe5, 0x8e, 0xc4, 0xf5, 0x1f, 0x45, 0x52, 0x07, 0xdf, 0x03, 0x25,
	0x54, 0x0a, 0x8a, 0xbb, 0x10, 0x01, 0x9c, 0x49, 0x03, 0x34, 0xd5, 0x0a, 0x09, 0x81, 0x50, 0xed,
	0x6d, 0xa0, 0xbf, 0xef, 0x4d, 0x7e, 0xf5, 0x0f, 0x22, 0xdd, 0x00, 0x06, 0x40, 0xf1, 0xde, 0x40,
	0x24, 0x18, 0xd8, 0x19, 0x92, 0x64, 0xf7, 0x14, 0x04, 0xdd, 0xc2, 0x80, 0xad, 0xa4, 0x12, 0x6f,
	0xe8, 0x97, 0x28, 0xc2, 0x22, 0xce, 0xec, 0xc0, 0xbb, 0x2d, 0x93, 0xde, 0x79, 0x5e, 0x5b, 0x43,
	0x78, 0xe9, 0x98, 0x8d, 0x7c, 0xef, 0x28, 0xc2, 0x16, 0xb0, 0x99, 0x4b, 0xb3, 0x12, 0x78, 0x37,
	0x0e, 0x16, 0xd2, 0x90, 0xf0, 0x62, 0xb2, 0x46, 0x0c, 0x7f, 0x62, 0x4c, 0x49, 0x24, 0x21, 0x45,
	0xef, 0xb9, 0x3c, 0x30, 0xcb, 0x01, 0x75, 0x02, 0x0c, 0xde, 0x36, 0x8b, 0x3a, 0xb2, 0xf0, 0xcf,
	0x40, 0x0c, 0x29, 0xa3, 0xbf, 0x99, 0xad, 0xc6, 0xe5, 0x29, 0xc0, 0x6d, 0x90, 0xbe, 0x36, 0x10,
	0x0a, 0xed, 0x0c, 0xd4, 0xef, 0x79, 0x9c, 0x75, 0xdf, 0x5f, 0x18, 0x50, 0xdc, 0xac, 0x13, 0x44,
	0x14, 0xe0, 0x3f, 0x32, 0x8a, 0x70, 0x9e, 0xe1, 0xcc, 0xf2, 0xc7, 0x53, 0x0b, 0x9a, 0xf8, 0xc3,
	0x95, 0xa0, 0x20, 0x1a, 0x8c, 0x86, 0x24, 0x3a, 0xbf, 0x0b, 0x97, 0xf0, 0xd3, 0xea, 0xde, 0xda,
	0xbc, 0x91, 0x55, 0x4f, 0x9c, 0xd1, 0xbc, 0xe5, 0xcb, 0x1d, 0xa3, 0x5f, 0x9c, 0x17, 0x71, 0x0d,
	0x5c, 0x0f, 0xca, 0xea, 0x5b, 0x23, 0x11, 0xa9, 0x39, 0xba, 0x39, 0x1a, 0x88, 0xb6, 0xea, 0x29,
	0x5e, 0x8b, 0x14, 0xc1, 0xcb, 0x59, 0x6b, 0x2c, 0x40, 0x12, 0x47, 0x7f, 0x88, 0xb7, 0xef, 0x13,
	0xad, 0x2d, 0xe0, 0x42, 0xe0, 0x92, 0x9b, 0x49, 0x16, 0xd7, 0x74, 0x45, 0x98, 0xc6, 0xb9, 0xe4,
	0x66, 0xbe, 0x44, 0xef, 0xa6, 0x76, 0xde, 0x11, 0x5d, 0x72, 0x33, 0x5c, 0x03, 0x8a, 0xa3, 0xc1,
	0xfa, 0x3d, 0x52, 0x74, 0x4b, 0x24, 0x44, 0x82, 0xa9, 0x68, 0xff, 0x00, 0x70, 0xe9, 0x8e, 0xd6,
	0x48, 0xc8, 0x32, 0xd6, 0xe8, 0xe9, 0x1f, 0xe3, 0x27, 0xaf, 0x8a, 0x66, 0x27, 0xb8, 0x11, 0x94,
	0x05, 0x5a, 0x5a, 0x22, 0xe1, 0xbd, 0x9a, 0xc6, 0x68, 0x0d, 0x45, 0xc9, 0x2e, 0x04, 0xb9, 0x59,
	0xe5, 0xa4, 0x66, 0x07, 0xf6, 0xc0, 0x79, 0x88, 0x81, 0xa8, 0x7d, 0x3d, 0xf1, 0x23, 0x77, 0x13,
	0x43, 0xa7, 0xe3, 0x9f, 0x5f, 0x14, 0xad, 0xbd, 0xa1, 0x08, 0xb4, 0x4e, 0xa1, 0xb6, 0xba, 0xe6,
	0xb5, 0x58, 0x64, 0x48, 0x4e, 0x15, 0xda, 0x54, 0xd9, 0xaa, 0xf8, 0x19, 0x7a, 0x1c, 0xf4, 0x98,
	0xda, 0xf9, 0x89, 0x7a, 0xf8, 0x06, 0x96, 0x37, 0xd1, 0xd6, 0xcc, 0xf7, 0xae, 0x22, 0x6c, 0x03,
	0xef, 0x70, 0x69, 0xd7, 0x11, 0x3f, 0x93, 0x16, 0xb6, 0x60, 0x54, 0x6e, 0xd2, 0xf4, 0xc9, 0x8d,
	0xfd, 0x99, 0xf4, 0xa6, 0x39, 0xd7, 0xde, 0xdb, 0x2e, 0xf0, 0x74, 0x0a, 0xd0, 0x13, 0xa0, 0x3e,
	0x5f, 0xa6, 0xd4, 0x67, 0xf1, 0xa3, 0xd5, 0x91, 0x35, 0xa0, 0x10, 0x4f, 0x32, 0x12, 0xda, 0x22,
	0xff, 0xd3, 0x8a, 0x30, 0x93, 0x23, 0x45, 0x7c, 0x29, 0xe6, 0x27, 0x99, 0x71, 0x52, 0xea, 0xed,
	0x2a, 0x04, 0x33, 0x71, 0x7c, 0xee, 0xaf, 0xc2, 0xa9, 0xfb, 0xdb, 0x50, 0x6c, 0xa6, 0x4b, 0x96,
	0x9f, 0x6b, 0x97, 0xac, 0x20, 0xd7, 0x2e, 0x99, 0xe1, 0x8f, 0x16, 0xe6, 0xc6, 0x1f, 0xf5, 0xd5,
	0x2b, 0xc2, 0xfb, 0xe0, 0x3d, 0x2e, 0x8d, 0xd4, 0xf2, 0xf3, 0x70, 0x5c, 0xd9, 0xd9, 0x3f, 0xbb,
	0x1b, 0x46, 0xa9, 0x93, 0x11, 0x06, 0xcc, 0x72, 0x0c, 0x30, 0x01, 0xca, 0xc4, 0xa2, 0x0b, 0xf2,
	0xc6, 0xb3, 0x5b, 0xfb, 0x9f, 0x2e, 0xf0, 0xd4, 0x3a, 0x29, 0x3a, 0x89, 0x56, 0xf5, 0x73, 0xce,
	0x55, 0xed, 0x46, 0x41, 0x7c, 0xa3, 0x34, 0xf5, 0x9a, 0x5e, 0xe3, 0x5c, 0xd2, 0xc8, 0x3c, 0x52,
	0x0b, 0x1a, 0x3a, 0xd7, 0x33, 0xb5, 0x5e, 0x7c, 0xef, 0x2b, 0xc2, 0xbb, 0x60, 0x3b, 0x97, 0x8a,
	0x1f, 0xfc, 0xbc, 0xe4, 0xc9, 0x3b, 0x6a, 0xe7, 0x59, 0xf5, 0xc4, 0x99, 0xd8, 0xc0, 0xd7, 0xe3,
	0x73, 0xdb, 0x29, 0x79, 0x39, 0xef, 0x02, 0xd3, 0xad, 0xd0, 0x9f, 0x38, 0xee, 0x44, 0x10, 0x7b,
	0x5c, 0x38, 0x78, 0x63, 0xa0, 0x20, 0x3f, 0xb6, 0xa2, 0xe8, 0xd3, 0x90, 0x03, 0x6f, 0x72, 0xa9,
	0xe9, 0x31, 0x44, 0x89, 0x96, 0x45, 0xb4, 0x7f, 0xcc, 0x26, 0x4a, 0xde, 0xb3, 0x79, 0x38, 0x10,
	0x45, 0xc3, 0x9c, 0x50, 0x01, 0xca, 0x7b, 0xb2, 0xf3, 0x43, 0x3b, 0xbf, 0x33, 0x79, 0x60, 0x26,
	0x3e, 0x23, 0xfc, 0xab, 0x70, 0x8f, 0x76, 0x3b, 0x55, 0xe9, 0x6b, 0xd9, 0x55, 0xe9, 0x7d, 0xb8,
	0x28, 0xba, 0xbb, 0x9f, 0x86, 0x79, 0xbc, 0x1b, 0x1f, 0xb1, 0xde, 0xb7, 0xbe, 0x8d, 0x31, 0x60,
	0x96, 0x03, 0xf4, 0x04, 0xac, 0x98, 0x67, 0x2c, 0xce, 0x7e, 0x85, 0x22, 0x94, 0x92, 0x65, 0x81,
	0xfe, 0x3e, 0xb0, 0xee, 0x1c, 0x2d, 0x02, 0x65, 0x96, 0x95, 0x07, 0xe7, 0x83, 0xbc, 0xd6, 0x60,
	0x03, 0x91, 0xb6, 0x32, 0x45, 0x00, 0x9c, 0xf6, 0x9d, 0xd7, 0xfe, 0x88, 0xda, 0x1f, 0x58, 0x63,
	0xc9, 0xb5, 0x42, 0x7b, 0x5e, 0x1c, 0xd3, 0x4c, 0x65, 0x23, 0x71, 0xc8, 0xf0, 0x79, 0x50, 0x28,
	0xe3, 0xbd, 0x2e, 0x26, 0x03, 0xfb, 0x8e, 0xb8, 0xc8, 0xda, 0x8d, 0xec, 0x72, 0x49, 0x9d, 0x2d,
	0x4b, 0x3c, 0x7f, 0xbc, 0x59, 0xe2, 0x5b, 0x74, 0xd7, 0xb0, 0x20, 0x9b, 0x6b, 0x88, 0xfc, 0x4e,
	0xe2, 0x1a, 0xda, 0xa2, 0x74, 0xfd, 0x89, 0xae, 0x5e, 0x6b, 0xc0, 0x52, 0x04, 0xf9, 0xad, 0xb2,
	0xd4, 0x90, 0xdd, 0xe1, 0x7c, 0x46, 0x11, 0x58, 0x0e, 0xb5, 0xb5, 0x01, 0xbd, 0x73, 0xd3, 0x04,
	0x8a, 0xea, 0x11, 0xa5, 0x2d, 0xad, 0x5b, 0x64, 0x49, 0x0c, 0x44, 0xf1, 0x75, 0x29, 0x97, 0x4e,
	0xa9, 0x51, 0xcc, 0x97, 0xae, 0xdd, 0xb4, 0x05, 0x27, 0x87, 0x25, 0x4e, 0x76, 0x88, 0x54, 0x0d,
	0xdc, 0x00, 0xca, 0x9a, 0xa4, 0xa6, 0x70, 0xa4, 0x4d, 0x87, 0x50, 0x84, 0x20, 0xa0, 0x13, 0x46,
	0x6b, 0x0d, 0xc5, 0x6f, 0x13, 0x94, 0xb5, 0x09, 0xe5, 0xfe, 0x17, 0xe7, 0xda, 0xfd, 0x07, 0xb9,
	0x76, 0xff, 0xb7, 0xd3, 0x11, 0xd9, 0x92, 0x6c, 0x11, 0x59, 0xec, 0xd7, 0x99, 0x11, 0x59, 0xe8,
	0x8c, 0xc8, 0x52, 0xb1, 0x58, 0xe8, 0x07, 0xa5, 0xc1, 0xa8, 0xdc, 0xf4, 0x16, 0x8a, 0x83, 0x6c,
	0x7e, 0x9d, 0x24, 0x12, 0xa1, 0x7d, 0x84, 0xa5, 0x82, 0x2f, 0xd1, 0xbe, 0xe9, 0x21, 0x17, 0x4b,
	0x15, 0x7c, 0x0b, 0x4c, 0xa5, 0xbe, 0xe3, 0x65, 0x80, 0x13, 0x89, 0x50, 0x78, 0xd8, 0x51, 0xc9,
	0x4f, 0xd3, 0x61, 0x99, 0x51, 0x1f, 0x47, 0x23, 0x58, 0x07, 0xca, 0xcc, 0xb2, 0x2d, 0xe2, 0x06,
	0x92, 0x49, 0x84, 0x24, 0xce, 0x5a, 0xc3, 0x57, 0x50, 0xf0, 0xd8, 0x2d, 0xe2, 0x06, 0xd1, 0x5a,
	0x0f, 0x77, 0x81, 0x72, 0xb3, 0xc0, 0xb8, 0xbd, 0x54, 0xec, 0xff, 0xad, 0x22, 0xbc, 0xc8, 0xd9,
	0xaa, 0xf8, 0xa5, 0x34, 0x72, 0xe8, 0xc0, 0xdc, 0xc7, 0xe2, 0x15, 0x57, 0xc9, 0xe2, 0x24, 0xc8,
	0x4a, 0xb6, 0x01, 0xe9, 0x4d, 0xd1, 0xd6, 0xd5, 0xfb, 0x26, 0x28, 0x40, 0xb2, 0xa3, 0xa9, 0x98,
	0x3d, 0x52, 0x9b, 0x45, 0xc5, 0xec, 0x91, 0xda, 0x78, 0xed, 0x8f, 0xa8, 0xfd, 0x81, 0x8b, 0x41,
	0xc1, 0x5e, 0x6d, 0xba, 0x88, 0x8e, 0x99, 0xa6, 0x08, 0xe5, 0x1c, 0x2e, 0xe1, 0xf1, 0x3f, 0x11,
	0xff, 0xf3, 0x6e, 0x05, 0xc0, 0x94, 0x9e, 0x1c, 0xc2, 0xbd, 0xec, 0x02, 0x65, 0x96, 0xa5, 0x0c,
	0x05, 0x50, 0x52, 0xdf, 0xd2, 0x4a, 0xac, 0x8b, 0x9e, 0xf5, 0x81, 0x16, 0x41, 0x29, 0xd1, 0xa6,
	0xf2, 0xf2, 0xfa, 0x96, 0x56, 0xde, 0xf2, 0x4d, 0xa4, 0xfb, 0xc0, 0x8d, 0xa0, 0x1c, 0x2f, 0x33,
	0x03, 0x8a, 0xcb, 0x8c, 0xfc, 0x55, 0x18, 0xfd, 0x70, 0x1b, 0xde, 0x5e, 0x20, 0xda, 0x3a, 0xc3,
	0xd5, 0xa0, 0xb8, 0xbe, 0xa5, 0x75, 0x43, 0xb0, 0x29, 0x18, 0xd5, 0xf5, 0xea, 0x6c, 0x45, 0x70,
	0x73, 0x00, 0x65, 0x0b, 0x60, 0x6c, 0xa8, 0xcf, 0xa2, 0xd9, 0x5a, 0x13, 0x6b, 0x0c, 0x8c, 0xf4,
	0xce, 0x37, 0xc5, 0xba, 0x8c, 0xf4, 0x20, 0x58, 0xd0, 0x00, 0x2c, 0x7d, 0xbc, 0xd7, 0x0b, 0xc0,
	0x0c, 0x7c, 0x98, 0xa0, 0xaf, 0xb0, 0x89, 0xf7, 0x5b, 0x5e, 0xb7, 0x98, 0x26, 0x9f, 0x22, 0xac,
	0x20, 0xa6, 0x69, 0x09, 0x39, 0x6c, 0x49, 0x1b, 0x88, 0xd1, 0x2f, 0x7d, 0xe2, 0x04, 0x60, 0x96,
	0xd8, 0xad, 0x56, 0x2c, 0x50, 0x98, 0xb9, 0xf5, 0x8a, 0xb0, 0x06, 0x0b, 0xd4, 0x6a, 0x0c, 0x8d,
	0xdd, 0x23, 0xb5, 0xfd, 0x3c, 0x7c, 0x9c, 0x1c, 0x81, 0x1e, 0x3a, 0x88, 0xb1, 0xd5, 0x4a, 0x32,
	0xe4, 0x17, 0xcf, 0x8d, 0xcc, 0x76, 0xaf, 0xe1, 0x67, 0x21, 0x47, 0x47, 0xa8, 0xda, 0xf6, 0x2e,
	0xf9, 0xbf, 0xa2, 0x6a, 0xf5, 0x8e, 0x77, 0xb9, 0x85, 0x58, 0x4c, 0x3f, 0x06, 0x05, 0x72, 0x7d,
	0xb8, 0x45, 0x37, 0x78, 0x8d, 0x8a, 0xb0, 0x96, 0xd0, 0xf1, 0x22, 0x1e, 0x39, 0x76, 0xef, 0x62,
	0xa2, 0xab, 0x57, 0xbd, 0x74, 0xe9, 0xe7, 0xe1, 0xe3, 0xda, 0x7e, 0xa0, 0x7d, 0x38, 0x79, 0x7c,
	0xbf, 0x7a, 0xe1, 0xd6, 0xcf, 0xc3, 0xdd, 0x8d, 0xa1, 0xf0, 0xce, 0x40, 0xa8, 0x92, 0x25, 0x5e,
	0x4d, 0x25, 0x6b, 0xb8, 0x34, 0xbf, 0xf8, 0xe7, 0x45, 0xe6, 0x88, 0x85, 0xb8, 0x81, 0x38, 0x85,
	0x34, 0xa0, 0x5c, 0x2a, 0x11, 0x8f, 0x0a, 0x9f, 0x07, 0x53, 0x1a, 0xa4, 0x5d, 0x01, 0x3d, 0xca,
	0xa7, 0xdf, 0xad, 0x22, 0x65, 0x7c, 0x05, 0xc6, 0x01, 0x27, 0xe5, 0xa9, 0xed, 0xc3, 0xa2, 0x5e,
	0xa3, 0xb1, 0xbf, 0x41, 0x92, 0xeb, 0x49, 0x38, 0x9a, 0x9c, 0x24, 0x4b, 0x72, 0x3d, 0x5f, 0x8d,
	0xbb, 0x24, 0xfb, 0x6f, 0xc5, 0xcf, 0x9f, 0x8c, 0x0d, 0x9c, 0xd4, 0x6f, 0xe5, 0x38, 0xef, 0xe3,
	0xc4, 0x86, 0xae, 0xaa, 0x87, 0x0e, 0x8a, 0xa8, 0x9b, 0x6f, 0xbd, 0x22, 0xfc, 0x0e, 0xbc, 0xca,
	0xa5, 0x16, 0x33, 0x1e, 0x92, 0x83, 0x30, 0x02, 0x3a, 0x95, 0x6f, 0x47, 0x32, 0xe9, 0x35, 0xa6,
	0x7a, 0xff, 0xad, 0x4b, 0x3f, 0x5c, 0x36, 0x01, 0x4d, 0x80, 0x3f, 0xd7, 0xce, 0x58, 0xf6, 0xd0,
	0xf3, 0x68, 0x53, 0x65, 0x45, 0x0f, 0xed, 0x83, 0x50, 0x5a, 0x14, 0x76, 0xf8, 0x04, 0x0c, 0x96,
	0x48, 0x72, 0x5f, 0x77, 0xec, 0xee, 0x11, 0xbc, 0xf9, 0x4b, 0x73, 0x34, 0xef, 0x6c, 0xf8, 0xe0,
	0x3b, 0xed, 0x42, 0x30, 0x03, 0x07, 0xad, 0x26, 0xcf, 0x9a, 0x6f, 0x05, 0x40, 0xb7, 0xd7, 0xc6,
	0x66, 0x65, 0x8b, 0x22, 0x88, 0x1c, 0x55, 0x9c, 0xa3, 0x71, 0x29, 0x88, 0x86, 0xaa, 0xc9, 0xcb,
	0x91, 0xaa, 0x91, 0xb1, 0xaa, 0xc1, 0xd3, 0x11, 0x50, 0x84, 0xdf, 0x62, 0x55, 0xf3, 0xbc, 0xa9,
	0x6a, 0x2a, 0x59, 0x9b, 0xa6, 0xc9, 0x7c, 0x91, 0x61, 0x2c, 0x8a, 0xe6, 0x5f, 0xe9, 0x8a, 0x06,
	0xaf, 0xf3, 0x5d, 0x8a, 0xe0, 0xe7, 0x70, 0x89, 0xae, 0xe3, 0x0c, 0x4d, 0xa3, 0x6d, 0xb9, 0x4d,
	0x45, 0xe3, 0x63, 0x73, 0xab, 0x67, 0x0a, 0xef, 0x4b, 0xcf, 0x4c, 0xc9, 0xb1, 0x9e, 0x49, 0x29,
	0xda, 0x7a, 0x1e, 0x71, 0x26, 0x3d, 0x43, 0x09, 0x06, 0xd2, 0x33, 0x76, 0x40, 0x93, 0x4c, 0xcf,
	0x58, 0xd1, 0x9b, 0x84, 0x7a, 0xe6, 0x7f, 0xe5, 0x83, 0x79, 0x1b, 0x82, 0x72, 0xd4, 0x40, 0x51,
	0xda, 0x15, 0x6c, 0x0e, 0x22, 0x7f, 0x7f, 0xe2, 0x15, 0xce, 0x76, 0x7d, 0xd1, 0xe0, 0x39, 0x79,
	0x25, 0x27, 0x8b, 0x46, 0x5f, 0x13, 0xef, 0x83, 0x62, 0x9c, 0xba, 0xba, 0xde, 0xf0, 0x3b, 0xfc,
	0x8a, 0xf0, 0x32, 0x67, 0x96, 0xf2, 0x3c, 0x1e, 0x04, 0x6b, 0x84, 0x6c, 0xf9, 0xb0, 0xfa, 0x96,
	0xc6, 0xe8, 0x4e, 0xe5, 0xb1, 0xe6, 0x3f, 0x78, 0x1e, 0x6b, 0xc1, 0x03, 0xe4, 0xb1, 0x16, 0xda,
	0xf3, 0x58, 0xf1, 0x31, 0x6f, 0xba, 0x3c, 0xd6, 0xed, 0x8a, 0xf0, 0x0e, 0xd8, 0xca, 0xcd, 0x4d,
	0x2d, 0x17, 0xfa, 0x62, 0x5d, 0x8c, 0x23, 0xa4, 0x7a, 0x66, 0xef, 0xb1, 0xf8, 0x91, 0xf6, 0xf8,
	0xc5, 0x23, 0xb4, 0x88, 0xa6, 0x5a, 0xc1, 0xde, 0x9f, 0x5c, 0x60, 0x7e, 0x5a, 0x81, 0x9b, 0x80,
	0xd5, 0x7b, 0xd8, 0xba, 0x7a, 0x9f, 0xb5, 0x67, 0xec, 0x39, 0xf1, 0x9c, 0x84, 0xab, 0xf8, 0xbf,
	0xbb, 0x00, 0x8b, 0x43, 0x68, 0x93, 0x72, 0x1d, 0x7f, 0x00, 0x0a, 0x83, 0x0d, 0x1a, 0x33, 0xc9,
	0xf4, 0x88, 0x8a, 0xf0, 0x06, 0x47, 0x8a, 0xf8, 0x57, 0x68, 0x7e, 0xb0, 0xc1, 0x06, 0x56, 0xcf,
	0x85, 0xb6, 0xa5, 0xd4, 0xff, 0xa5, 0x7d, 0x9f, 0x7a, 0xf8, 0x90, 0xda, 0x79, 0x27, 0x7e, 0xf8,
	0x6c, 0xe2, 0xda, 0x60, 0xfc, 0xf2, 0x70, 0xec, 0xde, 0x45, 0xf4, 0x04, 0x0f, 0x4a, 0xb5, 0x27,
	0xe0, 0x7c, 0x9a, 0x43, 0x02, 0x36, 0x71, 0x59, 0xd9, 0x61, 0x84, 0x2d, 0x53, 0x08, 0xec, 0x34,
	0x0a, 0x79, 0x0c, 0xd6, 0xfb, 0xbd, 0x0b, 0x2c, 0xc8, 0x00, 0x72, 0x02, 0x04, 0x77, 0xb7, 0x45,
	0x6e, 0x97, 0xd2, 0x72, 0x9b, 0x16, 0x51, 0x24, 0xba, 0x4b, 0x15, 0xe1, 0x59, 0x22, 0xba, 0xf3,
	0xe2, 0x47, 0xee, 0xa2, 0xcc, 0x38, 0x3b, 0x27, 0x88, 0x3a, 0x78, 0x50, 0xb9, 0xfc, 0x32, 0x0f,
	0xcc, 0xd1, 0xd8, 0x47, 0x12, 0x47, 0x64, 0x1d, 0x25, 0x43, 0x26, 0xed, 0xcf, 0x2b, 0x30, 0x13,
	0xf0, 0xbc, 0xc2, 0xb6, 0x14, 0x6e, 0xad, 0x0f, 0xd1, 0x47, 0xb9, 0xb5, 0xc5, 0xc4, 0x3b, 0x0c,
	0x36, 0x60, 0x7f, 0x8f, 0x4d, 0xe9, 0xef, 0x55, 0x69, 0xfe, 0x1e, 0xed, 0xbb, 0xae, 0x41, 0xb7,
	0x12, 0x77, 0x07, 0x22, 0x52, 0x03, 0x9a, 0xa8, 0x22, 0x1c, 0x77, 0x33, 0x0a, 0xcd, 0x8c, 0x9b,
	0x41, 0xf5, 0xe0, 0x77, 0xb1, 0xc1, 0x6f, 0x48, 0xc6, 0x8d, 0xd1, 0xc0, 0xd7, 0xa0, 0x08, 0x01,
	0xb0, 0x83, 0xcb, 0xc8, 0x46, 0x7e, 0xa1, 0x4d, 0x17, 0x63, 0x28, 0x64, 0x42, 0xdb, 0x87, 0xb3,
	0xbb, 0x52, 0x17, 0x5d, 0x60, 0x6e, 0x9a, 0x11, 0x26, 0x40, 0xb4, 0xb7, 0x58, 0x44, 0xdb, 0x9b,
	0x4e, 0x25, 0xa3, 0x38, 0x23, 0x96, 0x69, 0x1c, 0x1b, 0x47, 0x32, 0x0d, 0x69, 0x75, 0x4c, 0x20,
	0xe7, 0x40, 0x8e, 0xe7, 0x59, 0xcf, 0xf4, 0x1c, 0x92, 0x3c, 0x71, 0xda, 0x75, 0x72, 0xcb, 0x6f,
	0x48, 0x11, 0x82, 0xa0, 0x91, 0xcb, 0xc2, 0x3e, 0x9e, 0xb3, 0x49, 0x70, 0x8a, 0xf4, 0xdd, 0xb1,
	0xc8, 0xf1, 0xd7, 0xc4, 0xbb, 0x48, 0x39, 0xd2, 0x04, 0x48, 0x72, 0x60, 0xdc, 0x92, 0x4c, 0x6b,
	0x67, 0x22, 0xc9, 0x8e, 0x33, 0xe8, 0x1c, 0x49, 0xf5, 0xb5, 0x3c, 0x30, 0x0f, 0x6f, 0x50, 0xd2,
	0xea, 0xe7, 0xbf, 0x4e, 0xa9, 0xae, 0x4b, 0x7f, 0x36, 0x6e, 0x3d, 0xc3, 0xc0, 0xc2, 0x81, 0x26,
	0xa3, 0xc2, 0xa6, 0x53, 0x31, 0xf7, 0xf5, 0x3b, 0x5f, 0x59, 0xf8, 0xc8, 0x2f, 0xa4, 0x6f, 0xc8,
	0xde, 0x8f, 0x82, 0xfe, 0x0f, 0x0c, 0x98, 0x9f, 0x76, 0x8c, 0xc7, 0x2a, 0x99, 0xe9, 0x6e, 0x1e,
	0x60, 0x6d, 0xe9, 0x58, 0x7f, 0x2b, 0x72, 0xf7, 0xc6, 0x58, 0xe5, 0x0e, 0x4d, 0x04, 0x96, 0xbb,
	0x19, 0x29, 0x35, 0x21, 0x91, 0xbe, 0x66, 0x45, 0xd8, 0x03, 0x82, 0x5c, 0x56, 0x7e, 0xf2, 0x9c,
	0x4d, 0xfe, 0xee, 0x53, 0xbd, 0xfe, 0x27, 0x06, 0x2c, 0xc8, 0x30, 0xd6, 0x63, 0x25, 0x87, 0x43,
	0x2e, 0x30, 0x9b, 0x72, 0x79, 0x26, 0xa5, 0x6b, 0xfa, 0xbc, 0x33, 0x3b, 0x04, 0xe5, 0x01, 0x53,
	0xb9, 0x4d, 0xc5, 0x58, 0x95, 0xb0, 0xc1, 0x06, 0x3a, 0xb9, 0x69, 0x87, 0x22, 0xfc, 0x1e, 0x6c,
	0xe3, 0x32, 0x11, 0xc8, 0x2f, 0x20, 0x26, 0x17, 0xf5, 0xb7, 0xec, 0xde, 0xd3, 0x89, 0x02, 0x95,
	0xe5, 0x74, 0xc1, 0x65, 0xf1, 0xec, 0x9f, 0xf8, 0x8b, 0x16, 0xd9, 0x3a, 0x92, 0x87, 0xdd, 0x69,
	0x63, 0x95, 0x4c, 0x22, 0x05, 0x77, 0xbf, 0x32, 0x95, 0x83, 0xdc, 0x4d, 0x59, 0x11, 0x5a, 0x40,
	0x33, 0x97, 0x99, 0x35, 0x7a, 0x60, 0xc9, 0x92, 0x8d, 0x30, 0x3e, 0xe9, 0xb4, 0xa4, 0x17, 0x5d,
	0x73, 0xd9, 0x7c, 0xf7, 0x27, 0x1e, 0x61, 0x5a, 0xb9, 0xbd, 0x9c, 0x07, 0xe6, 0x5a, 0xbc, 0x8c,
	0x49, 0x24, 0xb7, 0x6f, 0x3b, 0xe5, 0x76, 0x75, 0x5a, 0xb9, 0xcd, 0x6a, 0x96, 0x29, 0xb9, 0xce,
	0xa1, 0x37, 0x18, 0x50, 0x84, 0xf7, 0xc0, 0xef, 0xb9, 0xcc, 0x3c, 0xe4, 0x17, 0x10, 0x63, 0x7c,
	0x5f, 0x8a, 0xf7, 0xdf, 0x33, 0x36, 0xa7, 0xfd, 0x71, 0xb5, 0xbf, 0xff, 0x9c, 0xa7, 0x7b, 0xb4,
	0x4f, 0xb4, 0x24, 0xad, 0x25, 0x0d, 0x2f, 0x31, 0x3f, 0x57, 0x5e, 0xe2, 0x07, 0x8a, 0xd0, 0x08,
	0x24, 0x2e, 0x1b, 0xb7, 0xf9, 0xc5, 0xce, 0xeb, 0x16, 0x63, 0x92, 0x4e, 0xda, 0x43, 0xfc, 0x8f,
	0x8c, 0xc3, 0xbb, 0x7f, 0x5c, 0x05, 0xf4, 0x9a, 0x0b, 0xcc, 0xac, 0x6b, 0x6a, 0x09, 0x47, 0xa2,
	0x93, 0x48, 0x2e, 0xd7, 0x13, 0xe1, 0xc0, 0x4f, 0x77, 0x58, 0xce, 0x1a, 0xad, 0xb8, 0x22, 0xd3,
	0x81, 0x5e, 0xd1, 0xc3, 0x12, 0x52, 0x6a, 0xb9, 0x04, 0x8d, 0x05, 0xe3, 0x77, 0x8a, 0xf0, 0x0a,
	0x58, 0xcb, 0xa5, 0xa1, 0x92, 0x9f, 0x1d, 0x1b, 0x3a, 0x19, 0x3f, 0xdb, 0x11, 0x1b, 0xfa, 0x41,
	0xed, 0x1f, 0x56, 0x0f, 0x5e, 0x4d, 0x7f, 0x2e, 0x8b, 0xee, 0xd8, 0x38, 0xa0, 0x3c, 0x56, 0xb3,
	0xfd, 0x4f, 0x79, 0x60, 0xa6, 0x28, 0x35, 0x37, 0x4c, 0x2a, 0x9b, 0x37, 0x81, 0x5a, 0x68, 0x37,
	0x98, 0xb2, 0x47, 0x6a, 0x43, 0x87, 0x36, 0xf9, 0xe6, 0x9b, 0x80, 0x7a, 0x19, 0xbf, 0xc6, 0xcc,
	0x96, 0xb8, 0xcf, 0x03, 0x1b, 0x1d, 0x94, 0x71, 0x0b, 0x3f, 0x35, 0xf7, 0x79, 0x18, 0x1f, 0xb8,
	0x19, 0xbf, 0x74, 0xda, 0x2a, 0x7c, 0x0b, 0x29, 0x2e, 0x19, 0x54, 0x1b, 0xc8, 0x13, 0xc8, 0xde,
	0xa3, 0x2e, 0x30, 0xcb, 0x01, 0x75, 0x02, 0xa4, 0x72, 0x7c, 0x1e, 0x86, 0xf9, 0xea, 0x0e, 0xa6,
	0x39, 0x47, 0x67, 0x31, 0x47, 0x8a, 0x00, 0x74, 0x1e, 0x09, 0xc1, 0xc5, 0xc0, 0x65, 0xe4, 0xa0,
	0x23, 0x75, 0xe1, 0x0a, 0x36, 0xf0, 0xe5, 0xf4, 0x59, 0x50, 0x5d, 0xad, 0xe8, 0x0a, 0x36, 0xc0,
	0x67, 0x71, 0xda, 0x8c, 0xcb, 0xbc, 0x00, 0x8d, 0xd2, 0x66, 0x80, 0x29, 0x08, 0x38, 0xd3, 0x65,
	0x99, 0x25, 0x5d, 0x07, 0x6b, 0x20, 0x94, 0xae, 0x53, 0x4a, 0xa7, 0xeb, 0x90, 0x5c, 0x9c, 0xdf,
	0x98, 0x89, 0x29, 0xf9, 0x66, 0x56, 0xad, 0x91, 0x98, 0x32, 0x83, 0x4e, 0x4c, 0x19, 0xed, 0xea,
	0x53, 0xdb, 0x87, 0xd5, 0xfe, 0xbb, 0x66, 0x7a, 0x8a, 0x00, 0x4a, 0xc9, 0x47, 0xc4, 0xbf, 0xb1,
	0x25, 0xd1, 0x59, 0xba, 0x98, 0x39, 0x06, 0x85, 0x0f, 0x21, 0xc7, 0x60, 0x1f, 0x03, 0x8a, 0xd1,
	0xa7, 0xd7, 0xcd, 0x5f, 0xe6, 0xa8, 0x57, 0x84, 0xf7, 0x39, 0xb3, 0x94, 0xdf, 0x6c, 0x1b, 0x45,
	0x4f, 0x67, 0xb2, 0x8e, 0x45, 0xf4, 0x07, 0x6a, 0x5a, 0xc9, 0xd2, 0xde, 0x67, 0x25, 0x1b, 0x3f,
	0x7f, 0x32, 0x7e, 0xfe, 0xa4, 0x35, 0xb1, 0xda, 0x80, 0x0f, 0xd7, 0x83, 0xa2, 0xfa, 0x40, 0x54,
	0x6a, 0x0c, 0x47, 0xda, 0xc8, 0x9b, 0x9b, 0xe8, 0x0d, 0x44, 0xa3, 0x90, 0x67, 0xcd, 0x27, 0x3d,
	0xe9, 0x11, 0xe5, 0x36, 0xb9, 0xba, 0xbe, 0x55, 0x8e, 0x86, 0x9b, 0x44, 0xa3, 0x2d, 0x0c, 0x82,
	0x52, 0xfd, 0x33, 0x22, 0xa9, 0xd8, 0x64, 0x9a, 0xa5, 0x82, 0xe7, 0x31, 0xd0, 0xd4, 0xc4, 0x24,
	0xbe, 0x1f, 0x4a, 0x0c, 0x5d, 0x52, 0x0f, 0x1d, 0x4c, 0xdc, 0xeb, 0xab, 0x4e, 0x76, 0x7c, 0x8d,
	0xe5, 0x4c, 0xb4, 0x40, 0x30, 0x52, 0x8f, 0x40, 0x6e, 0x52, 0x8f, 0xe0, 0x9b, 0xe4, 0x1d, 0x7b,
	0xa9, 0x01, 0xbd, 0x9b, 0x49, 0xde, 0x6f, 0xd4, 0xcb, 0xf8, 0xa5, 0xf4, 0xd5, 0x86, 0x4a, 0x36,
	0x7e, 0x79, 0x58, 0x1d, 0xee, 0xf4, 0xb1, 0x6d, 0x6d, 0x6d, 0x6d, 0x55, 0x1b, 0x37, 0x56, 0x35,
	0x34, 0xb0, 0xbb, 0x77, 0xfb, 0x9a, 0x9a, 0x7c, 0xb2, 0x2c, 0xea, 0x7d, 0x34, 0x90, 0x38, 0x11,
	0x5b, 0xff, 0x0d, 0x0e, 0x0c, 0x92, 0x94, 0xf1, 0x4b, 0x63, 0x23, 0x7d, 0xf1, 0xae, 0xbb, 0x63,
	0x02, 0x49, 0xfa, 0xc0, 0x1a, 0xf3, 0xb5, 0xfd, 0x32, 0xea, 0x21, 0x5c, 0xfd, 0xb5, 0xfd, 0x62,
	0x8c, 0x65, 0x6c, 0x70, 0xd0, 0x7c, 0x67, 0x9f, 0x7a, 0x3b, 0xb7, 0x3c, 0xd5, 0xdb, 0xb9, 0x18,
	0x0b, 0xd4, 0x85, 0x94, 0x79, 0x2f, 0xe5, 0x81, 0x32, 0x8b, 0xe6, 0x81, 0x0b, 0x28, 0x35, 0x80,
	0x92, 0xb5, 0x35, 0x35, 0x50, 0x84, 0x39, 0x4d, 0x14, 0xc0, 0x22, 0x5a, 0x01, 0x3c, 0xa5, 0x08,
	0x53, 0xb1, 0x02, 0x28, 0x36, 0x92, 0x64, 0xee, 0x63, 0xfd, 0x5b, 0x2e, 0xef, 0xe5, 0x8f, 0xe7,
	0x1e, 0x69, 0x09, 0xf9, 0x82, 0xc4, 0xb0, 0xc0, 0xcc, 0xaa, 0xa6, 0xcb, 0xf9, 0x52, 0xb2, 0x50,
	0xf0, 0x90, 0x74, 0x15, 0xf4, 0xd1, 0x16, 0x12, 0xaf, 0xfd, 0x39, 0x8a, 0xf0, 0x34, 0x6d, 0x21,
	0x4b, 0x69, 0x0b, 0x49, 0xdb, 0xc6, 0xe5, 0x7a, 0x72, 0xfb, 0x14, 0x13, 0x63, 0x92, 0xdc, 0x4e,
	0x88, 0x4c, 0x74, 0x1f, 0xd0, 0x54, 0x0d, 0x2e, 0x84, 0x35, 0xba, 0x8e, 0x29, 0x32, 0x73, 0xc7,
	0x89, 0x8e, 0xa9, 0xb0, 0xad, 0x7e, 0xa2, 0x39, 0xbc, 0x47, 0x0a, 0x00, 0x74, 0x26, 0xa9, 0x42,
	0x2f, 0x35, 0x4d, 0xe8, 0x8d, 0x37, 0x6d, 0x9a, 0xcc, 0x68, 0x34, 0x9a, 0x27, 0x9b, 0xbb, 0xe2,
	0x7a, 0x74, 0xee, 0xca, 0x3a, 0xcb, 0xd4, 0xaf, 0xbc, 0x8f, 0x4c, 0x4d, 0x22, 0x16, 0x9b, 0xe9,
	0x14, 0x4d, 0xe1, 0x81, 0x53, 0x34, 0xb1, 0x60, 0x6e, 0xb3, 0xa6, 0x60, 0xd6, 0x2a, 0x82, 0x40,
	0xd0, 0x7b, 0x70, 0x45, 0x3f, 0x59, 0x12, 0x2c, 0xa1, 0xe8, 0xd0, 0xf6, 0xe8, 0xbd, 0x4c, 0x53,
	0xdb, 0x2f, 0x26, 0x02, 0x9a, 0x4e, 0xe7, 0x57, 0xb2, 0x76, 0xa5, 0x8f, 0x64, 0xd1, 0x99, 0xc8,
	0xf8, 0x44, 0x16, 0x9f, 0xc8, 0xe2, 0xa3, 0x97, 0xc5, 0xff, 0xca, 0x00, 0x4f, 0xfa, 0xb4, 0xbc,
	0x71, 0x3c, 0x83, 0xb9, 0xcd, 0xfe, 0x0c, 0xe6, 0xbc, 0x54, 0x6e, 0xb9, 0x09, 0x9e, 0xf8, 0xfb,
	0xba, 0x6f, 0x0e, 0x53, 0x64, 0x4b, 0x19, 0xef, 0x62, 0x92, 0x17, 0x89, 0x33, 0x20, 0x9a, 0xf2,
	0x89, 0xcc, 0x33, 0x0c, 0x98, 0x9b, 0x31, 0x75, 0x4b, 0x33, 0x3c, 0x34, 0x79, 0xd8, 0xf0, 0x60,
	0xf2, 0xc8, 0x43, 0xc7, 0x7a, 0xfe, 0x27, 0x2a, 0xd4, 0x7f, 0x5c, 0x20, 0x33, 0xd4, 0x6c, 0x59,
	0x60, 0xde, 0x9f, 0x18, 0x7c, 0xa3, 0xdd, 0x19, 0x9b, 0x1e, 0x07, 0xbf, 0xb7, 0xd8, 0xf9, 0x9d,
	0x2d, 0xb0, 0x65, 0xb2, 0x9a, 0xf6, 0x76, 0xed, 0xac, 0xd6, 0x3c, 0x2e, 0xc0, 0x73, 0x69, 0xf0,
	0xe3, 0xdd, 0x96, 0x38, 0x2d, 0xcd, 0xec, 0xce, 0x7c, 0x00, 0x9d, 0x11, 0x13, 0xe3, 0xb2, 0x01,
	0x93, 0xdb, 0x7b, 0x4d, 0xae, 0x47, 0x7c, 0xaf, 0xe9, 0xf7, 0xba, 0x7e, 0xc1, 0xea, 0xef, 0xd5,
	0xdc, 0xdc, 0x6b, 0xd2, 0x35, 0x4c, 0x8d, 0xee, 0xff, 0xe4, 0x53, 0xfe, 0x0c, 0xf6, 0x7f, 0x1c,
	0xda, 0x85, 0xb8, 0x40, 0xba, 0x6e, 0x29, 0xc8, 0x99, 0x37, 0x9f, 0xbf, 0x37, 0x10, 0xd1, 0x9f,
	0x1d, 0x5c, 0x90, 0x3e, 0x0e, 0xb6, 0x35, 0x10, 0x41, 0xa1, 0x30, 0xbc, 0xc3, 0xd7, 0xfa, 0xe8,
	0x38, 0x6a, 0x9b, 0x49, 0x12, 0x0d, 0xd3, 0x8a, 0xbd, 0x03, 0x0c, 0x98, 0x91, 0xb2, 0xaf, 0xd5,
	0x4b, 0x65, 0xc6, 0xee, 0xa5, 0x5a, 0x7c, 0x4c, 0xd7, 0xf8, 0x7c, 0xcc, 0x65, 0x3a, 0x8f, 0xf1,
	0x0c, 0xce, 0x50, 0x04, 0xa8, 0xf3, 0xb8, 0xd8, 0x0c, 0xf0, 0x92, 0x4b, 0x94, 0xab, 0x40, 0xf9,
	0xef, 0xa4, 0x40, 0x28, 0xba, 0xfb, 0x43, 0x12, 0x35, 0xf1, 0x79, 0x15, 0x61, 0x3e, 0x98, 0xcb,
	0xd9, 0x8a, 0xf9, 0x12, 0xf2, 0x9d, 0x15, 0x36, 0xd5, 0x79, 0xaf, 0xbb, 0x40, 0x85, 0x51, 0x3f,
	0x01, 0x61, 0x91, 0xa8, 0xe5, 0x28, 0x6c, 0x16, 0x3d, 0x87, 0x04, 0x2d, 0x34, 0x73, 0xeb, 0x14,
	0xa1, 0x96, 0x04, 0x31, 0x5f, 0xc2, 0xe0, 0xe2, 0x17, 0x4f, 0xa8, 0x47, 0x7b, 0xf0, 0x85, 0x5d,
	0x23, 0xbd, 0x1a, 0x95, 0xc5, 0xcf, 0xdc, 0x8a, 0xdd, 0x3b, 0x8d, 0x6b, 0x54, 0xe5, 0x38, 0xdb,
	0x14, 0x6e, 0x6e, 0x0c, 0xb3, 0xe4, 0x6a, 0xef, 0x83, 0x46, 0x50, 0x3e, 0x65, 0x40, 0x09, 0x85,
	0x18, 0x75, 0xd7, 0x9e, 0x49, 0x71, 0xd7, 0xde, 0x89, 0x90, 0x71, 0xd7, 0xfe, 0x4d, 0x50, 0x82,
	0x10, 0x23, 0x57, 0x94, 0x5d, 0xe6, 0xae, 0xbc, 0x14, 0x23, 0x4c, 0x60, 0xcc, 0xc1, 0x30, 0x62,
	0x3f, 0x7e, 0x96, 0xbc, 0x7d, 0x36, 0xd1, 0x7d, 0xc0, 0x4a, 0x0e, 0x0d, 0xc3, 0xbb, 0x12, 0x94,
	0x6c, 0x0a, 0x36, 0x37, 0xea, 0xd3, 0xbf, 0x50, 0x11, 0x16, 0x80, 0xf9, 0x1c, 0x5d, 0xc6, 0x4f,
	0xd5, 0xbe, 0x68, 0x13, 0xcf, 0x12, 0x92, 0xbc, 0xdf, 0xbb, 0x40, 0x29, 0x6e, 0x31, 0x01, 0xb3,
	0xbf, 0xdd, 0xf2, 0xdc, 0xc2, 0x64, 0x99, 0x64, 0x9f, 0x46, 0x01, 0x98, 0xcd, 0x15, 0xe9, 0x7c,
	0xe1, 0x2b, 0x0c, 0xb6, 0xa9, 0xa7, 0x4f, 0xa8, 0x83, 0x5d, 0xfc, 0xbf, 0x29, 0x02, 0xc0, 0xbf,
	0x76, 0xb3, 0xfe, 0x93, 0xb9, 0xe7, 0x18, 0x50, 0x66, 0xf9, 0xad, 0x21, 0xc8, 0x3a, 0x6f, 0x1a,
	0x5a, 0x7f, 0x95, 0xc0, 0x33, 0x3b, 0xc5, 0x93, 0xdb, 0xfa, 0x24, 0x78, 0xd7, 0x29, 0x82, 0x17,
	0x5a, 0x7e, 0xa8, 0xc8, 0x03, 0xe9, 0x6f, 0x98, 0x91, 0x7f, 0xfa, 0xe7, 0xd8, 0x69, 0xd7, 0x1c,
	0xef, 0xac, 0x6a, 0x13, 0x52, 0xf5, 0xde, 0x9a, 0x6a, 0xf2, 0x51, 0xf6, 0x31, 0x1c, 0x1c, 0x61,
	0x00, 0x30, 0x7f, 0x56, 0x08, 0xce, 0xa5, 0x07, 0x75, 0xfc, 0xdc, 0x50, 0x66, 0x9c, 0x5a, 0x15,
	0x41, 0x80, 0xa5, 0xf4, 0x75, 0x17, 0x4f, 0x0d, 0xbe, 0x11, 0x93, 0xe6, 0x87, 0x8e, 0x2a, 0x59,
	0xe7, 0x5b, 0xf1, 0x08, 0xe5, 0x65, 0x70, 0x69, 0x1a, 0x94, 0xab, 0x3f, 0xb2, 0xfd, 0xaa, 0xd1,
	0xc7, 0xf0, 0x1f, 0x18, 0x50, 0x66, 0xf9, 0xc5, 0x09, 0x2b, 0x6f, 0x53, 0xfd, 0x18, 0x45, 0x66,
	0x3a, 0x36, 0x23, 0xde, 0xd2, 0xc9, 0x50, 0x1e, 0xcb, 0x8f, 0x57, 0x50, 0x88, 0x2e, 0xf1, 0x3c,
	0x93, 0x1d, 0xd1, 0x8f, 0x35, 0x3e, 0x1f, 0x67, 0x40, 0x99, 0xe5, 0xc7, 0x27, 0xac, 0x58, 0xa6,
	0xfa, 0x5d, 0x8a, 0xcc, 0x58, 0xbe, 0xa4, 0x08, 0xe5, 0x1e, 0xcb, 0x2f, 0x57, 0x20, 0x8c, 0x16,
	0x71, 0x63, 0xc1, 0x08, 0xfe, 0x67, 0x06, 0x94, 0xd2, 0x2f, 0xad, 0xc3, 0xf9, 0x69, 0x5e, 0xa1,
	0xd6, 0x43, 0xec, 0x1e, 0x36, 0x7d, 0x03, 0x82, 0x51, 0x9b, 0x22, 0xbc, 0x0d, 0xa1, 0xf3, 0xc5,
	0x7a, 0x8f, 0x40, 0xbf, 0x6b, 0xaf, 0x76, 0xfe, 0x29, 0x7e, 0xe6, 0x86, 0xf6, 0x75, 0xe8, 0x4a,
	0xfa, 0x77, 0xed, 0x55, 0xe5, 0x38, 0x7d, 0xe7, 0x08, 0x91, 0xf6, 0x34, 0x4c, 0x27, 0xc8, 0xf0,
	0x9f, 0x98, 0x54, 0x0f, 0x7b, 0xa3, 0xaa, 0x05, 0x76, 0xbc, 0x1d, 0xcf, 0x86, 0x7b, 0xbc, 0xd9,
	0x9a, 0xc8, 0x2d, 0xde, 0x16, 0x45, 0x58, 0x0b, 0x67, 0x93, 0xa7, 0xf9, 0xf5, 0x97, 0xc5, 0x2d,
	0x54, 0x2e, 0xcc, 0xfc, 0xf8, 0x38, 0x6e, 0x85, 0x08, 0x59, 0x08, 0xbd, 0x36, 0x42, 0x02, 0xc6,
	0x80, 0x3b, 0x74, 0x9a, 0xf8, 0x3f, 0x57, 0x80, 0x62, 0xe3, 0x7c, 0x14, 0xfe, 0x99, 0x01, 0x15,
	0xb6, 0xc7, 0x82, 0xa1, 0xd7, 0xa9, 0x43, 0xec, 0x0f, 0xef, 0x78, 0x9e, 0xc9, 0xd8, 0x86, 0xcc,
	0xdc, 0x47, 0x8a, 0xb0, 0x04, 0x42, 0xe7, 0x4b, 0xc6, 0x9e, 0x14, 0x65, 0x88, 0x82, 0xd7, 0xbc,
	0xaf, 0x64, 0x93, 0x32, 0xb4, 0x38, 0xab, 0x89, 0x9f, 0x23, 0x57, 0x7f, 0x64, 0x78, 0x3c, 0x1f,
	0x57, 0x1b, 0x0e, 0x0c, 0xd2, 0x40, 0x5d, 0x2e, 0xc7, 0x33, 0xc8, 0xfa, 0x7b, 0x9e, 0x70, 0x61,
	0xca, 0x27, 0xa9, 0x6c, 0x2f, 0x89, 0x7a, 0x16, 0x65, 0x69, 0x45, 0xa8, 0xfc, 0x86, 0x51, 0x84,
	0x97, 0xe0, 0x1c, 0x27, 0x49, 0xe6, 0xe3, 0xa3, 0x9e, 0x8c, 0xb5, 0x88, 0xf4, 0x5d, 0xde, 0x40,
	0x4e, 0x48, 0xaf, 0xfe, 0xc8, 0xf8, 0xfc, 0x71, 0x75, 0x3d, 0xc1, 0xb5, 0x1a, 0x47, 0x8d, 0x35,
	0xb6, 0xc4, 0x18, 0x50, 0x61, 0x3b, 0x24, 0xb7, 0x4e, 0x78, 0xea, 0xf7, 0x10, 0xad, 0x13, 0x9e,
	0xe6, 0x49, 0x43, 0x6f, 0x07, 0x83, 0x66, 0xdc, 0x79, 0x96, 0xef, 0x49, 0x51, 0x86, 0xc8, 0xde,
	0xea, 0x79, 0x33, 0xe7, 0x64, 0x6b, 0x64, 0x9e, 0x77, 0x39, 0x1e, 0x5e, 0x7c, 0x38, 0xb3, 0xdf,
	0xcf, 0x28, 0xc2, 0x1a, 0x98, 0xe2, 0xb5, 0x48, 0x16, 0xbf, 0xb4, 0x8b, 0xe7, 0x3f, 0x4b, 0xfd,
	0x23, 0x90, 0x00, 0x1c, 0x7e, 0x27, 0x12, 0x50, 0x4a, 0xbf, 0x31, 0x68, 0xd5, 0xd1, 0x29, 0xde,
	0x36, 0xb4, 0xea, 0xe8, 0x54, 0xcf, 0x13, 0x7a, 0x4f, 0x31, 0x8a, 0xb0, 0x0a, 0xba, 0xd3, 0xbd,
	0x81, 0xe8, 0x49, 0x5b, 0x83, 0x28, 0xdf, 0x0c, 0x73, 0x2f, 0x04, 0xf0, 0x7f, 0x33, 0xa0, 0xdc,
	0x7a, 0x1d, 0xc3, 0xa9, 0xb3, 0x1d, 0x6f, 0xef, 0x39, 0x75, 0xb6, 0xf3, 0x29, 0x3d, 0xef, 0x59,
	0x46, 0x11, 0x5e, 0x85, 0x96, 0x14, 0x56, 0xf3, 0x0e, 0x2a, 0x4d, 0x75, 0xf6, 0x26, 0x88, 0xfc,
	0x75, 0x30, 0x37, 0x5a, 0x0f, 0xfe, 0x0f, 0x06, 0x54, 0xd8, 0x5e, 0x33, 0xb3, 0xae, 0xed, 0xd4,
	0xaf, 0xa8, 0x59, 0xd7, 0x76, 0x9a, 0xe7, 0xd0, 0xbc, 0x07, 0x18, 0xa2, 0xcd, 0xed, 0x0f, 0xae,
	0x79, 0x52, 0x94, 0xe1, 0x69, 0xe5, 0x1e, 0xc2, 0xb4, 0x6a, 0x0b, 0xdb, 0x86, 0xe2, 0x43, 0x5d,
	0xd8, 0x4e, 0xda, 0xac, 0x0b, 0x3b, 0x73, 0xfd, 0x23, 0x58, 0xd8, 0xf8, 0x19, 0x26, 0x1f, 0xc3,
	0xf1, 0x5f, 0xcc, 0x01, 0x45, 0x7a, 0xf8, 0x00, 0xde, 0x64, 0x40, 0xb9, 0xf5, 0x10, 0xc7, 0x2a,
	0xfe, 0x29, 0x5f, 0x5b, 0xf1, 0x78, 0x33, 0x35, 0x21, 0x8c, 0xf9, 0x3b, 0x45, 0x98, 0xa3, 0xef,
	0x11, 0x70, 0x34, 0xc0, 0x63, 0xf9, 0x86, 0x68, 0x5e, 0xe5, 0xad, 0x1e, 0x1b, 0xcd, 0xe6, 0x2f,
	0x22, 0xe0, 0x5d, 0x43, 0xb9, 0x35, 0xda, 0x6f, 0x45, 0x3a, 0xe5, 0xd3, 0x0d, 0x1e, 0x6f, 0xa6,
	0x26, 0x04, 0xe9, 0x5d, 0x08, 0x69, 0xfa, 0x8d, 0x07, 0x8f, 0xe5, 0x1b, 0x42, 0x5a, 0xf0, 0xbc,
	0x34, 0x4e, 0xa4, 0xab, 0x3f, 0x32, 0xf3, 0xcf, 0x90, 0xdd, 0xf9, 0x3f, 0x0c, 0x98, 0x95, 0xe6,
	0x8a, 0x39, 0xe4, 0xb2, 0xdf, 0xef, 0x36, 0xf4, 0xd0, 0xb2, 0x31, 0xb5, 0x25, 0xc4, 0xb5, 0x5b,
	0x14, 0x52, 0xfa, 0x4b, 0xf1, 0x9e, 0xec, 0x4d, 0x10, 0x1f, 0x6a, 0xe0, 0x78, 0x27, 0x0f, 0x26,
	0x19, 0xf0, 0x74, 0xda, 0x48, 0x2f, 0xac, 0x1c, 0xd3, 0x0d, 0x61, 0x9d, 0xf6, 0xaa, 0x31, 0xb6,
	0x26, 0xd4, 0x37, 0x23, 0xd3, 0x93, 0x2e, 0x8e, 0xec, 0x49, 0x5b, 0x83, 0x49, 0xe5, 0xc6, 0x4d,
	0xea, 0xff, 0x63, 0xf0, 0x43, 0xb4, 0x8e, 0xcb, 0x50, 0x70, 0x89, 0x7d, 0xd2, 0xd2, 0xdd, 0xc9,
	0xf2, 0x2c, 0x1d, 0x43, 0x4b, 0x42, 0x5e, 0x27, 0xd6, 0x43, 0x78, 0xe6, 0xf0, 0x84, 0x91, 0x1f,
	0x32, 0xeb, 0x3e, 0x60, 0x04, 0xe3, 0x3c, 0x59, 0xea, 0x11, 0xad, 0xaf, 0xc2, 0xda, 0x07, 0x11,
	0x6f, 0x5d, 0x3d, 0xc1, 0xcf, 0x5d, 0x58, 0xc6, 0x53, 0xdc, 0xc3, 0x71, 0xca, 0x78, 0xfa, 0x8b,
	0x41, 0x4e, 0x19, 0xcf, 0x70, 0xb1, 0xc7, 0x7b, 0x8d, 0x51, 0x84, 0x77, 0xa0, 0xe5, 0xaa, 0xa6,
	0xd3, 0x9c, 0x5a, 0x58, 0x32, 0x8e, 0xb6, 0x88, 0x3d, 0xbf, 0x83, 0xaf, 0x3e, 0x10, 0x7b, 0xcc,
	0xf8, 0x69, 0x87, 0xe1, 0x7c, 0x3a, 0x65, 0x84, 0x73, 0x2a, 0xab, 0xb4, 0x52, 0xb2, 0x6c, 0x4c,
	0x6d, 0x09, 0x83, 0x14, 0xda, 0x11, 0x4d, 0x2f, 0x27, 0x99, 0xeb, 0x11, 0x23, 0xea, 0x3c, 0x39,
	0x91, 0x13, 0x4d, 0x1d, 0x7e, 0xe5, 0x02, 0x4f, 0xa7, 0xbd, 0xb4, 0x65, 0x55, 0x0b, 0xd9, 0xee,
	0x91, 0x59, 0xd5, 0x42, 0xd6, 0x9b, 0x60, 0xde, 0x6f, 0xb1, 0xc0, 0xd0, 0x11, 0x96, 0x6c, 0x02,
	0x33, 0xf6, 0xb6, 0x88, 0x4f, 0xeb, 0x3d, 0x39, 0x12, 0x18, 0x8d, 0x53, 0xff, 0x97, 0xc1, 0xbf,
	0x51, 0x67, 0xcf, 0xac, 0x87, 0x8b, 0xd3, 0xa8, 0x0a, 0x07, 0x7f, 0x96, 0x64, 0x6f, 0x98, 0x4a,
	0xa5, 0x18, 0x42, 0x60, 0xcb, 0xb7, 0xf6, 0x64, 0xa9, 0x1f, 0x9f, 0x4a, 0x49, 0xe9, 0xda, 0x98,
	0x3a, 0xf5, 0x8a, 0xcb, 0xf6, 0x70, 0xb5, 0x49, 0xff, 0xd2, 0xb4, 0x5a, 0xc2, 0xc1, 0x01, 0x6e,
	0x2c, 0x4d, 0x09, 0x0f, 0x6e, 0x32, 0x8a, 0xb0, 0x01, 0x2e, 0x74, 0xde, 0xf7, 0x49, 0xc1, 0x89,
	0x31, 0xb5, 0x42, 0xfc, 0x78, 0x17, 0x6e, 0xcf, 0xbd, 0xab, 0x67, 0xb2, 0xe9, 0x80, 0xf1, 0xea,
	0x94, 0x43, 0x4c, 0x96, 0xa6, 0xd5, 0x15, 0x99, 0xd9, 0x94, 0xf9, 0x3e, 0x87, 0x55, 0xab, 0xa4,
	0x17, 0x95, 0xcc, 0xf5, 0xe3, 0xd3, 0x2a, 0x99, 0x45, 0x45, 0x5b, 0x2b, 0xd7, 0x5d, 0xc0, 0x9d,
	0x2e, 0xd1, 0x1f, 0x2e, 0xcb, 0xa0, 0x26, 0x1c, 0xac, 0xa8, 0x1c, 0x5b, 0x63, 0xc2, 0x8c, 0xdb,
	0x58, 0x66, 0x9c, 0x7b, 0xf9, 0x54, 0x32, 0x33, 0x96, 0x56, 0x88, 0x31, 0xef, 0x7b, 0x1e, 0xa6,
	0xcc, 0x68, 0xfc, 0xfa, 0x17, 0x06, 0x54, 0xd8, 0x32, 0xe4, 0xad, 0xfb, 0xc2, 0xd4, 0x49, 0xf8,
	0xd6, 0x7d, 0x61, 0x9a, 0x14, 0x7b, 0xef, 0xdf, 0x23, 0xf7, 0xcb, 0x48, 0xd7, 0x8f, 0x0d, 0x5c,
	0xa7, 0x33, 0xf6, 0x3d, 0x69, 0x6b, 0x10, 0xed, 0x2f, 0x7a, 0x9f, 0x1b, 0xaf, 0x0a, 0x0d, 0x22,
	0x3c, 0x34, 0xb2, 0x6e, 0xba, 0x40, 0x85, 0x2d, 0xc5, 0xda, 0x4a, 0x56, 0xea, 0xac, 0x6e, 0x2b,
	0x59, 0x69, 0x72, 0xb4, 0xbd, 0xff, 0x85, 0x51, 0x84, 0xdd, 0x90, 0xa7, 0x13, 0xc0, 0xd5, 0x8b,
	0xbd, 0x89, 0x23, 0x77, 0xd5, 0xbe, 0x6e, 0x2c, 0xe7, 0x95, 0x2c, 0x3d, 0xb9, 0xb1, 0x81, 0x63,
	0x38, 0xf1, 0xce, 0x73, 0x1f, 0x7d, 0x10, 0x2f, 0x1a, 0xe0, 0xce, 0x87, 0x28, 0x07, 0xd5, 0x11,
	0x44, 0x28, 0xdf, 0xe9, 0x02, 0x53, 0xc8, 0x41, 0x22, 0xec, 0x60, 0xcc, 0xcf, 0x9e, 0x14, 0x47,
	0xa0, 0x29, 0x0f, 0x0c, 0x6c, 0xa7, 0xb6, 0xde, 0xb5, 0x8a, 0xe0, 0xf5, 0xb0, 0xf1, 0x93, 0x5f,
	0x8c, 0x2a, 0x87, 0x85, 0x4d, 0x75, 0x95, 0x6c, 0xa2, 0xab, 0x37, 0x36, 0x78, 0x32, 0x22, 0x05,
	0x1a, 0xd0, 0xef, 0xe3, 0xc7, 0x4f, 0x7e, 0x11, 0xbf, 0x7d, 0x0c, 0x51, 0xe8, 0x86, 0x33, 0x6d,
	0x14, 0xee, 0x26, 0xa3, 0x7f, 0x08, 0xf2, 0x37, 0x05, 0x9b, 0x1b, 0xa1, 0xe5, 0x20, 0x96, 0x3a,
	0x40, 0xf4, 0xb8, 0x9d, 0x15, 0x64, 0xfc, 0x97, 0x15, 0x61, 0x81, 0x67, 0xbe, 0x63, 0xfc, 0x50,
	0x70, 0xaf, 0x64, 0x1b, 0x7e, 0x06, 0x7c, 0xca, 0xce, 0xe0, 0x60, 0x73, 0xa3, 0xbf, 0x8b, 0x51,
	0x84, 0x53, 0x0c, 0x5c, 0x08, 0x66, 0xfb, 0xeb, 0x65, 0x96, 0x04, 0xf8, 0xd9, 0x8d, 0x81, 0xe6,
	0x40, 0xa3, 0x14, 0x41, 0x87, 0x6f, 0xb5, 0xe1, 0x7a, 0xbe, 0x60, 0xc5, 0xf2, 0x15, 0xcb, 0x6b,
	0xbc, 0x40, 0x83, 0x10, 0x68, 0x09, 0x56, 0xef, 0x5d, 0xc5, 0x31, 0x0c, 0x3f, 0x35, 0xd0, 0xd2,
	0x12, 0x0a, 0xd6, 0xa3, 0x87, 0x89, 0xab, 0x3f, 0x90, 0xc3, 0xcd, 0x3e, 0x47, 0xc9, 0xb6, 0x67,
	0xc0, 0x02, 0x00, 0x84, 0x96, 0xe0, 0x7a, 0xa9, 0x4d, 0x68, 0x8d, 0xee, 0x86, 0x4f, 0x15, 0xb9,
	0x3c, 0x65, 0xfa, 0x51, 0x00, 0x6a, 0xc7, 0xba, 0x76, 0x4e, 0x05, 0xe5, 0x96, 0x46, 0xbf, 0xda,
	0x59, 0x88, 0x7e, 0xec, 0x74, 0xe5, 0xff, 0x0f, 0x00, 0x00, 0xff, 0xff, 0xe4, 0x30, 0x9b, 0x96,
	0xe4, 0x93, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BCSProjectClient is the client API for BCSProject service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BCSProjectClient interface {
	CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error)
	GetProject(ctx context.Context, in *GetProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error)
	UpdateProject(ctx context.Context, in *UpdateProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error)
	DeleteProject(ctx context.Context, in *DeleteProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error)
	ListProjects(ctx context.Context, in *ListProjectsRequest, opts ...grpc.CallOption) (*ListProjectsResponse, error)
	ListAuthorizedProjects(ctx context.Context, in *ListAuthorizedProjReq, opts ...grpc.CallOption) (*ListAuthorizedProjResp, error)
}

type bCSProjectClient struct {
	cc *grpc.ClientConn
}

func NewBCSProjectClient(cc *grpc.ClientConn) BCSProjectClient {
	return &bCSProjectClient{cc}
}

func (c *bCSProjectClient) CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error) {
	out := new(ProjectResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.BCSProject/CreateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bCSProjectClient) GetProject(ctx context.Context, in *GetProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error) {
	out := new(ProjectResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.BCSProject/GetProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bCSProjectClient) UpdateProject(ctx context.Context, in *UpdateProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error) {
	out := new(ProjectResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.BCSProject/UpdateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bCSProjectClient) DeleteProject(ctx context.Context, in *DeleteProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error) {
	out := new(ProjectResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.BCSProject/DeleteProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bCSProjectClient) ListProjects(ctx context.Context, in *ListProjectsRequest, opts ...grpc.CallOption) (*ListProjectsResponse, error) {
	out := new(ListProjectsResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.BCSProject/ListProjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bCSProjectClient) ListAuthorizedProjects(ctx context.Context, in *ListAuthorizedProjReq, opts ...grpc.CallOption) (*ListAuthorizedProjResp, error) {
	out := new(ListAuthorizedProjResp)
	err := c.cc.Invoke(ctx, "/bcsproject.BCSProject/ListAuthorizedProjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BCSProjectServer is the server API for BCSProject service.
type BCSProjectServer interface {
	CreateProject(context.Context, *CreateProjectRequest) (*ProjectResponse, error)
	GetProject(context.Context, *GetProjectRequest) (*ProjectResponse, error)
	UpdateProject(context.Context, *UpdateProjectRequest) (*ProjectResponse, error)
	DeleteProject(context.Context, *DeleteProjectRequest) (*ProjectResponse, error)
	ListProjects(context.Context, *ListProjectsRequest) (*ListProjectsResponse, error)
	ListAuthorizedProjects(context.Context, *ListAuthorizedProjReq) (*ListAuthorizedProjResp, error)
}

// UnimplementedBCSProjectServer can be embedded to have forward compatible implementations.
type UnimplementedBCSProjectServer struct {
}

func (*UnimplementedBCSProjectServer) CreateProject(ctx context.Context, req *CreateProjectRequest) (*ProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProject not implemented")
}
func (*UnimplementedBCSProjectServer) GetProject(ctx context.Context, req *GetProjectRequest) (*ProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProject not implemented")
}
func (*UnimplementedBCSProjectServer) UpdateProject(ctx context.Context, req *UpdateProjectRequest) (*ProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProject not implemented")
}
func (*UnimplementedBCSProjectServer) DeleteProject(ctx context.Context, req *DeleteProjectRequest) (*ProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProject not implemented")
}
func (*UnimplementedBCSProjectServer) ListProjects(ctx context.Context, req *ListProjectsRequest) (*ListProjectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProjects not implemented")
}
func (*UnimplementedBCSProjectServer) ListAuthorizedProjects(ctx context.Context, req *ListAuthorizedProjReq) (*ListAuthorizedProjResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAuthorizedProjects not implemented")
}

func RegisterBCSProjectServer(s *grpc.Server, srv BCSProjectServer) {
	s.RegisterService(&_BCSProject_serviceDesc, srv)
}

func _BCSProject_CreateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BCSProjectServer).CreateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.BCSProject/CreateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BCSProjectServer).CreateProject(ctx, req.(*CreateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BCSProject_GetProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BCSProjectServer).GetProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.BCSProject/GetProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BCSProjectServer).GetProject(ctx, req.(*GetProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BCSProject_UpdateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BCSProjectServer).UpdateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.BCSProject/UpdateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BCSProjectServer).UpdateProject(ctx, req.(*UpdateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BCSProject_DeleteProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BCSProjectServer).DeleteProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.BCSProject/DeleteProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BCSProjectServer).DeleteProject(ctx, req.(*DeleteProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BCSProject_ListProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProjectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BCSProjectServer).ListProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.BCSProject/ListProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BCSProjectServer).ListProjects(ctx, req.(*ListProjectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BCSProject_ListAuthorizedProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAuthorizedProjReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BCSProjectServer).ListAuthorizedProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.BCSProject/ListAuthorizedProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BCSProjectServer).ListAuthorizedProjects(ctx, req.(*ListAuthorizedProjReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _BCSProject_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bcsproject.BCSProject",
	HandlerType: (*BCSProjectServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateProject",
			Handler:    _BCSProject_CreateProject_Handler,
		},
		{
			MethodName: "GetProject",
			Handler:    _BCSProject_GetProject_Handler,
		},
		{
			MethodName: "UpdateProject",
			Handler:    _BCSProject_UpdateProject_Handler,
		},
		{
			MethodName: "DeleteProject",
			Handler:    _BCSProject_DeleteProject_Handler,
		},
		{
			MethodName: "ListProjects",
			Handler:    _BCSProject_ListProjects_Handler,
		},
		{
			MethodName: "ListAuthorizedProjects",
			Handler:    _BCSProject_ListAuthorizedProjects_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bcsproject.proto",
}

// NamespaceClient is the client API for Namespace service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NamespaceClient interface {
	CreateNamespace(ctx context.Context, in *CreateNamespaceRequest, opts ...grpc.CallOption) (*CreateNamespaceResponse, error)
	CreateNamespaceCallback(ctx context.Context, in *NamespaceCallbackRequest, opts ...grpc.CallOption) (*NamespaceCallbackResponse, error)
	UpdateNamespace(ctx context.Context, in *UpdateNamespaceRequest, opts ...grpc.CallOption) (*UpdateNamespaceResponse, error)
	UpdateNamespaceCallback(ctx context.Context, in *NamespaceCallbackRequest, opts ...grpc.CallOption) (*NamespaceCallbackResponse, error)
	GetNamespace(ctx context.Context, in *GetNamespaceRequest, opts ...grpc.CallOption) (*GetNamespaceResponse, error)
	ListNamespaces(ctx context.Context, in *ListNamespacesRequest, opts ...grpc.CallOption) (*ListNamespacesResponse, error)
	DeleteNamespace(ctx context.Context, in *DeleteNamespaceRequest, opts ...grpc.CallOption) (*DeleteNamespaceResponse, error)
	DeleteNamespaceCallback(ctx context.Context, in *NamespaceCallbackRequest, opts ...grpc.CallOption) (*NamespaceCallbackResponse, error)
}

type namespaceClient struct {
	cc *grpc.ClientConn
}

func NewNamespaceClient(cc *grpc.ClientConn) NamespaceClient {
	return &namespaceClient{cc}
}

func (c *namespaceClient) CreateNamespace(ctx context.Context, in *CreateNamespaceRequest, opts ...grpc.CallOption) (*CreateNamespaceResponse, error) {
	out := new(CreateNamespaceResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Namespace/CreateNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *namespaceClient) CreateNamespaceCallback(ctx context.Context, in *NamespaceCallbackRequest, opts ...grpc.CallOption) (*NamespaceCallbackResponse, error) {
	out := new(NamespaceCallbackResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Namespace/CreateNamespaceCallback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *namespaceClient) UpdateNamespace(ctx context.Context, in *UpdateNamespaceRequest, opts ...grpc.CallOption) (*UpdateNamespaceResponse, error) {
	out := new(UpdateNamespaceResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Namespace/UpdateNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *namespaceClient) UpdateNamespaceCallback(ctx context.Context, in *NamespaceCallbackRequest, opts ...grpc.CallOption) (*NamespaceCallbackResponse, error) {
	out := new(NamespaceCallbackResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Namespace/UpdateNamespaceCallback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *namespaceClient) GetNamespace(ctx context.Context, in *GetNamespaceRequest, opts ...grpc.CallOption) (*GetNamespaceResponse, error) {
	out := new(GetNamespaceResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Namespace/GetNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *namespaceClient) ListNamespaces(ctx context.Context, in *ListNamespacesRequest, opts ...grpc.CallOption) (*ListNamespacesResponse, error) {
	out := new(ListNamespacesResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Namespace/ListNamespaces", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *namespaceClient) DeleteNamespace(ctx context.Context, in *DeleteNamespaceRequest, opts ...grpc.CallOption) (*DeleteNamespaceResponse, error) {
	out := new(DeleteNamespaceResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Namespace/DeleteNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *namespaceClient) DeleteNamespaceCallback(ctx context.Context, in *NamespaceCallbackRequest, opts ...grpc.CallOption) (*NamespaceCallbackResponse, error) {
	out := new(NamespaceCallbackResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Namespace/DeleteNamespaceCallback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NamespaceServer is the server API for Namespace service.
type NamespaceServer interface {
	CreateNamespace(context.Context, *CreateNamespaceRequest) (*CreateNamespaceResponse, error)
	CreateNamespaceCallback(context.Context, *NamespaceCallbackRequest) (*NamespaceCallbackResponse, error)
	UpdateNamespace(context.Context, *UpdateNamespaceRequest) (*UpdateNamespaceResponse, error)
	UpdateNamespaceCallback(context.Context, *NamespaceCallbackRequest) (*NamespaceCallbackResponse, error)
	GetNamespace(context.Context, *GetNamespaceRequest) (*GetNamespaceResponse, error)
	ListNamespaces(context.Context, *ListNamespacesRequest) (*ListNamespacesResponse, error)
	DeleteNamespace(context.Context, *DeleteNamespaceRequest) (*DeleteNamespaceResponse, error)
	DeleteNamespaceCallback(context.Context, *NamespaceCallbackRequest) (*NamespaceCallbackResponse, error)
}

// UnimplementedNamespaceServer can be embedded to have forward compatible implementations.
type UnimplementedNamespaceServer struct {
}

func (*UnimplementedNamespaceServer) CreateNamespace(ctx context.Context, req *CreateNamespaceRequest) (*CreateNamespaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNamespace not implemented")
}
func (*UnimplementedNamespaceServer) CreateNamespaceCallback(ctx context.Context, req *NamespaceCallbackRequest) (*NamespaceCallbackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNamespaceCallback not implemented")
}
func (*UnimplementedNamespaceServer) UpdateNamespace(ctx context.Context, req *UpdateNamespaceRequest) (*UpdateNamespaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNamespace not implemented")
}
func (*UnimplementedNamespaceServer) UpdateNamespaceCallback(ctx context.Context, req *NamespaceCallbackRequest) (*NamespaceCallbackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNamespaceCallback not implemented")
}
func (*UnimplementedNamespaceServer) GetNamespace(ctx context.Context, req *GetNamespaceRequest) (*GetNamespaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNamespace not implemented")
}
func (*UnimplementedNamespaceServer) ListNamespaces(ctx context.Context, req *ListNamespacesRequest) (*ListNamespacesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNamespaces not implemented")
}
func (*UnimplementedNamespaceServer) DeleteNamespace(ctx context.Context, req *DeleteNamespaceRequest) (*DeleteNamespaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNamespace not implemented")
}
func (*UnimplementedNamespaceServer) DeleteNamespaceCallback(ctx context.Context, req *NamespaceCallbackRequest) (*NamespaceCallbackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNamespaceCallback not implemented")
}

func RegisterNamespaceServer(s *grpc.Server, srv NamespaceServer) {
	s.RegisterService(&_Namespace_serviceDesc, srv)
}

func _Namespace_CreateNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNamespaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NamespaceServer).CreateNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Namespace/CreateNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NamespaceServer).CreateNamespace(ctx, req.(*CreateNamespaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Namespace_CreateNamespaceCallback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NamespaceCallbackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NamespaceServer).CreateNamespaceCallback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Namespace/CreateNamespaceCallback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NamespaceServer).CreateNamespaceCallback(ctx, req.(*NamespaceCallbackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Namespace_UpdateNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNamespaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NamespaceServer).UpdateNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Namespace/UpdateNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NamespaceServer).UpdateNamespace(ctx, req.(*UpdateNamespaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Namespace_UpdateNamespaceCallback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NamespaceCallbackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NamespaceServer).UpdateNamespaceCallback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Namespace/UpdateNamespaceCallback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NamespaceServer).UpdateNamespaceCallback(ctx, req.(*NamespaceCallbackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Namespace_GetNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNamespaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NamespaceServer).GetNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Namespace/GetNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NamespaceServer).GetNamespace(ctx, req.(*GetNamespaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Namespace_ListNamespaces_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNamespacesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NamespaceServer).ListNamespaces(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Namespace/ListNamespaces",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NamespaceServer).ListNamespaces(ctx, req.(*ListNamespacesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Namespace_DeleteNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNamespaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NamespaceServer).DeleteNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Namespace/DeleteNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NamespaceServer).DeleteNamespace(ctx, req.(*DeleteNamespaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Namespace_DeleteNamespaceCallback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NamespaceCallbackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NamespaceServer).DeleteNamespaceCallback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Namespace/DeleteNamespaceCallback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NamespaceServer).DeleteNamespaceCallback(ctx, req.(*NamespaceCallbackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Namespace_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bcsproject.Namespace",
	HandlerType: (*NamespaceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateNamespace",
			Handler:    _Namespace_CreateNamespace_Handler,
		},
		{
			MethodName: "CreateNamespaceCallback",
			Handler:    _Namespace_CreateNamespaceCallback_Handler,
		},
		{
			MethodName: "UpdateNamespace",
			Handler:    _Namespace_UpdateNamespace_Handler,
		},
		{
			MethodName: "UpdateNamespaceCallback",
			Handler:    _Namespace_UpdateNamespaceCallback_Handler,
		},
		{
			MethodName: "GetNamespace",
			Handler:    _Namespace_GetNamespace_Handler,
		},
		{
			MethodName: "ListNamespaces",
			Handler:    _Namespace_ListNamespaces_Handler,
		},
		{
			MethodName: "DeleteNamespace",
			Handler:    _Namespace_DeleteNamespace_Handler,
		},
		{
			MethodName: "DeleteNamespaceCallback",
			Handler:    _Namespace_DeleteNamespaceCallback_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bcsproject.proto",
}

// VariableClient is the client API for Variable service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VariableClient interface {
	CreateVariable(ctx context.Context, in *CreateVariableRequest, opts ...grpc.CallOption) (*CreateVariableResponse, error)
	UpdateVariable(ctx context.Context, in *UpdateVariableRequest, opts ...grpc.CallOption) (*UpdateVariableResponse, error)
	ListVariableDefinitions(ctx context.Context, in *ListVariableDefinitionsRequest, opts ...grpc.CallOption) (*ListVariableDefinitionsResponse, error)
	DeleteVariableDefinitions(ctx context.Context, in *DeleteVariableDefinitionsRequest, opts ...grpc.CallOption) (*DeleteVariableDefinitionsResponse, error)
	ListClustersVariables(ctx context.Context, in *ListClustersVariablesRequest, opts ...grpc.CallOption) (*ListClustersVariablesResponse, error)
	ListNamespacesVariables(ctx context.Context, in *ListNamespacesVariablesRequest, opts ...grpc.CallOption) (*ListNamespacesVariablesResponse, error)
	UpdateClustersVariables(ctx context.Context, in *UpdateClustersVariablesRequest, opts ...grpc.CallOption) (*UpdateClustersVariablesResponse, error)
	UpdateNamespacesVariables(ctx context.Context, in *UpdateNamespacesVariablesRequest, opts ...grpc.CallOption) (*UpdateNamespacesVariablesResponse, error)
	ListClusterVariables(ctx context.Context, in *ListClusterVariablesRequest, opts ...grpc.CallOption) (*ListClusterVariablesResponse, error)
	ListNamespaceVariables(ctx context.Context, in *ListNamespaceVariablesRequest, opts ...grpc.CallOption) (*ListNamespaceVariablesResponse, error)
	UpdateClusterVariables(ctx context.Context, in *UpdateClusterVariablesRequest, opts ...grpc.CallOption) (*UpdateClusterVariablesResponse, error)
	UpdateNamespaceVariables(ctx context.Context, in *UpdateNamespaceVariablesRequest, opts ...grpc.CallOption) (*UpdateNamespaceVariablesResponse, error)
	ImportVariables(ctx context.Context, in *ImportVariablesRequest, opts ...grpc.CallOption) (*ImportVariablesResponse, error)
	RenderVariables(ctx context.Context, in *RenderVariablesRequest, opts ...grpc.CallOption) (*RenderVariablesResponse, error)
}

type variableClient struct {
	cc *grpc.ClientConn
}

func NewVariableClient(cc *grpc.ClientConn) VariableClient {
	return &variableClient{cc}
}

func (c *variableClient) CreateVariable(ctx context.Context, in *CreateVariableRequest, opts ...grpc.CallOption) (*CreateVariableResponse, error) {
	out := new(CreateVariableResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Variable/CreateVariable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *variableClient) UpdateVariable(ctx context.Context, in *UpdateVariableRequest, opts ...grpc.CallOption) (*UpdateVariableResponse, error) {
	out := new(UpdateVariableResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Variable/UpdateVariable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *variableClient) ListVariableDefinitions(ctx context.Context, in *ListVariableDefinitionsRequest, opts ...grpc.CallOption) (*ListVariableDefinitionsResponse, error) {
	out := new(ListVariableDefinitionsResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Variable/ListVariableDefinitions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *variableClient) DeleteVariableDefinitions(ctx context.Context, in *DeleteVariableDefinitionsRequest, opts ...grpc.CallOption) (*DeleteVariableDefinitionsResponse, error) {
	out := new(DeleteVariableDefinitionsResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Variable/DeleteVariableDefinitions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *variableClient) ListClustersVariables(ctx context.Context, in *ListClustersVariablesRequest, opts ...grpc.CallOption) (*ListClustersVariablesResponse, error) {
	out := new(ListClustersVariablesResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Variable/ListClustersVariables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *variableClient) ListNamespacesVariables(ctx context.Context, in *ListNamespacesVariablesRequest, opts ...grpc.CallOption) (*ListNamespacesVariablesResponse, error) {
	out := new(ListNamespacesVariablesResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Variable/ListNamespacesVariables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *variableClient) UpdateClustersVariables(ctx context.Context, in *UpdateClustersVariablesRequest, opts ...grpc.CallOption) (*UpdateClustersVariablesResponse, error) {
	out := new(UpdateClustersVariablesResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Variable/UpdateClustersVariables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *variableClient) UpdateNamespacesVariables(ctx context.Context, in *UpdateNamespacesVariablesRequest, opts ...grpc.CallOption) (*UpdateNamespacesVariablesResponse, error) {
	out := new(UpdateNamespacesVariablesResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Variable/UpdateNamespacesVariables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *variableClient) ListClusterVariables(ctx context.Context, in *ListClusterVariablesRequest, opts ...grpc.CallOption) (*ListClusterVariablesResponse, error) {
	out := new(ListClusterVariablesResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Variable/ListClusterVariables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *variableClient) ListNamespaceVariables(ctx context.Context, in *ListNamespaceVariablesRequest, opts ...grpc.CallOption) (*ListNamespaceVariablesResponse, error) {
	out := new(ListNamespaceVariablesResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Variable/ListNamespaceVariables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *variableClient) UpdateClusterVariables(ctx context.Context, in *UpdateClusterVariablesRequest, opts ...grpc.CallOption) (*UpdateClusterVariablesResponse, error) {
	out := new(UpdateClusterVariablesResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Variable/UpdateClusterVariables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *variableClient) UpdateNamespaceVariables(ctx context.Context, in *UpdateNamespaceVariablesRequest, opts ...grpc.CallOption) (*UpdateNamespaceVariablesResponse, error) {
	out := new(UpdateNamespaceVariablesResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Variable/UpdateNamespaceVariables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *variableClient) ImportVariables(ctx context.Context, in *ImportVariablesRequest, opts ...grpc.CallOption) (*ImportVariablesResponse, error) {
	out := new(ImportVariablesResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Variable/ImportVariables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *variableClient) RenderVariables(ctx context.Context, in *RenderVariablesRequest, opts ...grpc.CallOption) (*RenderVariablesResponse, error) {
	out := new(RenderVariablesResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Variable/RenderVariables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VariableServer is the server API for Variable service.
type VariableServer interface {
	CreateVariable(context.Context, *CreateVariableRequest) (*CreateVariableResponse, error)
	UpdateVariable(context.Context, *UpdateVariableRequest) (*UpdateVariableResponse, error)
	ListVariableDefinitions(context.Context, *ListVariableDefinitionsRequest) (*ListVariableDefinitionsResponse, error)
	DeleteVariableDefinitions(context.Context, *DeleteVariableDefinitionsRequest) (*DeleteVariableDefinitionsResponse, error)
	ListClustersVariables(context.Context, *ListClustersVariablesRequest) (*ListClustersVariablesResponse, error)
	ListNamespacesVariables(context.Context, *ListNamespacesVariablesRequest) (*ListNamespacesVariablesResponse, error)
	UpdateClustersVariables(context.Context, *UpdateClustersVariablesRequest) (*UpdateClustersVariablesResponse, error)
	UpdateNamespacesVariables(context.Context, *UpdateNamespacesVariablesRequest) (*UpdateNamespacesVariablesResponse, error)
	ListClusterVariables(context.Context, *ListClusterVariablesRequest) (*ListClusterVariablesResponse, error)
	ListNamespaceVariables(context.Context, *ListNamespaceVariablesRequest) (*ListNamespaceVariablesResponse, error)
	UpdateClusterVariables(context.Context, *UpdateClusterVariablesRequest) (*UpdateClusterVariablesResponse, error)
	UpdateNamespaceVariables(context.Context, *UpdateNamespaceVariablesRequest) (*UpdateNamespaceVariablesResponse, error)
	ImportVariables(context.Context, *ImportVariablesRequest) (*ImportVariablesResponse, error)
	RenderVariables(context.Context, *RenderVariablesRequest) (*RenderVariablesResponse, error)
}

// UnimplementedVariableServer can be embedded to have forward compatible implementations.
type UnimplementedVariableServer struct {
}

func (*UnimplementedVariableServer) CreateVariable(ctx context.Context, req *CreateVariableRequest) (*CreateVariableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVariable not implemented")
}
func (*UnimplementedVariableServer) UpdateVariable(ctx context.Context, req *UpdateVariableRequest) (*UpdateVariableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateVariable not implemented")
}
func (*UnimplementedVariableServer) ListVariableDefinitions(ctx context.Context, req *ListVariableDefinitionsRequest) (*ListVariableDefinitionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListVariableDefinitions not implemented")
}
func (*UnimplementedVariableServer) DeleteVariableDefinitions(ctx context.Context, req *DeleteVariableDefinitionsRequest) (*DeleteVariableDefinitionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVariableDefinitions not implemented")
}
func (*UnimplementedVariableServer) ListClustersVariables(ctx context.Context, req *ListClustersVariablesRequest) (*ListClustersVariablesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListClustersVariables not implemented")
}
func (*UnimplementedVariableServer) ListNamespacesVariables(ctx context.Context, req *ListNamespacesVariablesRequest) (*ListNamespacesVariablesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNamespacesVariables not implemented")
}
func (*UnimplementedVariableServer) UpdateClustersVariables(ctx context.Context, req *UpdateClustersVariablesRequest) (*UpdateClustersVariablesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateClustersVariables not implemented")
}
func (*UnimplementedVariableServer) UpdateNamespacesVariables(ctx context.Context, req *UpdateNamespacesVariablesRequest) (*UpdateNamespacesVariablesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNamespacesVariables not implemented")
}
func (*UnimplementedVariableServer) ListClusterVariables(ctx context.Context, req *ListClusterVariablesRequest) (*ListClusterVariablesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListClusterVariables not implemented")
}
func (*UnimplementedVariableServer) ListNamespaceVariables(ctx context.Context, req *ListNamespaceVariablesRequest) (*ListNamespaceVariablesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNamespaceVariables not implemented")
}
func (*UnimplementedVariableServer) UpdateClusterVariables(ctx context.Context, req *UpdateClusterVariablesRequest) (*UpdateClusterVariablesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateClusterVariables not implemented")
}
func (*UnimplementedVariableServer) UpdateNamespaceVariables(ctx context.Context, req *UpdateNamespaceVariablesRequest) (*UpdateNamespaceVariablesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNamespaceVariables not implemented")
}
func (*UnimplementedVariableServer) ImportVariables(ctx context.Context, req *ImportVariablesRequest) (*ImportVariablesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportVariables not implemented")
}
func (*UnimplementedVariableServer) RenderVariables(ctx context.Context, req *RenderVariablesRequest) (*RenderVariablesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RenderVariables not implemented")
}

func RegisterVariableServer(s *grpc.Server, srv VariableServer) {
	s.RegisterService(&_Variable_serviceDesc, srv)
}

func _Variable_CreateVariable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVariableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VariableServer).CreateVariable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Variable/CreateVariable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VariableServer).CreateVariable(ctx, req.(*CreateVariableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Variable_UpdateVariable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateVariableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VariableServer).UpdateVariable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Variable/UpdateVariable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VariableServer).UpdateVariable(ctx, req.(*UpdateVariableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Variable_ListVariableDefinitions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListVariableDefinitionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VariableServer).ListVariableDefinitions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Variable/ListVariableDefinitions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VariableServer).ListVariableDefinitions(ctx, req.(*ListVariableDefinitionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Variable_DeleteVariableDefinitions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVariableDefinitionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VariableServer).DeleteVariableDefinitions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Variable/DeleteVariableDefinitions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VariableServer).DeleteVariableDefinitions(ctx, req.(*DeleteVariableDefinitionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Variable_ListClustersVariables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListClustersVariablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VariableServer).ListClustersVariables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Variable/ListClustersVariables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VariableServer).ListClustersVariables(ctx, req.(*ListClustersVariablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Variable_ListNamespacesVariables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNamespacesVariablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VariableServer).ListNamespacesVariables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Variable/ListNamespacesVariables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VariableServer).ListNamespacesVariables(ctx, req.(*ListNamespacesVariablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Variable_UpdateClustersVariables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateClustersVariablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VariableServer).UpdateClustersVariables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Variable/UpdateClustersVariables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VariableServer).UpdateClustersVariables(ctx, req.(*UpdateClustersVariablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Variable_UpdateNamespacesVariables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNamespacesVariablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VariableServer).UpdateNamespacesVariables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Variable/UpdateNamespacesVariables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VariableServer).UpdateNamespacesVariables(ctx, req.(*UpdateNamespacesVariablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Variable_ListClusterVariables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListClusterVariablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VariableServer).ListClusterVariables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Variable/ListClusterVariables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VariableServer).ListClusterVariables(ctx, req.(*ListClusterVariablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Variable_ListNamespaceVariables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNamespaceVariablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VariableServer).ListNamespaceVariables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Variable/ListNamespaceVariables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VariableServer).ListNamespaceVariables(ctx, req.(*ListNamespaceVariablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Variable_UpdateClusterVariables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateClusterVariablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VariableServer).UpdateClusterVariables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Variable/UpdateClusterVariables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VariableServer).UpdateClusterVariables(ctx, req.(*UpdateClusterVariablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Variable_UpdateNamespaceVariables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNamespaceVariablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VariableServer).UpdateNamespaceVariables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Variable/UpdateNamespaceVariables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VariableServer).UpdateNamespaceVariables(ctx, req.(*UpdateNamespaceVariablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Variable_ImportVariables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportVariablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VariableServer).ImportVariables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Variable/ImportVariables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VariableServer).ImportVariables(ctx, req.(*ImportVariablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Variable_RenderVariables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenderVariablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VariableServer).RenderVariables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Variable/RenderVariables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VariableServer).RenderVariables(ctx, req.(*RenderVariablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Variable_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bcsproject.Variable",
	HandlerType: (*VariableServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateVariable",
			Handler:    _Variable_CreateVariable_Handler,
		},
		{
			MethodName: "UpdateVariable",
			Handler:    _Variable_UpdateVariable_Handler,
		},
		{
			MethodName: "ListVariableDefinitions",
			Handler:    _Variable_ListVariableDefinitions_Handler,
		},
		{
			MethodName: "DeleteVariableDefinitions",
			Handler:    _Variable_DeleteVariableDefinitions_Handler,
		},
		{
			MethodName: "ListClustersVariables",
			Handler:    _Variable_ListClustersVariables_Handler,
		},
		{
			MethodName: "ListNamespacesVariables",
			Handler:    _Variable_ListNamespacesVariables_Handler,
		},
		{
			MethodName: "UpdateClustersVariables",
			Handler:    _Variable_UpdateClustersVariables_Handler,
		},
		{
			MethodName: "UpdateNamespacesVariables",
			Handler:    _Variable_UpdateNamespacesVariables_Handler,
		},
		{
			MethodName: "ListClusterVariables",
			Handler:    _Variable_ListClusterVariables_Handler,
		},
		{
			MethodName: "ListNamespaceVariables",
			Handler:    _Variable_ListNamespaceVariables_Handler,
		},
		{
			MethodName: "UpdateClusterVariables",
			Handler:    _Variable_UpdateClusterVariables_Handler,
		},
		{
			MethodName: "UpdateNamespaceVariables",
			Handler:    _Variable_UpdateNamespaceVariables_Handler,
		},
		{
			MethodName: "ImportVariables",
			Handler:    _Variable_ImportVariables_Handler,
		},
		{
			MethodName: "RenderVariables",
			Handler:    _Variable_RenderVariables_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bcsproject.proto",
}

// HealthzClient is the client API for Healthz service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HealthzClient interface {
	Healthz(ctx context.Context, in *HealthzRequest, opts ...grpc.CallOption) (*HealthzResponse, error)
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
}

type healthzClient struct {
	cc *grpc.ClientConn
}

func NewHealthzClient(cc *grpc.ClientConn) HealthzClient {
	return &healthzClient{cc}
}

func (c *healthzClient) Healthz(ctx context.Context, in *HealthzRequest, opts ...grpc.CallOption) (*HealthzResponse, error) {
	out := new(HealthzResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Healthz/Healthz", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *healthzClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, "/bcsproject.Healthz/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HealthzServer is the server API for Healthz service.
type HealthzServer interface {
	Healthz(context.Context, *HealthzRequest) (*HealthzResponse, error)
	Ping(context.Context, *PingRequest) (*PingResponse, error)
}

// UnimplementedHealthzServer can be embedded to have forward compatible implementations.
type UnimplementedHealthzServer struct {
}

func (*UnimplementedHealthzServer) Healthz(ctx context.Context, req *HealthzRequest) (*HealthzResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Healthz not implemented")
}
func (*UnimplementedHealthzServer) Ping(ctx context.Context, req *PingRequest) (*PingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}

func RegisterHealthzServer(s *grpc.Server, srv HealthzServer) {
	s.RegisterService(&_Healthz_serviceDesc, srv)
}

func _Healthz_Healthz_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthzRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealthzServer).Healthz(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Healthz/Healthz",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealthzServer).Healthz(ctx, req.(*HealthzRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Healthz_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealthzServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcsproject.Healthz/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealthzServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Healthz_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bcsproject.Healthz",
	HandlerType: (*HealthzServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Healthz",
			Handler:    _Healthz_Healthz_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _Healthz_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bcsproject.proto",
}
